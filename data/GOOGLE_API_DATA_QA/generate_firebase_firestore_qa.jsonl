{"question": "Firestore 감사 로깅을 구성할 때 어떤 서비스 이름을 사용해야 하나요?", "answer": "Firestore 감사 로깅을 구성할 때 서비스 이름으로 `datastore.googleapis.com`을 사용하여 `datastore.googleapis.com` 및 `firestore.googleapis.com`을 모두 구성해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/audit-logging?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_audit-logging_hl=ko.txt"}
{"question": "Firestore API의 로그에서 `processing_duration` 필드는 무엇을 나타내나요?", "answer": "`processing_duration` 필드는 데이터베이스가 요청을 처리하는 데 걸린 시간을 설명하며, 최종 사용자 지연 시간보다 작고 네트워크 오버헤드를 포함하지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/audit-logging?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_audit-logging_hl=ko.txt"}
{"question": "Firestore의 데이터 액세스 감사 로그를 사용 설정하려면 어떤 권한이 필요하나요?", "answer": "Firestore의 데이터 액세스 감사 로그를 사용 설정하려면 `DATA_READ` 권한이 필요합니다.", "sources": ["https://cloud.google.com/firestore/docs/audit-logging?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_audit-logging_hl=ko.txt"}
{"question": "`google.firestore.admin.v1.FirestoreAdmin.BulkDeleteDocuments` 메서드는 어떤 감사 로그 유형을 생성하나요?", "answer": "`google.firestore.admin.v1.FirestoreAdmin.BulkDeleteDocuments` 메서드는 관리자 활동 감사 로그를 생성합니다.", "sources": ["https://cloud.google.com/firestore/docs/audit-logging?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_audit-logging_hl=ko.txt"}
{"question": "Firestore의 `Listen` 메서드는 어떤 감사 로그 유형을 생성하나요?", "answer": "Firestore의 `Listen` 메서드는 데이터 액세스 감사 로그를 생성합니다.", "sources": ["https://cloud.google.com/firestore/docs/audit-logging?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_audit-logging_hl=ko.txt"}
{"question": "`google.firestore.admin.v1.FirestoreAdmin.CreateDatabase` 메서드에 대한 필터는 무엇인가요?", "answer": "`google.firestore.admin.v1.FirestoreAdmin.CreateDatabase` 메서드에 대한 필터는 `protoPayload.methodName=\"google.firestore.admin.v1.FirestoreAdmin.CreateDatabase`입니다.", "sources": ["https://cloud.google.com/firestore/docs/audit-logging?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_audit-logging_hl=ko.txt"}
{"question": "Firestore의 `GetDocument` 메서드를 호출하기 위해 필요한 권한은 무엇인가요?", "answer": "`GetDocument` 메서드를 호출하기 위해 필요한 권한은 `datastore.entities.get`입니다.", "sources": ["https://cloud.google.com/firestore/docs/audit-logging?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_audit-logging_hl=ko.txt"}
{"question": "Firestore의 `RunQuery` 메서드는 어떤 유형의 작업인가요?", "answer": "`RunQuery` 메서드는 수명이 짧은 스트리밍 RPC입니다.", "sources": ["https://cloud.google.com/firestore/docs/audit-logging?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_audit-logging_hl=ko.txt"}
{"question": "Firestore 감사 로그에서 요청 호출자를 식별하기 위해 어떤 필드를 참조해야 하나요?", "answer": "요청 호출자를 식별하기 위해 `AuditLog` 객체 내의 `AuthenticationInfo` 필드를 참조해야 하며, 여기에는 사용자의 `principalEmail`이 포함될 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/audit-logging?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_audit-logging_hl=ko.txt"}
{"question": "Firestore의 `BatchWrite` 메서드는 어떤 감사 로그 유형을 생성하나요?", "answer": "`BatchWrite` 메서드는 데이터 액세스 감사 로그를 생성합니다.", "sources": ["https://cloud.google.com/firestore/docs/audit-logging?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_audit-logging_hl=ko.txt"}
{"question": "Firestore에서 백업 일정을 어떻게 설정하나요?", "answer": "Firestore에서 백업 일정을 설정하려면 Google Cloud 콘솔, gcloud 명령어, Firebase CLI 또는 Terraform을 사용할 수 있습니다. 예를 들어, gcloud를 사용하여 일일 백업 일정을 만들려면 다음 명령어를 사용합니다: ``` gcloud firestore backups schedules create \\ --database='DATABASE_ID' \\ --recurrence=daily \\ --retention=RETENTION_PERIOD ``` 여기서 DATABASE_ID는 백업할 데이터베이스의 ID이며, RETENTION_PERIOD는 최대 14주(14w)로 설정할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/backups?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_backups_hl=ko.txt"}
{"question": "Firestore에서 주간 백업 일정을 설정하는 방법은 무엇인가요?", "answer": "주간 백업 일정을 설정하려면 gcloud 명령어에서 --recurrence 플래그를 weekly로 설정합니다. 예를 들어: ``` gcloud firestore backups schedules create \\ --database='DATABASE_ID' \\ --recurrence=weekly \\ --retention=RETENTION_PERIOD \\ --day-of-week=DAY ``` DAY는 백업을 수행할 요일을 지정합니다.", "sources": ["https://cloud.google.com/firestore/docs/backups?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_backups_hl=ko.txt"}
{"question": "Firestore에서 백업 일정을 삭제하는 방법은 무엇인가요?", "answer": "백업 일정을 삭제하려면 gcloud 명령어를 사용하여 다음과 같이 입력합니다: ``` gcloud firestore backups schedules delete \\ --database='DATABASE_ID' \\ --backup-schedule=BACKUP_SCHEDULE_ID ``` 여기서 DATABASE_ID는 데이터베이스의 ID이고, BACKUP_SCHEDULE_ID는 삭제할 백업 일정의 ID입니다.", "sources": ["https://cloud.google.com/firestore/docs/backups?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_backups_hl=ko.txt"}
{"question": "Firestore에서 백업을 복원하는 방법은 무엇인가요?", "answer": "Firestore에서 백업을 복원하려면 gcloud 명령어를 사용하여 다음과 같이 입력합니다: ``` gcloud firestore databases restore \\ --source-backup=projects/PROJECT_ID/locations/LOCATION/backups/BACKUP_ID \\ --destination-database='DATABASE_ID' ``` 여기서 PROJECT_ID는 프로젝트 ID, LOCATION은 데이터베이스 백업 위치, BACKUP_ID는 복원할 백업의 ID입니다.", "sources": ["https://cloud.google.com/firestore/docs/backups?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_backups_hl=ko.txt"}
{"question": "Firestore에서 백업의 세부정보를 확인하는 방법은 무엇인가요?", "answer": "Firestore에서 백업의 세부정보를 확인하려면 gcloud 명령어를 사용하여 다음과 같이 입력합니다: ``` gcloud firestore backups describe \\ --location=LOCATION \\ --backup=BACKUP_ID ``` 여기서 LOCATION은 데이터베이스의 위치이고, BACKUP_ID는 확인할 백업의 ID입니다.", "sources": ["https://cloud.google.com/firestore/docs/backups?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_backups_hl=ko.txt"}
{"question": "Firestore에서 백업을 삭제하는 방법은 무엇인가요?", "answer": "Firestore에서 백업을 삭제하려면 gcloud 명령어를 사용하여 다음과 같이 입력합니다: ``` gcloud firestore backups delete \\ --location=LOCATION \\ --backup=BACKUP_ID ``` 여기서 LOCATION은 데이터베이스의 위치이고, BACKUP_ID는 삭제할 백업의 ID입니다.", "sources": ["https://cloud.google.com/firestore/docs/backups?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_backups_hl=ko.txt"}
{"question": "Firestore 백업의 보관 기간을 설정하는 방법은 무엇인가요?", "answer": "Firestore 백업의 보관 기간은 백업 일정을 설정할 때 지정할 수 있습니다. 예를 들어, gcloud 명령어에서 --retention 플래그를 사용하여 보관 기간을 설정합니다. 최대 14주(14w)로 설정할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/backups?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_backups_hl=ko.txt"}
{"question": "Firestore에서 백업 일정을 업데이트하는 방법은 무엇인가요?", "answer": "Firestore에서 백업 일정을 업데이트하려면 gcloud 명령어를 사용하여 다음과 같이 입력합니다: ``` gcloud firestore backups schedules update \\ --database='DATABASE_ID' \\ --backup-schedule=BACKUP_SCHEDULE_ID \\ --retention=RETENTION_PERIOD ``` 여기서 DATABASE_ID는 데이터베이스의 ID이고, BACKUP_SCHEDULE_ID는 업데이트할 백업 일정의 ID입니다.", "sources": ["https://cloud.google.com/firestore/docs/backups?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_backups_hl=ko.txt"}
{"question": "Firestore에서 백업 일정을 나열하는 방법은 무엇인가요?", "answer": "Firestore에서 백업 일정을 나열하려면 gcloud 명령어를 사용하여 다음과 같이 입력합니다: ``` gcloud firestore backups schedules list \\ --database='DATABASE_ID' ``` 여기서 DATABASE_ID는 데이터베이스의 ID입니다.", "sources": ["https://cloud.google.com/firestore/docs/backups?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_backups_hl=ko.txt"}
{"question": "Firestore에서 백업을 수동으로 삭제하는 방법은 무엇인가요?", "answer": "Firestore에서 백업을 수동으로 삭제하려면 Google Cloud 콘솔에서 데이터베이스 페이지로 이동한 후, 예약된 백업 열에서 삭제할 백업을 선택하고 삭제를 클릭합니다.", "sources": ["https://cloud.google.com/firestore/docs/backups?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_backups_hl=ko.txt"}
{"question": "클라이언트 측 trace를 사용하여 Firestore 요청을 모니터링하는 방법은 무엇인가요?", "answer": "클라이언트 라이브러리에서 trace를 사용 설정하면 Firestore 요청을 엔드 투 엔드로 모니터링하고 디버그할 수 있습니다. 클라이언트 측 추적은 애플리케이션에서 경험한 성능에 관한 신호와 문제 디버깅에 도움이 되는 통계를 제공합니다.", "sources": ["https://cloud.google.com/firestore/docs/client-side-traces?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_client-side-traces_hl=ko.txt"}
{"question": "OpenTelemetry API를 사용하여 trace를 수집기로 내보내는 방법은 무엇인가요?", "answer": "OpenTelemetry API를 사용하여 trace를 수집기로 내보내려면, 다음과 같은 코드를 사용할 수 있습니다. Java 예시에서는 OtlpGrpcSpanExporter를 사용하여 10% 샘플링 비율로 스팬을 내보냅니다. ```java Resource resource = Resource .getDefault().merge(Resource.builder().put(SERVICE_NAME, \"My App\").build()); OtlpGrpcSpanExporter otlpGrpcSpanExporter = OtlpGrpcSpanExporter .builder() .setEndpoint(\"http://localhost:4317\") // Replace with your OTLP endpoint .build(); BatchSpanProcessor otlpGrpcSpanProcessor = BatchSpanProcessor.builder(otlpGrpcSpanExporter).build(); OpenTelemetrySdk otel = OpenTelemetrySdk.builder() .setTracerProvider( SdkTracerProvider.builder() .setResource(resource) .addSpanProcessor(otlpGrpcSpanProcessor) .setSampler(Sampler.traceIdRatioBased(0.1)) .build()) .build(); ```", "sources": ["https://cloud.google.com/firestore/docs/client-side-traces?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_client-side-traces_hl=ko.txt"}
{"question": "클라이언트 측 trace의 제한사항은 무엇인가요?", "answer": "클라이언트 측 trace는 Java 및 Node.js 클라이언트 라이브러리에서만 사용할 수 있으며, 실시간 리스너의 추적 범위를 생성하지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/client-side-traces?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_client-side-traces_hl=ko.txt"}
{"question": "Firestore에서 클라이언트 측 trace를 사용하기 전에 확인해야 할 사항은 무엇인가요?", "answer": "앱이 관측 가능성 백엔드에 trace를 쓰는 서비스 계정을 필요한 IAM 역할로 설정해야 하며, 이 프로젝트에 Trace API가 사용 설정되어 있는지 확인해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/client-side-traces?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_client-side-traces_hl=ko.txt"}
{"question": "OpenTelemetry API를 사용하여 관측 가능성 백엔드로 직접 trace를 내보내는 방법은 무엇인가요?", "answer": "OpenTelemetry API를 사용하여 관측 가능성 백엔드로 직접 trace를 내보내려면, 다음과 같은 코드를 사용할 수 있습니다. Java 예시에서는 TraceExporter를 사용하여 10% 샘플링 비율로 trace 스팬을 내보냅니다. ```java Resource resource = Resource .getDefault().merge(Resource.builder().put(SERVICE_NAME, \"My App\").build()); SpanExporter gcpTraceExporter = TraceExporter.createWithDefaultConfiguration(); SpanProcessor gcpBatchSpanProcessor = BatchSpanProcessor.builder(gcpTraceExporter).build(); OpenTelemetrySdk otel = OpenTelemetrySdk.builder() .setTracerProvider(SdkTracerProvider.builder() .setResource(resource) .addSpanProcessor(gcpBatchSpanProcessor) .setSampler(Sampler.traceIdRatioBased(0.1)) .build()) .build(); ```", "sources": ["https://cloud.google.com/firestore/docs/client-side-traces?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_client-side-traces_hl=ko.txt"}
{"question": "제로 코드 계측을 설정하는 방법은 무엇인가요?", "answer": "제로 코드 계측을 설정하려면 JavaScript 계측에 관한 OpenTelemetry 안내를 따르며, 다음과 같은 환경 변수를 설정하여 트레이스를 전송할 수 있습니다. ```bash env \\ FIRESTORE_ENABLE_TRACING=ON \\ OTEL_TRACES_EXPORTER=otlp \\ OTEL_NODE_ENABLED_INSTRUMENTATIONS=\"http,grpc\" \\ OTEL_NODE_RESOURCE_DETECTORS=\"none\" \\ node --require @opentelemetry/auto-instrumentations-node/register my_app.js ```", "sources": ["https://cloud.google.com/firestore/docs/client-side-traces?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_client-side-traces_hl=ko.txt"}
{"question": "클라이언트 측 trace를 사용하여 수집기를 설정하는 방법은 무엇인가요?", "answer": "클라이언트 측 trace를 수집기로 내보내기 위해서는 OpenTelemetry 수집기를 설정하고, OTLP 메시지를 수신하여 관측 가능성 백엔드로 내보내도록 구성해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/client-side-traces?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_client-side-traces_hl=ko.txt"}
{"question": "클라이언트 측 trace의 비용은 어떻게 청구되나요?", "answer": "Firestore 사용량 외에도 클라이언트 측 추적 시 비용이 청구될 수 있으며, 트레이스 수집 또는 OpenTelemetry 프레임워크 사용에는 요금이 부과되지 않지만, 관측 가능성 백엔드로 trace 스팬을 수집하는 데 비용이 청구될 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/client-side-traces?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_client-side-traces_hl=ko.txt"}
{"question": "OpenTelemetry를 사용하여 Node.js에서 trace를 설정하는 방법은 무엇인가요?", "answer": "Node.js에서 OpenTelemetry를 사용하여 trace를 설정하려면, 다음과 같은 코드를 사용할 수 있습니다. ```javascript import { trace } from \"@opentelemetry/api\"; import { GrpcInstrumentation } from '@opentelemetry/instrumentation-grpc'; import pkg1 from \"@opentelemetry/sdk-trace-node\"; import pkg2 from \"@opentelemetry/instrumentation\"; import pkg3 from \"@opentelemetry/exporter-trace-otlp-grpc\"; const { NodeTracerProvider, BatchSpanProcessor, TraceIdRatioBasedSampler } = pkg1; const { registerInstrumentations } = pkg2; const { OTLPTraceExporter } = pkg3; provider.addSpanProcessor(new BatchSpanProcessor(new OTLPTraceExporter())); provider.register(); ```", "sources": ["https://cloud.google.com/firestore/docs/client-side-traces?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_client-side-traces_hl=ko.txt"}
{"question": "클라이언트 측 trace의 예시를 보여줄 수 있나요?", "answer": "클라이언트 측 trace의 예시는 Cloud Trace에 trace 정보가 표시되는 방식을 보여줍니다. 가능한 속성과 값에 대한 자세한 내용은 Trace 스팬 속성 및 이벤트를 참조하세요.", "sources": ["https://cloud.google.com/firestore/docs/client-side-traces?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_client-side-traces_hl=ko.txt"}
{"question": "Firestore에서 문서 내에 중첩 데이터를 어떻게 구조화할 수 있나요?", "answer": "Firestore에서는 문서 내에 배열 또는 지도 등의 복합 객체를 중첩할 수 있습니다. 예를 들어, 채팅 앱에서 사용자가 가장 최근에 입장한 대화방 3개를 프로필에 중첩 목록으로 저장할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/concepts/structure-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_concepts_structure-data_hl=ko.txt"}
{"question": "하위 컬렉션의 장점은 무엇인가요?", "answer": "하위 컬렉션을 사용하면 데이터가 시간에 따라 증가하더라도 상위 문서의 크기는 그대로 유지됩니다. 또한 하위 컬렉션에서 모든 쿼리 기능을 사용할 수 있으며, 하위 컬렉션 간에 컬렉션 그룹 쿼리를 실행할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/concepts/structure-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_concepts_structure-data_hl=ko.txt"}
{"question": "루트 수준 컬렉션의 사용 사례는 무엇인가요?", "answer": "루트 수준 컬렉션은 다대다 관계에 적합하며, 각 컬렉션 내에서 강력한 쿼리를 제공합니다. 예를 들어, 사용자 컬렉션과 채팅방 및 메시지 컬렉션을 만들 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/concepts/structure-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_concepts_structure-data_hl=ko.txt"}
{"question": "문서 내에 중첩 데이터를 사용할 때의 제한사항은 무엇인가요?", "answer": "문서 내에 중첩 데이터를 사용할 경우, 시간이 지남에 따라 데이터가 증가하면 다른 옵션보다 확장성이 부족할 수 있습니다. 목록이 커지면 문서도 커지므로 문서 검색 속도가 느려질 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/concepts/structure-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_concepts_structure-data_hl=ko.txt"}
{"question": "하위 컬렉션을 삭제하는 것이 어려운 이유는 무엇인가요?", "answer": "하위 컬렉션은 손쉽게 삭제할 수 없기 때문에, 데이터 구조를 설계할 때 신중해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/concepts/structure-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_concepts_structure-data_hl=ko.txt"}
{"question": "Firestore에서 여러 컬렉션을 사용하는 이유는 무엇인가요?", "answer": "여러 컬렉션을 사용하면 데이터베이스의 구조를 더 잘 정리할 수 있으며, 각 데이터 세트에 대해 강력한 쿼리를 제공할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/concepts/structure-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_concepts_structure-data_hl=ko.txt"}
{"question": "문서 내에 배열을 중첩할 때의 장점은 무엇인가요?", "answer": "문서 안에 단순한 고정 데이터 목록을 보관하려는 경우 데이터 구조를 손쉽게 설정하고 간소화할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/concepts/structure-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_concepts_structure-data_hl=ko.txt"}
{"question": "Firestore에서 데이터 구조를 설계할 때 고려해야 할 점은 무엇인가요?", "answer": "데이터 구조를 설계할 때는 사용 사례에 따라 각 옵션의 장점과 제한사항을 잘 생각해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/concepts/structure-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_concepts_structure-data_hl=ko.txt"}
{"question": "Firestore에서 문서와 하위 컬렉션의 관계는 어떻게 되나요?", "answer": "문서 내에 하위 컬렉션을 만들 수 있으며, 이는 데이터가 시간에 따라 증가할 가능성이 있는 경우에 유용합니다.", "sources": ["https://cloud.google.com/firestore/docs/concepts/structure-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_concepts_structure-data_hl=ko.txt"}
{"question": "Firestore에서 데이터 구조화의 기본 개념은 무엇인가요?", "answer": "Firestore에서 데이터 구조화는 문서, 여러 컬렉션, 문서 내의 하위 컬렉션을 사용하여 데이터를 정리하고 분류하는 것입니다.", "sources": ["https://cloud.google.com/firestore/docs/concepts/structure-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_concepts_structure-data_hl=ko.txt"}
{"question": "Firestore 데이터베이스를 만들기 위해 필요한 첫 번째 단계는 무엇인가요?", "answer": "Firestore 데이터베이스를 만들기 위해서는 Google Cloud 계정에 로그인하고, Google Cloud 콘솔에서 프로젝트를 선택하거나 새 프로젝트를 생성해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/create-database-server-client-library?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_create-database-server-client-library_hl=ko.txt"}
{"question": "Firestore 데이터베이스를 기본 모드로 만들기 위한 절차는 어떻게 되나요?", "answer": "Firestore 데이터베이스를 기본 모드로 만들기 위해서는 Firestore 뷰어로 이동하여 데이터베이스 서비스 선택 화면에서 기본 모드의 Firestore를 선택하고, Firestore 위치를 선택한 후 '데이터베이스 만들기'를 클릭해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/create-database-server-client-library?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_create-database-server-client-library_hl=ko.txt"}
{"question": "Firestore 클라이언트 라이브러리를 Java 프로젝트에 추가하는 방법은 무엇인가요?", "answer": "Java 프로젝트에 Firestore 클라이언트 라이브러리를 추가하려면 Maven을 사용하여 pom.xml 파일에 다음 의존성을 추가해야 합니다: ```xml <dependencyManagement> <dependencies> <dependency> <groupId>com.google.cloud</groupId> <artifactId>libraries-bom</artifactId> <version>26.64.0</version> <type>pom</type> <scope>import</scope> </dependency> </dependencies> </dependencyManagement> <dependencies> <dependency> <groupId>com.google.cloud</groupId> <artifactId>google-cloud-firestore</artifactId> </dependency> </dependencies> ```", "sources": ["https://cloud.google.com/firestore/docs/create-database-server-client-library?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_create-database-server-client-library_hl=ko.txt"}
{"question": "Firestore에 데이터를 추가하는 방법은 무엇인가요?", "answer": "Firestore에 데이터를 추가하려면, 컬렉션에 문서를 추가하고 데이터를 설정하는 코드를 사용합니다. 예를 들어, Java에서는 다음과 같이 작성합니다: ```java DocumentReference docRef = db.collection(\"users\").document(\"alovelace\"); Map<String, Object> data = new HashMap<>(); data.put(\"first\", \"Ada\"); data.put(\"last\", \"Lovelace\"); data.put(\"born\", 1815); ApiFuture<WriteResult> result = docRef.set(data); ```", "sources": ["https://cloud.google.com/firestore/docs/create-database-server-client-library?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_create-database-server-client-library_hl=ko.txt"}
{"question": "Firestore에서 데이터를 읽는 방법은 무엇인가요?", "answer": "Firestore에서 데이터를 읽으려면 `get` 메서드를 사용하여 전체 컬렉션을 검색할 수 있습니다. 예를 들어, Python에서는 다음과 같이 작성합니다: ```python users_ref = db.collection(\"users\") docs = users_ref.stream() for doc in docs: print(f\"{doc.id} => {doc.to_dict()}\") ```", "sources": ["https://cloud.google.com/firestore/docs/create-database-server-client-library?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_create-database-server-client-library_hl=ko.txt"}
{"question": "Firestore 클라이언트 라이브러리를 Python에 추가하는 방법은 무엇인가요?", "answer": "Python에 Firestore 클라이언트 라이브러리를 추가하려면 가상 환경을 설정한 후, 다음 명령어를 사용하여 설치합니다: ```bash pip install --upgrade google-cloud-firestore ```", "sources": ["https://cloud.google.com/firestore/docs/create-database-server-client-library?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_create-database-server-client-library_hl=ko.txt"}
{"question": "Firestore 클라이언트 라이브러리를 Node.js에 추가하는 방법은 무엇인가요?", "answer": "Node.js에 Firestore 클라이언트 라이브러리를 추가하려면 다음 명령어를 사용하여 설치합니다: ```bash npm install --save @google-cloud/firestore ```", "sources": ["https://cloud.google.com/firestore/docs/create-database-server-client-library?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_create-database-server-client-library_hl=ko.txt"}
{"question": "Firestore에서 비동기적으로 데이터를 추가하는 방법은 무엇인가요?", "answer": "Firestore에서 비동기적으로 데이터를 추가하려면 Python의 경우 다음과 같이 작성합니다: ```python doc_ref = db.collection(\"users\").document(\"alovelace\") await doc_ref.set({\"first\": \"Ada\", \"last\": \"Lovelace\", \"born\": 1815}) ```", "sources": ["https://cloud.google.com/firestore/docs/create-database-server-client-library?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_create-database-server-client-library_hl=ko.txt"}
{"question": "Firestore에서 문서를 추가할 때, 문서가 자동으로 생성되는 이유는 무엇인가요?", "answer": "Firestore는 문서에 데이터를 처음 추가할 때 암시적으로 컬렉션과 문서를 생성하기 때문에, 사용자가 명시적으로 만들 필요가 없습니다.", "sources": ["https://cloud.google.com/firestore/docs/create-database-server-client-library?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_create-database-server-client-library_hl=ko.txt"}
{"question": "Firestore에서 데이터베이스를 만들기 전에 확인해야 할 사항은 무엇인가요?", "answer": "Firestore 데이터베이스를 만들기 전에, 동일한 프로젝트에서 Firestore와 Datastore를 동시에 사용할 수 없다는 점을 확인해야 합니다. Datastore를 사용해야 하는 경우 Firestore를 다른 프로젝트에서 사용해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/create-database-server-client-library?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_create-database-server-client-library_hl=ko.txt"}
{"question": "Firestore 데이터베이스를 만들기 위해 Firebase Console에서 어떤 단계를 따라야 하나요?", "answer": "Firebase Console에서 프로젝트를 열고, 왼쪽 패널에서 '빌드'를 펼친 후 'Firestore 데이터베이스'를 선택합니다. '데이터베이스 만들기'를 클릭하고, 데이터베이스의 위치를 선택한 후 Firestore 보안 규칙의 시작 모드를 선택합니다. 마지막으로 '만들기'를 클릭합니다.", "sources": ["https://cloud.google.com/firestore/docs/create-database-web-mobile-client-library?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_create-database-web-mobile-client-library_hl=ko.txt"}
{"question": "Firestore의 보안 규칙에서 '테스트 모드'와 '잠금 모드'의 차이는 무엇인가요?", "answer": "'테스트 모드'는 모든 사용자가 데이터를 읽고 덮어쓸 수 있도록 허용하며, 모바일 및 웹 클라이언트 라이브러리를 시작할 때 유용합니다. 반면 '잠금 모드'는 모든 읽기 및 쓰기를 거부하며, 인증된 애플리케이션 서버에서는 데이터베이스에 계속 액세스할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/create-database-web-mobile-client-library?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_create-database-web-mobile-client-library_hl=ko.txt"}
{"question": "웹 버전 9에서 Firestore를 초기화하는 방법은 무엇인가요?", "answer": "웹 버전 9에서 Firestore를 초기화하려면 다음 코드를 사용합니다: ```javascript import { initializeApp } from \"firebase/app\"; import { getFirestore } from \"firebase/firestore\"; ```", "sources": ["https://cloud.google.com/firestore/docs/create-database-web-mobile-client-library?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_create-database-web-mobile-client-library_hl=ko.txt"}
{"question": "Android에서 Firestore 라이브러리를 추가하는 방법은 무엇인가요?", "answer": "Android에서 Firestore 라이브러리를 추가하려면 모듈(앱 수준) Gradle 파일에 다음 종속 항목을 선언합니다: ```groovy implementation(\"com.google.firebase:firebase-firestore:26.0.0\") ```", "sources": ["https://cloud.google.com/firestore/docs/create-database-web-mobile-client-library?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_create-database-web-mobile-client-library_hl=ko.txt"}
{"question": "Firestore에서 데이터를 추가하는 기본적인 코드 예시는 무엇인가요?", "answer": "Firestore에서 데이터를 추가하는 기본적인 코드 예시는 다음과 같습니다: ```javascript import { collection, addDoc } from \"firebase/firestore\"; const docRef = await addDoc(collection(db, \"users\"), { first: \"Ada\", last: \"Lovelace\", born: 1815 }); console.log(\"Document written with ID: \", docRef.id); ```", "sources": ["https://cloud.google.com/firestore/docs/create-database-web-mobile-client-library?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_create-database-web-mobile-client-library_hl=ko.txt"}
{"question": "Firestore에서 데이터를 가져오는 방법은 무엇인가요?", "answer": "Firestore에서 데이터를 가져오려면 다음과 같은 코드를 사용할 수 있습니다: ```javascript const querySnapshot = await getDocs(collection(db, \"users\")); querySnapshot.forEach((doc) => { console.log(`${doc.id} => ${doc.data()}`); }); ```", "sources": ["https://cloud.google.com/firestore/docs/create-database-web-mobile-client-library?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_create-database-web-mobile-client-library_hl=ko.txt"}
{"question": "C++에서 Firestore를 초기화하는 방법은 무엇인가요?", "answer": "C++에서 Firestore를 초기화하려면 다음 코드를 사용합니다: ```cpp using Firebase.Firestore; FirebaseFirestore db = FirebaseFirestore.DefaultInstance; ```", "sources": ["https://cloud.google.com/firestore/docs/create-database-web-mobile-client-library?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_create-database-web-mobile-client-library_hl=ko.txt"}
{"question": "Unity에서 Firestore를 설정할 때 'Error while merging dex archives' 오류를 방지하는 방법은 무엇인가요?", "answer": "Unity에서 'Error while merging dex archives' 오류를 방지하려면 빌드를 축소해야 합니다. 이 옵션은 Player Settings > Android > Publishing Settings > Minify에서 찾을 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/create-database-web-mobile-client-library?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_create-database-web-mobile-client-library_hl=ko.txt"}
{"question": "Firestore에서 문서를 추가할 때 발생할 수 있는 오류를 어떻게 처리하나요?", "answer": "Firestore에서 문서를 추가할 때 오류를 처리하려면 `addOnSuccessListener`와 `addOnFailureListener`를 사용하여 성공 및 실패를 처리할 수 있습니다. 예를 들어: ```java .addOnSuccessListener(new OnSuccessListener<DocumentReference>() { @Override public void onSuccess(DocumentReference documentReference) { Log.d(TAG, \"DocumentSnapshot added with ID: \" + documentReference.getId()); } }) .addOnFailureListener(new OnFailureListener() { @Override public void onFailure(@NonNull Exception e) { Log.w(TAG, \"Error adding document\", e); } }); ```", "sources": ["https://cloud.google.com/firestore/docs/create-database-web-mobile-client-library?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_create-database-web-mobile-client-library_hl=ko.txt"}
{"question": "Firestore의 데이터 모델에 대한 자세한 내용을 어디에서 확인할 수 있나요?", "answer": "Firestore의 데이터 모델에 대한 자세한 내용은 다음 링크에서 확인할 수 있습니다: [데이터 모델](https://cloud.google.com/firestore/native/docs/data-model?hl=ko).", "sources": ["https://cloud.google.com/firestore/docs/create-database-web-mobile-client-library?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_create-database-web-mobile-client-library_hl=ko.txt"}
{"question": "Firestore에서 문서를 생성하는 방법은 무엇인가요?", "answer": "Firestore에서 문서는 컬렉션에 저장되어야 하며, 데이터를 컬렉션 내의 문서에 할당하기만 하면 Firestore가 자동으로 문서를 생성합니다.", "sources": ["https://cloud.google.com/firestore/docs/data-model?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_data-model_hl=ko.txt"}
{"question": "Firestore에서 문서의 구조는 어떻게 되나요?", "answer": "Firestore의 문서는 값에 매핑되는 필드가 포함된 간단한 레코드로, 각 문서는 이름으로 식별됩니다. 문서는 부울, 숫자, 문자열, 지리 좌표, 바이너리 blob, 타임스탬프 등의 다양한 데이터 유형 값을 지원합니다.", "sources": ["https://cloud.google.com/firestore/docs/data-model?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_data-model_hl=ko.txt"}
{"question": "Firestore에서 하위 컬렉션을 사용하는 이유는 무엇인가요?", "answer": "하위 컬렉션은 특정 문서와 관련된 컬렉션으로, 문서가 가벼워야 하는 경우에 유용합니다. 예를 들어, 채팅방 문서에 많은 메시지를 포함하는 대신 하위 컬렉션을 사용하여 메시지를 저장하는 것이 좋습니다.", "sources": ["https://cloud.google.com/firestore/docs/data-model?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_data-model_hl=ko.txt"}
{"question": "Firestore에서 문서 참조를 만드는 방법은 무엇인가요?", "answer": "문서 참조는 데이터베이스 내 위치에 따라 고유하게 식별되며, 예를 들어 웹 버전에서는 `import { doc } from \"firebase/firestore\";`를 사용하여 문서 참조를 만들 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/data-model?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_data-model_hl=ko.txt"}
{"question": "Firestore에서 컬렉션 참조를 만드는 방법은 무엇인가요?", "answer": "컬렉션 참조는 특정 컬렉션을 가리키는 객체로, 예를 들어 웹 버전에서는 `import { collection } from \"firebase/firestore\";`를 사용하여 컬렉션 참조를 만들 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/data-model?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_data-model_hl=ko.txt"}
{"question": "Firestore에서 문서의 이름은 어떻게 관리되나요?", "answer": "컬렉션 내의 문서 이름은 고유해야 하며, 사용자 ID와 같은 고유한 키를 제공하거나 Firestore에서 임의 ID를 자동으로 만들도록 할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/data-model?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_data-model_hl=ko.txt"}
{"question": "Firestore에서 문서와 컬렉션의 관계는 무엇인가요?", "answer": "Firestore에서 문서는 컬렉션의 컨테이너로 저장되며, 컬렉션은 오로지 문서만 포함할 수 있습니다. 문서 내에 다른 컬렉션을 포함할 수는 없습니다.", "sources": ["https://cloud.google.com/firestore/docs/data-model?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_data-model_hl=ko.txt"}
{"question": "Firestore에서 문서의 최대 크기는 얼마인가요?", "answer": "Firestore에서 문서는 최대 1MB의 크기로 제한됩니다.", "sources": ["https://cloud.google.com/firestore/docs/data-model?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_data-model_hl=ko.txt"}
{"question": "Firestore에서 데이터의 계층적 구조를 어떻게 설정하나요?", "answer": "Firestore의 계층적 데이터 구조는 컬렉션과 하위 컬렉션을 사용하여 설정할 수 있으며, 예를 들어 채팅방 문서에 하위 컬렉션으로 메시지를 저장하는 방식으로 구현할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/data-model?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_data-model_hl=ko.txt"}
{"question": "Firestore에서 문서를 삭제할 때 하위 컬렉션은 어떻게 되나요?", "answer": "문서를 삭제해도 하위 컬렉션은 삭제되지 않으며, 하위 컬렉션의 문서는 상위 문서가 삭제된 후에도 존재할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/data-model?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_data-model_hl=ko.txt"}
{"question": "Firestore에서 Cloud Functions를 사용하여 어떤 이벤트를 트리거할 수 있나요?", "answer": "Firestore에서 Cloud Functions를 사용하여 다음과 같은 이벤트를 트리거할 수 있습니다: onCreate (문서를 처음으로 기록할 때), onUpdate (이미 존재하는 문서에서 값이 변경되었을 때), onDelete (데이터가 있는 문서가 삭제될 때), onWrite (onCreate, onUpdate 또는 onDelete가 트리거될 때).", "sources": ["https://cloud.google.com/firestore/docs/extend-with-functions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_extend-with-functions_hl=ko.txt"}
{"question": "Firestore 트리거 함수를 작성하는 기본적인 방법은 무엇인가요?", "answer": "Firestore 트리거 함수를 작성하려면 문서 경로와 이벤트 유형을 지정해야 합니다. 예를 들어, 특정 문서의 모든 변경에 대해 이벤트를 트리거하려면 다음과 같이 작성합니다: ```javascript exports.myFunction = functions.firestore .document('my-collection/{docId}') .onWrite((change, context) => { /* ... */ }); ```", "sources": ["https://cloud.google.com/firestore/docs/extend-with-functions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_extend-with-functions_hl=ko.txt"}
{"question": "특정 문서의 변경 사항을 감지하는 Cloud Function의 예시는 무엇인가요?", "answer": "특정 문서의 변경 사항을 감지하는 Cloud Function의 예시는 다음과 같습니다: ```javascript exports.myFunctionName = functions.firestore .document('users/marie').onWrite((change, context) => { /* ... */ }); ```", "sources": ["https://cloud.google.com/firestore/docs/extend-with-functions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_extend-with-functions_hl=ko.txt"}
{"question": "와일드카드를 사용하여 Firestore의 모든 문서에 대해 이벤트를 트리거하는 방법은 무엇인가요?", "answer": "와일드카드를 사용하여 Firestore의 모든 문서에 대해 이벤트를 트리거하려면 다음과 같이 작성합니다: ```javascript exports.useWildcard = functions.firestore .document('users/{userId}') .onWrite((change, context) => { /* ... */ }); ```", "sources": ["https://cloud.google.com/firestore/docs/extend-with-functions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_extend-with-functions_hl=ko.txt"}
{"question": "Cloud Run Functions(1세대)에서 Firestore의 어떤 모드를 지원하나요?", "answer": "Cloud Run Functions(1세대)는 Firestore 기본 모드의 기존 '(기본값)' 데이터베이스를 기본 요건으로 지원합니다. Firestore 이름이 지정된 데이터베이스 또는 Datastore 모드는 지원하지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/extend-with-functions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_extend-with-functions_hl=ko.txt"}
{"question": "Firestore 트리거의 이벤트가 전송되지 않는 경우 어떤 로그를 확인해야 하나요?", "answer": "이벤트가 전송되지 않은 경우 플랫폼 로그를 확인해야 하며, 로그 탐색기에서 '크기가 1세대... 한도를 초과하여 Cloud 함수에 이벤트를 전송할 수 없음'이라는 error 심각도의 메시지를 찾을 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/extend-with-functions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_extend-with-functions_hl=ko.txt"}
{"question": "Firestore 트리거를 삭제할 때 주의해야 할 점은 무엇인가요?", "answer": "데이터베이스를 삭제해도 해당 데이터베이스의 트리거가 자동으로 삭제되지 않으며, 트리거가 이벤트 제공을 중지하지만 삭제하기 전까지 계속 존재합니다.", "sources": ["https://cloud.google.com/firestore/docs/extend-with-functions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_extend-with-functions_hl=ko.txt"}
{"question": "Firestore에서 Cloud Functions를 사용하여 멱등 함수를 작성하는 이유는 무엇인가요?", "answer": "멱등 함수를 작성하는 이유는 이벤트가 최소 1회 전송되지만 하나의 이벤트에 함수가 여러 번 호출될 수 있기 때문입니다. 따라서 정확히 한 번에 처리하는 메커니즘에 의존하지 말아야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/extend-with-functions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_extend-with-functions_hl=ko.txt"}
{"question": "Firestore 트리거에서 문서 경로 끝에 슬래시를 포함하면 안 되는 이유는 무엇인가요?", "answer": "문서 경로 끝에 슬래시가 있으면 잘못된 경로로 인식될 수 있으므로, 문서 경로 끝에 슬래시가 없어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/extend-with-functions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_extend-with-functions_hl=ko.txt"}
{"question": "Firestore에서 Cloud Functions를 사용하여 특정 필드에 이벤트를 추가할 수 있나요?", "answer": "아니요, Firestore 이벤트는 문서 변경 시에만 트리거되며, 특정 필드에 이벤트를 추가할 수 없습니다.", "sources": ["https://cloud.google.com/firestore/docs/extend-with-functions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_extend-with-functions_hl=ko.txt"}
{"question": "Firestore 데이터베이스를 만들 때 어떤 모드를 선택해야 하나요?", "answer": "Firestore 데이터베이스를 만들 때 Native 모드와 Datastore 모드 중 하나를 선택해야 합니다. 모든 새 애플리케이션에는 기본 모드의 Firestore를 사용하는 것이 권장됩니다. 앱이 Datastore API에 종속된 경우 Datastore 모드를 사용해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/firestore-or-datastore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_firestore-or-datastore_hl=ko.txt"}
{"question": "Native 모드의 Firestore는 어떤 기능을 제공하나요?", "answer": "Native 모드의 Firestore는 strong consistency를 갖춘 스토리지 레이어, 컬렉션 및 문서 데이터 모델, 실시간 업데이트, 모바일 및 웹 클라이언트 라이브러리를 제공합니다.", "sources": ["https://cloud.google.com/firestore/docs/firestore-or-datastore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_firestore-or-datastore_hl=ko.txt"}
{"question": "Datastore 모드의 Firestore에서 쿼리의 일관성은 어떻게 되나요?", "answer": "Datastore 모드의 Firestore에서는 모든 Datastore 쿼리가 strong consistency를 가지며, 트랜잭션의 쿼리는 더 이상 상위 쿼리일 필요가 없고, 제한 없는 개수의 항목 그룹에 액세스할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/firestore-or-datastore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_firestore-or-datastore_hl=ko.txt"}
{"question": "Firestore 데이터베이스 모드를 변경하는 방법은 무엇인가요?", "answer": "데이터베이스가 비어 있을 경우 gcloud 명령어를 사용하여 모드를 변경할 수 있습니다. 예를 들어, Native 모드로 변경하려면 `gcloud firestore databases update --type=firestore-native --database='DATABASE_ID'` 명령어를 사용합니다.", "sources": ["https://cloud.google.com/firestore/docs/firestore-or-datastore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_firestore-or-datastore_hl=ko.txt"}
{"question": "Firestore의 가격 책정 구조는 어떻게 되나요?", "answer": "기본 모드 데이터베이스와 Datastore 모드 데이터베이스는 동일한 가격 책정 구조를 사용하며, 항목 및 문서 작업에 대해 동일한 요금이 부과됩니다.", "sources": ["https://cloud.google.com/firestore/docs/firestore-or-datastore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_firestore-or-datastore_hl=ko.txt"}
{"question": "Firestore의 실시간 업데이트 기능은 어떤 모드에서 지원되나요?", "answer": "Firestore의 실시간 업데이트 기능은 Native 모드에서 지원되며, Datastore 모드에서는 지원되지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/firestore-or-datastore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_firestore-or-datastore_hl=ko.txt"}
{"question": "Firestore에서 사용할 수 있는 클라이언트 라이브러리는 무엇인가요?", "answer": "Native 모드의 Firestore는 자바, Python, PHP, Go, Ruby, C#, Node.js, Android, iOS, 웹, C++, Unity 등의 클라이언트 라이브러리를 지원합니다. Datastore 모드는 자바, Python, PHP, Go, Ruby, C#, Node.js, C++ 클라이언트 라이브러리를 지원합니다.", "sources": ["https://cloud.google.com/firestore/docs/firestore-or-datastore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_firestore-or-datastore_hl=ko.txt"}
{"question": "Firestore의 데이터베이스 모드 변경 시 주의해야 할 점은 무엇인가요?", "answer": "데이터베이스에 모든 항목 및 문서가 비어 있어야만 모드 변경이 허용되며, 모드 변경은 몇 분 정도 걸릴 수 있고 그 동안 데이터베이스에서 쓰기가 거부됩니다.", "sources": ["https://cloud.google.com/firestore/docs/firestore-or-datastore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_firestore-or-datastore_hl=ko.txt"}
{"question": "Firestore의 데이터 모델은 어떻게 구성되어 있나요?", "answer": "기본 모드의 Firestore는 문서와 컬렉션으로 구성된 문서 데이터베이스이며, Datastore 모드는 종류 및 항목 그룹으로 구성된 항목입니다.", "sources": ["https://cloud.google.com/firestore/docs/firestore-or-datastore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_firestore-or-datastore_hl=ko.txt"}
{"question": "Firestore의 오프라인 데이터 지속성은 어떤 모드에서 지원되나요?", "answer": "Firestore의 오프라인 데이터 지속성은 Native 모드에서 지원되며, Datastore 모드에서는 지원되지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/firestore-or-datastore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_firestore-or-datastore_hl=ko.txt"}
{"question": "Firestore에서 벡터 저장소를 사용하려면 어떤 클래스를 사용해야 하나요?", "answer": "Firestore에서 벡터 저장소를 사용하려면 FirestoreVectorStore 클래스를 사용해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/langchain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_langchain_hl=ko.txt"}
{"question": "Firestore의 벡터 저장소를 설정하는 절차는 무엇인가요?", "answer": "벡터 저장소용 Firestore 가이드에서는 통합 패키지 및 LangChain 설치, 벡터 저장소의 테이블 초기화, VertexAIEmbeddings를 사용하여 임베딩 서비스 설정, FirestoreVectorStore 초기화, 문서 업데이트 및 삭제, 유사한 문서 검색, 커스텀 벡터 저장소 만들기 등의 작업을 수행하는 방법을 보여줍니다.", "sources": ["https://github.com/googleapis/langchain-google-firestore-python/blob/main/docs/vectorstores.ipynb"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_langchain_hl=ko.txt"}
{"question": "Firestore에서 문서를 로드하려면 어떤 클래스를 사용해야 하나요?", "answer": "Firestore에서 문서를 로드하려면 FirestoreLoader 클래스를 사용해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/langchain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_langchain_hl=ko.txt"}
{"question": "FirestoreSaver 클래스는 어떤 용도로 사용되나요?", "answer": "FirestoreSaver 클래스는 문서를 저장 및 삭제하는 데 사용됩니다.", "sources": ["https://cloud.google.com/firestore/docs/langchain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_langchain_hl=ko.txt"}
{"question": "LangChain의 채팅 메시지 기록을 관리하기 위해 어떤 클래스를 사용하나요?", "answer": "LangChain의 채팅 메시지 기록을 관리하기 위해 ChatMessageHistory 클래스를 사용하며, Firestore에서는 FirestoreChatMessageHistory로 이 클래스를 확장합니다.", "sources": ["https://cloud.google.com/firestore/docs/langchain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_langchain_hl=ko.txt"}
{"question": "Firestore의 채팅 메시지 기록을 설정하는 절차는 무엇인가요?", "answer": "채팅 메시지 기록용 Firestore 가이드에서는 LangChain 설치 및 Google Cloud에 인증, FirestoreChatMessageHistory 클래스를 초기화하여 메시지 추가 및 삭제, 클라이언트를 사용하여 연결 및 인증 맞춤설정 등의 작업을 수행하는 방법을 보여줍니다.", "sources": ["https://github.com/googleapis/langchain-google-firestore-python/blob/main/docs/chat_message_history.ipynb"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_langchain_hl=ko.txt"}
{"question": "Firestore에서 문서 로더를 사용하여 데이터를 로드할 때 필터를 추가할 수 있나요?", "answer": "네, 문서 로더에 필터를 추가할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/langchain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_langchain_hl=ko.txt"}
{"question": "FirestoreVectorStore를 사용하여 어떤 유형의 검색을 수행할 수 있나요?", "answer": "FirestoreVectorStore를 사용하여 시맨틱 검색을 수행할 수 있으며, 이는 쿼리의 의미를 해석하여 개념적으로 쿼리와 일치하는 주제를 찾는 것입니다.", "sources": ["https://cloud.google.com/firestore/docs/langchain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_langchain_hl=ko.txt"}
{"question": "Firestore에서 문서 업데이트 및 삭제는 어떻게 하나요?", "answer": "Firestore에서 문서 업데이트 및 삭제는 FirestoreVectorStore와 FirestoreSaver 클래스를 사용하여 수행할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/langchain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_langchain_hl=ko.txt"}
{"question": "LangChain이란 무엇인가요?", "answer": "LangChain은 개발자가 생성형 AI 애플리케이션 또는 검색 증강 생성(RAG) 워크플로를 빌드할 수 있도록 도와주는 LLM 조정 프레임워크입니다.", "sources": ["https://cloud.google.com/firestore/docs/langchain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_langchain_hl=ko.txt"}
{"question": "Firestore 데이터베이스를 생성하는 방법은 무엇인가요?", "answer": "Firestore 데이터베이스를 생성하려면 Google Cloud 콘솔에서 데이터베이스 페이지로 이동하여 \"데이터베이스 만들기\"를 클릭하고, 데이터베이스 모드를 선택한 후, 데이터베이스 ID와 지역을 입력하고 보안 규칙을 선택한 후 \"데이터베이스 만들기\"를 클릭합니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-databases?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-databases_hl=ko.txt"}
{"question": "gcloud 명령어를 사용하여 Firestore 데이터베이스를 생성하는 방법은 무엇인가요?", "answer": "gcloud 명령어를 사용하여 Firestore 데이터베이스를 생성하려면 다음 명령어를 사용합니다: `gcloud firestore databases create --database=DATABASE_ID --location=LOCATION --type=DATABASE_TYPE [--delete-protection]`. DATABASE_ID, LOCATION, DATABASE_TYPE을 적절히 변경하여 사용합니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-databases?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-databases_hl=ko.txt"}
{"question": "Firebase CLI를 사용하여 Firestore 데이터베이스를 생성하는 방법은 무엇인가요?", "answer": "Firebase CLI를 사용하여 Firestore 데이터베이스를 생성하려면 다음 명령어를 사용합니다: `firebase firestore:databases:create DATABASE_ID --location=LOCATION [--delete-protection DELETE_PROTECTION_ENABLEMENT]`. DATABASE_ID와 LOCATION을 적절히 변경하여 사용합니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-databases?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-databases_hl=ko.txt"}
{"question": "Firestore 데이터베이스의 삭제 보호를 설정하는 방법은 무엇인가요?", "answer": "Firestore 데이터베이스의 삭제 보호를 설정하려면 데이터베이스를 만들 때 `--delete-protection` 플래그를 사용하거나, 데이터베이스 구성을 업데이트할 때 `gcloud firestore databases update --database=DATABASE_ID --delete-protection` 명령어를 사용합니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-databases?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-databases_hl=ko.txt"}
{"question": "Firestore 데이터베이스를 삭제하는 방법은 무엇인가요?", "answer": "Firestore 데이터베이스를 삭제하려면 Google Cloud 콘솔에서 데이터베이스 페이지로 이동하여 삭제할 데이터베이스의 테이블 행에서 \"삭제\"를 클릭하거나, gcloud 명령어를 사용하여 `gcloud firestore databases delete --database=DATABASE_ID`를 실행합니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-databases?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-databases_hl=ko.txt"}
{"question": "Firestore 데이터베이스의 구성 설정을 업데이트하는 방법은 무엇인가요?", "answer": "Firestore 데이터베이스의 구성 설정을 업데이트하려면 `gcloud firestore databases update --database=DATABASE_ID --type=DATABASE_TYPE` 명령어를 사용하여 데이터베이스 유형을 변경하거나, 삭제 보호를 전환할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-databases?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-databases_hl=ko.txt"}
{"question": "Firestore 데이터베이스를 클론하는 방법은 무엇인가요?", "answer": "Firestore 데이터베이스를 클론하려면 gcloud 명령어를 사용하여 `gcloud alpha firestore databases clone --source-database='SOURCE_DATABASE_ID' --snapshot-time='PITR_TIMESTAMP' --destination-database='DESTINATION_DATABASE_ID'`를 실행합니다. SOURCE_DATABASE_ID, PITR_TIMESTAMP, DESTINATION_DATABASE_ID를 적절히 변경하여 사용합니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-databases?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-databases_hl=ko.txt"}
{"question": "Firestore 데이터베이스에 대한 액세스 권한을 구성하는 방법은 무엇인가요?", "answer": "Firestore 데이터베이스에 대한 액세스 권한을 구성하려면 `gcloud projects add-iam-policy-binding PROJECT_ID --member='user:EMAIL' --role='roles/datastore.user' --condition='expression=resource.name==\"projects/PROJECT_ID/databases/DATABASE_ID\",title=TITLE,description=DESCRIPTION'` 명령어를 사용하여 특정 사용자에게 권한을 부여합니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-databases?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-databases_hl=ko.txt"}
{"question": "Firestore 데이터베이스의 세부정보를 보는 방법은 무엇인가요?", "answer": "Firestore 데이터베이스의 세부정보를 보려면 `gcloud firestore databases describe --database=DATABASE_ID` 명령어를 사용하거나 Firebase CLI에서 `firebase firestore:databases:get DATABASE_ID` 명령어를 사용합니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-databases?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-databases_hl=ko.txt"}
{"question": "Firestore 데이터베이스를 나열하는 방법은 무엇인가요?", "answer": "Firestore 데이터베이스를 나열하려면 `gcloud firestore databases list` 명령어를 사용하거나 Firebase CLI에서 `firebase firestore:databases:list` 명령어를 사용합니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-databases?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-databases_hl=ko.txt"}
{"question": "Firestore에서 문서를 추가하는 방법은 무엇인가요?", "answer": "Firestore에서 문서를 추가하려면 `add()` 메서드를 사용합니다. 예를 들어, Kotlin에서는 다음과 같이 사용할 수 있습니다: ```kotlin val data = hashMapOf(\"name\" to \"Tokyo\", \"country\" to \"Japan\") db.collection(\"cities\").add(data) ```", "sources": ["https://cloud.google.com/firestore/docs/manage-data/add-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_add-data_hl=ko.txt"}
{"question": "Firestore에서 문서를 업데이트하는 방법은 무엇인가요?", "answer": "Firestore에서 문서를 업데이트하려면 `update()` 메서드를 사용합니다. 예를 들어, Python에서는 다음과 같이 사용할 수 있습니다: ```python city_ref = db.collection(\"cities\").document(\"DC\") city_ref.update({\"capital\": True}) ```", "sources": ["https://cloud.google.com/firestore/docs/manage-data/add-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_add-data_hl=ko.txt"}
{"question": "Firestore에서 문서를 설정하는 방법은 무엇인가요?", "answer": "Firestore에서 문서를 설정하려면 `set()` 메서드를 사용합니다. 예를 들어, Java에서는 다음과 같이 사용할 수 있습니다: ```java Map<String, Object> docData = new HashMap<>(); docData.put(\"name\", \"Los Angeles\"); docData.put(\"state\", \"CA\"); docData.put(\"country\", \"USA\"); ApiFuture<WriteResult> future = db.collection(\"cities\").document(\"LA\").set(docData); ```", "sources": ["https://cloud.google.com/firestore/docs/manage-data/add-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_add-data_hl=ko.txt"}
{"question": "Firestore에서 자동으로 생성된 문서 ID를 사용하는 방법은 무엇인가요?", "answer": "Firestore에서 자동으로 생성된 문서 ID를 사용하려면 `document()` 메서드를 호출하여 새 문서 참조를 생성한 후, `set()` 메서드를 사용하여 데이터를 추가합니다. 예를 들어, Java에서는 다음과 같이 사용할 수 있습니다: ```java DocumentReference newCityRef = db.collection(\"cities\").document(); newCityRef.set(data); ```", "sources": ["https://cloud.google.com/firestore/docs/manage-data/add-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_add-data_hl=ko.txt"}
{"question": "Firestore에서 문서의 일부 필드를 업데이트할 때 사용하는 방법은 무엇인가요?", "answer": "Firestore에서 문서의 일부 필드를 업데이트할 때는 `update()` 메서드를 사용합니다. 예를 들어, Kotlin에서는 다음과 같이 사용할 수 있습니다: ```kotlin val washingtonRef = db.collection(\"cities\").document(\"DC\") washingtonRef.update(\"capital\", true) ```", "sources": ["https://cloud.google.com/firestore/docs/manage-data/add-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_add-data_hl=ko.txt"}
{"question": "Firestore에서 서버 타임스탬프를 설정하는 방법은 무엇인가요?", "answer": "Firestore에서 서버 타임스탬프를 설정하려면 `FieldValue.serverTimestamp()`를 사용합니다. 예를 들어, Java에서는 다음과 같이 사용할 수 있습니다: ```java Map<String, Object> updates = new HashMap<>(); updates.put(\"timestamp\", FieldValue.serverTimestamp()); docRef.update(updates); ```", "sources": ["https://cloud.google.com/firestore/docs/manage-data/add-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_add-data_hl=ko.txt"}
{"question": "Firestore에서 중첩된 객체의 필드를 업데이트하는 방법은 무엇인가요?", "answer": "Firestore에서 중첩된 객체의 필드를 업데이트할 때는 점 표기법을 사용하여 필드를 참조합니다. 예를 들어, Python에서는 다음과 같이 사용할 수 있습니다: ```python city_ref.update({\"favorites.color\": \"Red\"}) ```", "sources": ["https://cloud.google.com/firestore/docs/manage-data/add-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_add-data_hl=ko.txt"}
{"question": "Firestore에서 문서를 추가할 때 데이터 유형은 어떻게 설정하나요?", "answer": "Firestore에서는 문자열, 부울, 숫자, 날짜, null, 중첩 배열, 객체 등 다양한 데이터 유형을 사용할 수 있습니다. 예를 들어, Java에서는 다음과 같이 설정할 수 있습니다: ```java Map<String, Object> docData = new HashMap<>(); docData.put(\"stringExample\", \"Hello, World\"); docData.put(\"booleanExample\", true); docData.put(\"numberExample\", 3.14159265); ```", "sources": ["https://cloud.google.com/firestore/docs/manage-data/add-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_add-data_hl=ko.txt"}
{"question": "Firestore에서 문서를 병합하여 업데이트하는 방법은 무엇인가요?", "answer": "Firestore에서 문서를 병합하여 업데이트하려면 `set()` 메서드에 `SetOptions.merge()`를 사용합니다. 예를 들어, Java에서는 다음과 같이 사용할 수 있습니다: ```java Map<String, Object> update = new HashMap<>(); update.put(\"capital\", true); docRef.set(update, SetOptions.merge()); ```", "sources": ["https://cloud.google.com/firestore/docs/manage-data/add-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_add-data_hl=ko.txt"}
{"question": "Firestore에서 문서를 추가할 때 자동 생성된 ID를 사용하는 방법은 무엇인가요?", "answer": "Firestore에서 문서를 추가할 때 자동 생성된 ID를 사용하려면 `add()` 메서드를 사용합니다. 예를 들어, Python에서는 다음과 같이 사용할 수 있습니다: ```python city = {\"name\": \"Tokyo\", \"country\": \"Japan\"} city_ref = db.collection(\"cities\").add(city) ```", "sources": ["https://cloud.google.com/firestore/docs/manage-data/add-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_add-data_hl=ko.txt"}
{"question": "Firestore에서 데이터 일괄 삭제를 시작하기 위해 필요한 사전 조건은 무엇인가요?", "answer": "Firestore에서 데이터 일괄 삭제를 시작하기 위해서는 Google Cloud 프로젝트에 결제를 사용 설정하고, Firestore에 필요한 권한이 있는 계정이 필요합니다. 프로젝트 소유자 계정에는 필요한 권한이 있으며, 그렇지 않은 경우 Owner, Cloud Datastore Owner 또는 Cloud Datastore Bulk Admin 역할을 부여해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/bulk-delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_bulk-delete_hl=ko.txt"}
{"question": "gcloud 명령줄 도구를 사용하여 특정 컬렉션 그룹을 일괄 삭제하는 방법은 무엇인가요?", "answer": "특정 컬렉션 그룹을 일괄 삭제하려면 gcloud 명령어에서 --collection-ids 플래그를 사용하여 삭제할 컬렉션 그룹의 ID를 지정합니다. 예를 들어, 다음과 같이 명령어를 입력합니다: ``` gcloud firestore bulk-delete --collection-ids=[COLLECTION_GROUP_ID_1],[COLLECTION_GROUP_ID_2],[SUBCOLLECTION_GROUP_ID_1] --database=[DATABASE] ```", "sources": ["https://cloud.google.com/firestore/docs/manage-data/bulk-delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_bulk-delete_hl=ko.txt"}
{"question": "일괄 삭제 작업의 상태를 확인하는 방법은 무엇인가요?", "answer": "일괄 삭제 작업의 상태를 확인하려면 gcloud operations describe 명령어를 사용하여 작업 이름을 지정합니다. 예를 들어, 다음과 같이 입력합니다: ``` gcloud firestore operations describe [OPERATION_NAME] ```", "sources": ["https://cloud.google.com/firestore/docs/manage-data/bulk-delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_bulk-delete_hl=ko.txt"}
{"question": "일괄 삭제 작업을 취소하는 방법은 무엇인가요?", "answer": "진행 중인 일괄 삭제 작업을 취소하려면 gcloud operations cancel 명령어를 사용하여 작업 이름을 지정합니다. 예를 들어, 다음과 같이 입력합니다: ``` gcloud firestore operations cancel [OPERATION_NAME] ```", "sources": ["https://cloud.google.com/firestore/docs/manage-data/bulk-delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_bulk-delete_hl=ko.txt"}
{"question": "Firestore에서 일괄 삭제 작업을 수행할 때 발생하는 요금은 어떻게 계산되나요?", "answer": "일괄 삭제 작업의 경우, 문서 읽기 및 삭제에 대한 요금이 청구됩니다. 문서당 삭제 작업 1회와 색인 항목 읽기 1회가 발생하며, 최대 1,000개의 색인 항목을 읽을 때마다 1회의 읽기 작업 요금이 부과됩니다. 예를 들어, 1,500개의 문서를 삭제하면 문서 읽기 2회 및 문서 삭제 1,500회가 청구됩니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/bulk-delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_bulk-delete_hl=ko.txt"}
{"question": "일괄 삭제 작업을 시작한 후 추가된 문서는 어떻게 되나요?", "answer": "일괄 삭제 작업이 시작된 후에 추가되거나 수정된 문서는 삭제되지 않습니다. 삭제 작업은 시작된 시점의 상태를 기준으로 진행됩니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/bulk-delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_bulk-delete_hl=ko.txt"}
{"question": "일괄 삭제 작업의 완료 시간을 예상하는 방법은 무엇인가요?", "answer": "장기 실행 작업의 상태를 요청하면 workEstimated 및 workCompleted 측정항목이 반환됩니다. workEstimated는 처리할 것으로 예상되는 총 바이트 및 문서 수를 나타내고, workCompleted는 지금까지 삭제된 바이트 및 문서 수를 나타냅니다. 이 두 값을 비교하여 예상 진행도를 추정할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/bulk-delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_bulk-delete_hl=ko.txt"}
{"question": "일괄 삭제 작업을 완료한 후 작업을 삭제하는 방법은 무엇인가요?", "answer": "완료된 일괄 삭제 작업을 삭제하려면 gcloud firestore operations delete 명령어를 사용하여 작업 이름을 지정합니다. 예를 들어, 다음과 같이 입력합니다: ``` gcloud firestore operations delete [OPERATION_NAME] ```", "sources": ["https://cloud.google.com/firestore/docs/manage-data/bulk-delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_bulk-delete_hl=ko.txt"}
{"question": "Firestore에서 모든 문서를 삭제하려면 어떤 기능을 사용해야 하나요?", "answer": "Firestore에서 데이터베이스의 모든 문서를 삭제하려면 데이터베이스 삭제 기능을 사용해야 합니다. 일괄 삭제 기능은 특정 문서만 삭제하는 데 사용됩니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/bulk-delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_bulk-delete_hl=ko.txt"}
{"question": "일괄 삭제 작업의 비용을 확인하는 방법은 무엇인가요?", "answer": "일괄 삭제 작업의 비용은 Cloud Billing 보고서 페이지에서 goog-firestoremanaged:bulkdelete 라벨을 사용하여 확인할 수 있습니다. 이 라벨을 통해 일괄 삭제 작업과 관련된 비용을 볼 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/bulk-delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_bulk-delete_hl=ko.txt"}
{"question": "Firestore에서 문서를 삭제하는 방법은 무엇인가요?", "answer": "Firestore에서 문서를 삭제하려면 delete() 메서드를 사용합니다. 예를 들어, 웹 버전 9에서는 deleteDoc() 메서드를 사용하여 다음과 같이 삭제할 수 있습니다: ```javascript import { doc, deleteDoc } from \"firebase/firestore\"; await deleteDoc(doc(db, \"cities\", \"DC\")); ```", "sources": ["https://cloud.google.com/firestore/docs/manage-data/delete-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_delete-data_hl=ko.txt"}
{"question": "특정 필드를 Firestore 문서에서 삭제하는 방법은 무엇인가요?", "answer": "특정 필드를 삭제하려면 FieldValue.delete() 메서드를 사용하여 문서를 업데이트합니다. 예를 들어, 웹 버전 9에서는 다음과 같이 사용할 수 있습니다: ```javascript import { doc, updateDoc, deleteField } from \"firebase/firestore\"; await updateDoc(doc(db, \"cities\", \"BJ\"), { capital: deleteField(), }); ```", "sources": ["https://cloud.google.com/firestore/docs/manage-data/delete-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_delete-data_hl=ko.txt"}
{"question": "Firestore에서 전체 컬렉션을 삭제하는 방법은 무엇인가요?", "answer": "Firestore에서 전체 컬렉션을 삭제하려면 컬렉션에 포함된 모든 문서를 읽고 삭제해야 합니다. 예를 들어, Java에서는 다음과 같이 배치 크기를 조정하여 삭제할 수 있습니다: ```java void deleteCollection(CollectionReference collection, int batchSize) { ApiFuture<QuerySnapshot> future = collection.limit(batchSize).get(); // 문서 삭제 로직 } ```", "sources": ["https://cloud.google.com/firestore/docs/manage-data/delete-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_delete-data_hl=ko.txt"}
{"question": "Firestore에서 하위 컬렉션을 삭제할 때 주의해야 할 점은 무엇인가요?", "answer": "문서를 삭제해도 Firestore는 하위 컬렉션 내 문서를 자동으로 삭제하지 않습니다. 따라서 하위 컬렉션의 문서를 삭제하려면 수동으로 삭제해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/delete-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_delete-data_hl=ko.txt"}
{"question": "Firebase CLI를 사용하여 Firestore에서 데이터를 삭제하는 방법은 무엇인가요?", "answer": "Firebase CLI를 사용하여 데이터를 삭제하려면 다음 명령어를 사용합니다: ``` firebase firestore:delete [options] <<path>> ``` 이 명령어를 사용하면 읽기 및 삭제 비용이 발생합니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/delete-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_delete-data_hl=ko.txt"}
{"question": "Firestore에서 문서를 삭제할 때 발생할 수 있는 오류는 무엇인가요?", "answer": "문서를 삭제할 때 발생할 수 있는 오류는 여러 가지가 있으며, 오류 코드 및 데이터 삭제 시 지연 시간 문제를 해결하는 방법에 대한 자세한 내용은 문제해결 페이지를 참조해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/delete-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_delete-data_hl=ko.txt"}
{"question": "Firestore에서 문서를 삭제한 후에도 하위 컬렉션에 접근할 수 있나요?", "answer": "네, 문서를 삭제한 후에도 하위 컬렉션 내 문서에 접근할 수 있습니다. 예를 들어, 상위 문서를 삭제했더라도 하위 컬렉션의 문서에 접근할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/delete-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_delete-data_hl=ko.txt"}
{"question": "Firestore에서 필드를 삭제할 때 사용하는 메서드는 무엇인가요?", "answer": "Firestore에서 필드를 삭제할 때는 FieldValue.delete() 메서드를 사용합니다. 예를 들어, Python에서는 다음과 같이 사용할 수 있습니다: ```python city_ref.update({\"capital\": firestore.DELETE_FIELD}) ```", "sources": ["https://cloud.google.com/firestore/docs/manage-data/delete-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_delete-data_hl=ko.txt"}
{"question": "Firestore에서 문서를 삭제할 때 사용하는 언어별 메서드는 어떤 것들이 있나요?", "answer": "Firestore에서 문서를 삭제할 때 사용하는 언어별 메서드는 다음과 같습니다: - 웹 버전 9: deleteDoc() - 웹 버전 8: delete() - Java: delete() - Python: delete() - C++: Delete()", "sources": ["https://cloud.google.com/firestore/docs/manage-data/delete-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_delete-data_hl=ko.txt"}
{"question": "Firestore에서 TTL 정책을 사용하여 데이터를 삭제하는 방법은 무엇인가요?", "answer": "TTL 정책은 특정 필드를 특정 컬렉션 그룹의 문서 만료 시간으로 지정하여 데이터를 삭제하는 방법입니다. TTL 설정에 대한 자세한 내용은 TTL 정책으로 데이터 보관 관리 문서를 참조해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/delete-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_delete-data_hl=ko.txt"}
{"question": "Firestore에서 데이터를 내보내기 위해 필요한 첫 번째 단계는 무엇인가요?", "answer": "Firestore에서 데이터를 내보내기 위해서는 Google Cloud 프로젝트에 결제를 사용 설정해야 합니다. 결제가 사용 설정된 Google Cloud 프로젝트에만 내보내기 및 가져오기 기능을 사용할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/export-import?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_export-import_hl=ko.txt"}
{"question": "Firestore에서 모든 문서를 내보내는 방법은 무엇인가요?", "answer": "Google Cloud 콘솔에서 데이터베이스 페이지로 이동한 후, 필요한 데이터베이스를 선택하고 탐색 메뉴에서 가져오기/내보내기를 클릭한 다음 내보내기를 클릭하고 전체 데이터베이스 내보내기 옵션을 선택하여 Cloud Storage 버킷의 이름을 입력한 후 내보내기를 클릭하면 됩니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/export-import?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_export-import_hl=ko.txt"}
{"question": "특정 컬렉션을 내보내기 위해 gcloud 명령어를 어떻게 사용하나요?", "answer": "특정 컬렉션 그룹을 내보내기 위해서는 `gcloud firestore export gs://[BUCKET_NAME] --collection-ids=[COLLECTION_ID_1],[COLLECTION_ID_2] --database=[DATABASE]` 명령어를 사용합니다. 여기서 BUCKET_NAME은 버킷 이름, COLLECTION_ID는 내보낼 컬렉션의 ID, DATABASE는 데이터베이스 이름입니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/export-import?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_export-import_hl=ko.txt"}
{"question": "Firestore에서 데이터를 가져올 때 주의해야 할 점은 무엇인가요?", "answer": "데이터를 가져오면 필수 색인이 데이터베이스의 현재 색인 정의를 사용하여 업데이트되며, 가져오기를 수행하면 새 문서 ID를 할당하지 않고 내보낼 때 캡처된 ID를 사용합니다. ID가 같은 문서가 이미 존재하면 기존 문서를 덮어씁니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/export-import?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_export-import_hl=ko.txt"}
{"question": "gcloud를 사용하여 Firestore에서 모든 문서를 가져오는 명령어는 무엇인가요?", "answer": "모든 문서를 가져오기 위해서는 `gcloud firestore import gs://[BUCKET_NAME]/[EXPORT_PREFIX]/ --database=[DATABASE]` 명령어를 사용합니다. BUCKET_NAME은 내보내기 파일의 위치, DATABASE는 데이터베이스 이름입니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/export-import?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_export-import_hl=ko.txt"}
{"question": "Firestore 내보내기 작업을 취소하는 방법은 무엇인가요?", "answer": "Google Cloud 콘솔의 가져오기/내보내기 페이지에서 실행 중인 작업의 취소 버튼을 클릭하거나, gcloud 명령어를 사용하여 `gcloud firestore operations cancel [OPERATION_NAME]` 명령어로 진행 중인 작업을 중지할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/export-import?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_export-import_hl=ko.txt"}
{"question": "Firestore 내보내기 작업의 상태를 확인하는 방법은 무엇인가요?", "answer": "Google Cloud 콘솔의 가져오기/내보내기 페이지에서 최근 내보내기 또는 가져오기 작업의 상태를 확인하거나, gcloud 명령어를 사용하여 `gcloud firestore operations describe [OPERATION_NAME]` 명령어로 작업의 상태를 표시할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/export-import?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_export-import_hl=ko.txt"}
{"question": "Firestore에서 PITR 데이터를 내보내기 위해 어떤 조건이 필요한가요?", "answer": "PITR 데이터를 내보내기 위해서는 타임스탬프가 지난 7일 이내의 1분 타임스탬프여야 하며, 지정된 타임스탬프에 데이터가 더 이상 존재하지 않으면 내보내기 작업이 실패합니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/export-import?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_export-import_hl=ko.txt"}
{"question": "Firestore 내보내기 작업의 비용은 어떻게 청구되나요?", "answer": "Firestore 내보내기 작업은 내보낸 문서당 읽기 작업이 1회 발생하며, 가져오기 작업은 가져온 문서당 쓰기 작업이 1회 발생합니다. Cloud Storage에 저장된 출력 파일은 Cloud Storage 데이터 스토리지 비용으로 계산됩니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/export-import?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_export-import_hl=ko.txt"}
{"question": "Firestore 서비스 에이전트의 역할은 무엇인가요?", "answer": "Firestore 서비스 에이전트는 내보내기 및 가져오기 작업을 승인하는 데 사용되며, Cloud Storage 버킷에 대한 읽기 및 쓰기 권한을 부여받아야 합니다. 서비스 에이전트는 Firestore에 국한되어 있으며, App Engine 서비스 계정과는 호환되지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/export-import?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_export-import_hl=ko.txt"}
{"question": "Firestore에서 트랜잭션을 사용하여 데이터를 업데이트하는 방법은 무엇인가요?", "answer": "Firestore 클라이언트 라이브러리를 사용하여 여러 작업을 단일 트랜잭션으로 그룹화할 수 있습니다. 트랜잭션은 get() 작업 여러 개와 이어서 수행되는 set(), update(), delete()와 같은 쓰기 작업 여러 개로 구성됩니다. 예를 들어, 웹 버전 9에서는 `runTransaction` 함수를 사용하여 트랜잭션을 실행할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/transactions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_transactions_hl=ko.txt"}
{"question": "트랜잭션에서 읽기 작업과 쓰기 작업의 순서는 어떻게 되어야 하나요?", "answer": "트랜잭션에서 읽기 작업은 항상 쓰기 작업 전에 이루어져야 합니다. 만약 읽기 작업이 쓰기 작업 다음에 포함되면 트랜잭션이 실패할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/transactions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_transactions_hl=ko.txt"}
{"question": "트랜잭션이 실패하는 이유는 무엇인가요?", "answer": "트랜잭션이 실패하는 이유는 여러 가지가 있습니다. 예를 들어, 트랜잭션에서 쓰기 작업 다음에 읽기 작업이 포함되거나, 트랜잭션 외부에서 수정된 문서를 읽는 경우, 최대 요청 크기인 10MiB를 초과하는 경우 등이 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/transactions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_transactions_hl=ko.txt"}
{"question": "Firestore에서 일괄 쓰기를 사용하는 방법은 무엇인가요?", "answer": "일괄 쓰기는 여러 문서에 대한 쓰기 작업을 원자적으로 수행할 수 있는 방법입니다. 예를 들어, 웹 버전 9에서는 `writeBatch` 함수를 사용하여 여러 문서에 대한 set(), update(), delete() 작업을 포함하는 단일 배치를 작성하고 커밋할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/transactions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_transactions_hl=ko.txt"}
{"question": "트랜잭션 외부에서 정보를 전달하는 방법은 무엇인가요?", "answer": "트랜잭션 함수에서 애플리케이션 상태를 수정하면 안 되며, 필요한 정보를 트랜잭션 함수 외부에서 전달해야 합니다. 예를 들어, 웹 버전 9에서는 `runTransaction` 함수에서 외부 변수를 사용하여 정보를 전달할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/transactions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_transactions_hl=ko.txt"}
{"question": "트랜잭션을 사용할 때 주의해야 할 점은 무엇인가요?", "answer": "트랜잭션을 사용할 때는 읽기 작업이 쓰기 작업 전에 이루어져야 하며, 트랜잭션 함수가 애플리케이션 상태를 직접 수정하면 안 됩니다. 또한, 클라이언트가 오프라인 상태일 경우 트랜잭션이 실패합니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/transactions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_transactions_hl=ko.txt"}
{"question": "Firestore에서 트랜잭션을 사용하여 인구 수를 업데이트하는 예시는 무엇인가요?", "answer": "예를 들어, Kotlin에서는 `db.runTransaction`을 사용하여 트랜잭션을 실행하고, `transaction.update(sfDocRef, \"population\", newPopulation)`을 통해 인구 수를 업데이트할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/transactions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_transactions_hl=ko.txt"}
{"question": "일괄 쓰기를 사용할 때의 장점은 무엇인가요?", "answer": "일괄 쓰기는 여러 문서에 대한 쓰기 작업을 원자적으로 수행할 수 있으며, 실패 사례를 줄이기 위해 읽은 문서를 수정되지 않은 상태로 유지할 필요가 없습니다. 또한, 사용자 기기가 오프라인 상태여도 실행될 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/transactions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_transactions_hl=ko.txt"}
{"question": "트랜잭션을 사용할 때 동시 수정이 발생하면 어떻게 되나요?", "answer": "트랜잭션에서 읽은 문서가 동시에 수정되는 경우 Firestore는 전체 트랜잭션을 다시 실행합니다. 이 기능을 통해 트랜잭션이 일관된 최신 데이터로 실행됩니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/transactions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_transactions_hl=ko.txt"}
{"question": "Firestore에서 트랜잭션과 일괄 쓰기의 차이점은 무엇인가요?", "answer": "트랜잭션은 읽기 및 쓰기 작업의 집합으로, 모든 작업이 성공하거나 모두 적용되지 않는 원자적 작업입니다. 반면, 일괄 쓰기는 여러 문서에 대한 쓰기 작업의 집합으로, 읽기 작업이 필요하지 않으며 원자적으로 완료됩니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/transactions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_manage-data_transactions_hl=ko.txt"}
{"question": "Firestore에서 count() 집계 쿼리를 사용하는 방법은 무엇인가요?", "answer": "count() 집계 쿼리를 사용하면 컬렉션이나 쿼리의 문서 수를 결정할 수 있습니다. 예를 들어, cities 컬렉션의 총 도시 수를 반환하는 쿼리는 다음과 같습니다: ```java Query query = db.collection(\"cities\"); AggregateQuery countQuery = query.count(); countQuery.get(AggregateSource.SERVER).addOnCompleteListener(new OnCompleteListener<AggregateQuerySnapshot>() { @Override public void onComplete(@NonNull Task<AggregateQuerySnapshot> task) { if (task.isSuccessful()) { AggregateQuerySnapshot snapshot = task.getResult(); Log.d(TAG, \"Count: \" + snapshot.getCount()); } } }); ```", "sources": ["https://cloud.google.com/firestore/docs/query-data/aggregation-queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_aggregation-queries_hl=ko.txt"}
{"question": "sum() 집계 쿼리를 사용하여 특정 필드의 총 합계를 구하는 방법은 무엇인가요?", "answer": "sum() 집계를 사용하여 지정된 쿼리와 일치하는 숫자 값의 총 합계를 반환할 수 있습니다. 예를 들어, cities 컬렉션에서 population 필드의 합계를 구하는 쿼리는 다음과 같습니다: ```java AggregateQuery aggregateQuery = query.aggregate(AggregateField.sum(\"population\")); aggregateQuery.get(AggregateSource.SERVER).addOnCompleteListener(new OnCompleteListener<AggregateQuerySnapshot>() { @Override public void onComplete(@NonNull Task<AggregateQuerySnapshot> task) { if (task.isSuccessful()) { AggregateQuerySnapshot snapshot = task.getResult(); Log.d(TAG, \"Sum: \" + snapshot.get(AggregateField.sum(\"population\"))); } } }); ```", "sources": ["https://cloud.google.com/firestore/docs/query-data/aggregation-queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_aggregation-queries_hl=ko.txt"}
{"question": "average() 집계 쿼리를 사용하여 특정 필드의 평균 값을 구하는 방법은 무엇인가요?", "answer": "average() 집계를 사용하여 특정 쿼리와 일치하는 숫자 값의 평균을 구할 수 있습니다. 예를 들어, cities 컬렉션에서 population 필드의 평균을 구하는 쿼리는 다음과 같습니다: ```java AggregateQuery aggregateQuery = query.aggregate(AggregateField.average(\"population\")); aggregateQuery.get(AggregateSource.SERVER).addOnCompleteListener(new OnCompleteListener<AggregateQuerySnapshot>() { @Override public void onComplete(@NonNull Task<AggregateQuerySnapshot> task) { if (task.isSuccessful()) { AggregateQuerySnapshot snapshot = task.getResult(); Log.d(TAG, \"Average: \" + snapshot.get(AggregateField.average(\"population\"))); } } }); ```", "sources": ["https://cloud.google.com/firestore/docs/query-data/aggregation-queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_aggregation-queries_hl=ko.txt"}
{"question": "여러 집계를 결합하여 쿼리를 실행하는 방법은 무엇인가요?", "answer": "여러 집계를 결합하여 쿼리를 실행할 수 있습니다. 예를 들어, count(), sum(), average()를 결합하여 실행하는 쿼리는 다음과 같습니다: ```java AggregateQuery aggregateQuery = query.aggregate( AggregateField.count(), AggregateField.sum(\"population\"), AggregateField.average(\"population\") ); aggregateQuery.get(AggregateSource.SERVER).addOnCompleteListener(new OnCompleteListener<AggregateQuerySnapshot>() { @Override public void onComplete(@NonNull Task<AggregateQuerySnapshot> task) { if (task.isSuccessful()) { AggregateQuerySnapshot snapshot = task.getResult(); Log.d(TAG, \"Count: \" + snapshot.get(AggregateField.count())); Log.d(TAG, \"Sum: \" + snapshot.get(AggregateField.sum(\"population\"))); Log.d(TAG, \"Average: \" + snapshot.get(AggregateField.average(\"population\"))); } } }); ```", "sources": ["https://cloud.google.com/firestore/docs/query-data/aggregation-queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_aggregation-queries_hl=ko.txt"}
{"question": "집계 쿼리의 가격 책정은 어떻게 되나요?", "answer": "집계 쿼리의 가격 책정은 쿼리와 일치하는 색인 항목 수에 따라 다릅니다. 일치하는 항목의 수가 많으면 소량의 읽기 요금이 부과됩니다. 최대 1,000개의 색인 항목을 읽을 때마다 1회의 읽기 작업 요금이 부과됩니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/aggregation-queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_aggregation-queries_hl=ko.txt"}
{"question": "count() 집계 쿼리에서 쿼리의 필터와 limit 절은 어떻게 고려되나요?", "answer": "count() 집계 쿼리에서는 쿼리의 모든 필터와 limit 절을 고려합니다. 즉, 쿼리에서 설정한 조건에 맞는 문서 수만 계산됩니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/aggregation-queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_aggregation-queries_hl=ko.txt"}
{"question": "sum() 및 average() 집계는 어떤 데이터 타입을 고려하나요?", "answer": "sum() 및 average() 집계는 정수 값과 부동 소수점 숫자 값만 고려합니다. 숫자가 아닌 값은 무시됩니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/aggregation-queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_aggregation-queries_hl=ko.txt"}
{"question": "집계 쿼리를 사용할 때의 이점은 무엇인가요?", "answer": "집계 쿼리를 사용하면 전체 쿼리를 실행하고 집계를 계산하는 것에 비해 요금이 청구되는 문서 읽기와 전송된 바이트 수 모두를 절약할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/aggregation-queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_aggregation-queries_hl=ko.txt"}
{"question": "Firestore에서 집계 쿼리를 사용할 수 있는 언어는 무엇인가요?", "answer": "Firestore는 여러 언어에서 집계 쿼리를 지원합니다. 예를 들어, Java, Kotlin, Node.js, Go, Python, Objective-C 등에서 사용할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/aggregation-queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_aggregation-queries_hl=ko.txt"}
{"question": "집계 쿼리의 결과를 어떻게 처리하나요?", "answer": "집계 쿼리의 결과는 AggregateQuerySnapshot 객체로 반환되며, 이 객체를 통해 count(), sum(), average 등의 값을 가져올 수 있습니다. 예를 들어, snapshot.getCount()를 사용하여 count 값을 가져올 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/aggregation-queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_aggregation-queries_hl=ko.txt"}
{"question": "Firestore에서 데이터를 가져오는 방법은 무엇인가요?", "answer": "Firestore에 저장된 데이터 검색 방법에는 세 가지가 있습니다: 문서, 문서 컬렉션 또는 쿼리 결과에 메서드를 호출하여 데이터를 한 번 가져오거나, 데이터 변경 이벤트를 수신하는 리스너를 설정하거나, 데이터 번들을 통해 외부 소스에서 Firestore 스냅샷 데이터를 일괄 로드하는 방법이 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/get-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_get-data_hl=ko.txt"}
{"question": "Firestore를 초기화하는 방법은 무엇인가요?", "answer": "Firestore의 인스턴스를 초기화하려면 각 플랫폼에 맞는 코드를 사용해야 합니다. 예를 들어, 웹에서는 `import { getFirestore } from \"firebase/firestore\";`를 사용하고, Kotlin에서는 `db = FirebaseFirestore.instance;`를 사용합니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/get-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_get-data_hl=ko.txt"}
{"question": "Firestore에서 문서를 가져오는 코드 예시는 무엇인가요?", "answer": "Firestore에서 문서를 가져오는 예시는 다음과 같습니다. 웹에서는 `const docRef = db.collection(\"cities\").doc(\"SF\"); docRef.get().then((doc) => { if (doc.exists) { console.log(doc.data()); } });`와 같이 사용할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/get-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_get-data_hl=ko.txt"}
{"question": "Firestore에서 여러 문서를 가져오는 방법은 무엇인가요?", "answer": "Firestore에서 여러 문서를 가져오려면 `where()`를 사용하여 특정 조건을 충족하는 모든 문서를 쿼리하고 `get()`을 사용하여 결과를 가져올 수 있습니다. 예를 들어, `db.collection(\"cities\").where(\"capital\", \"==\", true).get()`와 같이 사용할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/get-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_get-data_hl=ko.txt"}
{"question": "Firestore에서 문서가 존재하는지 확인하는 방법은 무엇인가요?", "answer": "Firestore에서 문서가 존재하는지 확인하려면 `get()` 메서드를 호출한 후, `if (snapshot.exists)`를 사용하여 문서의 존재 여부를 확인할 수 있습니다. 예를 들어, `docRef.get().then((doc) => { if (doc.exists) { console.log(\"Document data:\", doc.data()); } });`와 같이 사용할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/get-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_get-data_hl=ko.txt"}
{"question": "Firestore에서 오프라인 캐시를 사용하는 방법은 무엇인가요?", "answer": "Firestore에서 오프라인 캐시를 사용하려면 `get()` 호출에서 `source` 옵션을 설정하여 데이터베이스에서만 가져오거나 오프라인 캐시에서만 가져올 수 있습니다. 예를 들어, `docRef.get({ source: 'cache' })`와 같이 사용할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/get-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_get-data_hl=ko.txt"}
{"question": "Firestore에서 커스텀 객체를 사용하는 방법은 무엇인가요?", "answer": "Firestore에서 커스텀 객체를 사용하려면 클래스에 Firestore 데이터 변환 함수를 정의해야 합니다. 예를 들어, `class City { constructor(name, state, country) { this.name = name; this.state = state; this.country = country; } }`와 같이 정의할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/get-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_get-data_hl=ko.txt"}
{"question": "Firestore에서 하위 컬렉션의 모든 문서를 가져오는 방법은 무엇인가요?", "answer": "Firestore에서 하위 컬렉션의 모든 문서를 가져오려면 해당 하위 컬렉션의 전체 경로가 포함된 참조를 만들어야 합니다. 예를 들어, `db.collection(\"cities\").doc(\"SF\").collection(\"landmarks\").get()`와 같이 사용할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/get-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_get-data_hl=ko.txt"}
{"question": "Firestore에서 쿼리 결과를 정렬하는 방법은 무엇인가요?", "answer": "Firestore에서 쿼리 결과를 정렬하려면 `orderBy()` 메서드를 사용하여 특정 필드에 따라 결과를 정렬할 수 있습니다. 예를 들어, `db.collection(\"cities\").orderBy(\"population\").get()`와 같이 사용할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/get-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_get-data_hl=ko.txt"}
{"question": "Firestore에서 오류를 해결하는 방법은 무엇인가요?", "answer": "Firestore에서 오류를 해결하려면 문제 해결 페이지를 참조하여 오류 코드 및 데이터를 가져올 때 지연 시간 문제를 해결하는 방법을 확인할 수 있습니다. 이 페이지에서는 일반적인 오류와 그 해결 방법을 안내합니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/get-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_get-data_hl=ko.txt"}
{"question": "Firestore에서 실시간 업데이트를 가져오는 방법은 무엇인가요?", "answer": "Firestore에서 실시간 업데이트를 가져오려면 `onSnapshot()` 메서드를 사용하여 문서를 리슨할 수 있습니다. 사용자가 제공하는 콜백이 최초로 호출될 때 단일 문서의 현재 콘텐츠로 문서 스냅샷이 즉시 생성되며, 이후 콘텐츠가 변경될 때마다 콜백이 호출되어 문서 스냅샷이 업데이트됩니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/listen?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_listen_hl=ko.txt"}
{"question": "JavaScript에서 Firestore 문서를 리슨하는 코드 예시는 무엇인가요?", "answer": "JavaScript에서 Firestore 문서를 리슨하는 예시는 다음과 같습니다: ```javascript import { doc, onSnapshot } from \"firebase/firestore\"; const docRef = doc(db, \"cities\", \"SF\"); onSnapshot(docRef, (doc) => { console.log(\"Current data: \", doc.data()); }); ```", "sources": ["https://cloud.google.com/firestore/docs/query-data/listen?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_listen_hl=ko.txt"}
{"question": "Kotlin에서 Firestore 문서를 리슨하는 방법은 무엇인가요?", "answer": "Kotlin에서 Firestore 문서를 리슨하는 방법은 다음과 같습니다: ```kotlin val docRef = db.collection(\"cities\").document(\"SF\") docRef.addSnapshotListener { snapshot, e -> if (e != null) { Log.w(TAG, \"Listen failed.\", e) return@addSnapshotListener } Log.d(TAG, \"Current data: ${snapshot?.data}\") } ```", "sources": ["https://cloud.google.com/firestore/docs/query-data/listen?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_listen_hl=ko.txt"}
{"question": "Firestore에서 쿼리 결과의 변경 사항을 감지하는 방법은 무엇인가요?", "answer": "Firestore에서 쿼리 결과의 변경 사항을 감지하려면 `onSnapshot()` 메서드를 사용하여 쿼리를 리슨하고, `docChanges()` 메서드를 통해 변경된 문서의 추가, 수정, 삭제를 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/listen?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_listen_hl=ko.txt"}
{"question": "Firestore에서 리스너를 분리하는 방법은 무엇인가요?", "answer": "Firestore에서 리스너를 분리하려면 리스너 등록 객체를 사용하여 `remove()` 메서드를 호출하면 됩니다. 예를 들어, `listener.remove()`를 호출하여 리스너를 분리할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/listen?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_listen_hl=ko.txt"}
{"question": "Firestore에서 리스너 오류를 처리하는 방법은 무엇인가요?", "answer": "Firestore에서 리스너 오류를 처리하려면 `onEvent` 메서드의 오류 콜백을 사용하여 오류가 발생했을 때 적절한 처리를 할 수 있습니다. 예를 들어, 오류가 발생하면 로그를 출력하거나 사용자에게 알림을 표시할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/listen?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_listen_hl=ko.txt"}
{"question": "Firestore에서 로컬 변경 사항을 감지하는 방법은 무엇인가요?", "answer": "Firestore에서 로컬 변경 사항을 감지하려면 문서의 `metadata.hasPendingWrites` 속성을 사용하여 문서에 아직 백엔드에 쓰기 처리되지 않은 로컬 변경 사항이 있는지 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/listen?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_listen_hl=ko.txt"}
{"question": "Firestore에서 특정 조건을 가진 문서를 리슨하는 방법은 무엇인가요?", "answer": "Firestore에서 특정 조건을 가진 문서를 리슨하려면 쿼리를 사용하여 조건을 설정한 후, 해당 쿼리에 대해 `onSnapshot()` 메서드를 호출하면 됩니다. 예를 들어, `db.collection(\"cities\").where(\"state\", \"==\", \"CA\").onSnapshot(...)`와 같이 사용할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/listen?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_listen_hl=ko.txt"}
{"question": "Firestore에서 문서의 추가, 수정, 삭제를 감지하는 코드 예시는 무엇인가요?", "answer": "Firestore에서 문서의 추가, 수정, 삭제를 감지하는 예시는 다음과 같습니다: ```javascript db.collection(\"cities\").where(\"state\", \"==\", \"CA\") .onSnapshot((snapshot) => { snapshot.docChanges().forEach((change) => { if (change.type === \"added\") { console.log(\"New city: \", change.doc.data()); } if (change.type === \"modified\") { console.log(\"Modified city: \", change.doc.data()); } if (change.type === \"removed\") { console.log(\"Removed city: \", change.doc.data()); } }); }); ```", "sources": ["https://cloud.google.com/firestore/docs/query-data/listen?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_listen_hl=ko.txt"}
{"question": "Firestore에서 실시간 업데이트를 위한 StreamBuilder 위젯 사용법은 무엇인가요?", "answer": "Firestore에서 실시간 업데이트를 위한 StreamBuilder 위젯 사용법은 다음과 같습니다: ```dart StreamBuilder<QuerySnapshot>( stream: FirebaseFirestore.instance.collection('users').snapshots(), builder: (BuildContext context, AsyncSnapshot<QuerySnapshot> snapshot) { if (snapshot.hasError) { return const Text('Something went wrong'); } // 데이터 처리 로직 }, ); ```", "sources": ["https://cloud.google.com/firestore/docs/query-data/listen?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_listen_hl=ko.txt"}
{"question": "Firestore에서 여러 필드에 범위 필터를 사용하는 방법은 무엇인가요?", "answer": "Firestore에서 여러 필드에 범위 필터를 사용하려면, 쿼리에서 `where` 메서드를 사용하여 각 필드에 대한 조건을 추가합니다. 예를 들어, 인구가 100만 명 이상이고 인구 밀도가 10,000명 미만인 도시를 찾는 쿼리는 다음과 같습니다: ```javascript const q = query( collection(db, \"cities\"), where('population', '>', 1000000), where('density', '<', 10000) ); ```", "sources": ["https://cloud.google.com/firestore/docs/query-data/multiple-range-fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_multiple-range-fields_hl=ko.txt"}
{"question": "Swift에서 Firestore 쿼리를 작성하는 방법은 무엇인가요?", "answer": "Swift에서 Firestore 쿼리를 작성하려면 `whereField` 메서드를 사용하여 조건을 설정합니다. 예를 들어, 인구가 100만 명 이상이고 인구 밀도가 10,000명 미만인 도시를 찾는 쿼리는 다음과 같습니다: ```swift let query = db.collection(\"cities\") .whereField(\"population\", isGreaterThan: 1000000) .whereField(\"density\", isLessThan: 10000) ```", "sources": ["https://cloud.google.com/firestore/docs/query-data/multiple-range-fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_multiple-range-fields_hl=ko.txt"}
{"question": "Firestore에서 Java로 여러 필드에 범위 필터를 적용하는 방법은 무엇인가요?", "answer": "Java에서 Firestore 쿼리를 작성할 때는 `whereGreaterThan` 및 `whereLessThan` 메서드를 사용하여 조건을 설정합니다. 예를 들어, 인구가 100만 명 이상이고 인구 밀도가 10,000명 미만인 도시를 찾는 쿼리는 다음과 같습니다: ```java Query query = db.collection(\"cities\") .whereGreaterThan(\"population\", 1000000) .whereLessThan(\"density\", 10000); ```", "sources": ["https://cloud.google.com/firestore/docs/query-data/multiple-range-fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_multiple-range-fields_hl=ko.txt"}
{"question": "Firestore 쿼리에서 색인 생성 시 고려해야 할 사항은 무엇인가요?", "answer": "Firestore 쿼리에서 색인 생성 시, 쿼리의 `ORDER BY` 절에 따라 쿼리를 제공하는 데 사용할 색인이 결정됩니다. 예를 들어, `ORDER BY a ASC, b ASC` 쿼리는 `a ASC, b ASC` 필드에 대한 복합 색인이 필요합니다. 색인의 필드 순서를 최적화하여 쿼리 성능과 비용을 개선할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/multiple-range-fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_multiple-range-fields_hl=ko.txt"}
{"question": "Firestore에서 쿼리 제약조건 선택성을 고려하여 색인 필드 순서를 지정하는 방법은 무엇인가요?", "answer": "Firestore에서 쿼리 제약조건 선택성을 고려하여 색인 필드 순서를 지정하려면, 선택성이 높은 범위 또는 불일치 필드를 먼저 선택해야 합니다. 선택성이 높은 필드는 작은 문서의 하위 집합과 일치하고, 선택성이 낮은 필드는 큰 문서의 하위 집합과 일치합니다. 따라서 쿼리 제약조건 선택성의 내림차순으로 필드 순서를 지정해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/multiple-range-fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_multiple-range-fields_hl=ko.txt"}
{"question": "Firestore에서 쿼리의 범위 또는 불일치 필드 수는 몇 개로 제한되나요?", "answer": "Firestore는 쿼리에서 범위 또는 불일치 필드의 수를 10개로 제한합니다. 이는 쿼리 실행 비용이 너무 많이 드는 것을 방지하기 위한 것입니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/multiple-range-fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_multiple-range-fields_hl=ko.txt"}
{"question": "Firestore에서 쿼리 최적화를 위한 권장사항은 무엇인가요?", "answer": "Firestore에서 쿼리 최적화를 위해서는 가장 선택적인 범위 또는 불일치 필드를 이어서 오는 일치 여부를 기준으로 색인 필드 순서를 지정해야 합니다. 또한, 쿼리 제약조건 선택성의 내림차순으로 필드 순서를 지정하여 Firestore가 쿼리에 가장 적합한 색인을 선택하도록 해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/multiple-range-fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_multiple-range-fields_hl=ko.txt"}
{"question": "Firestore에서 Python으로 여러 필드에 범위 필터를 적용하는 방법은 무엇인가요?", "answer": "Python에서 Firestore 쿼리를 작성할 때는 `where` 메서드를 사용하여 조건을 설정합니다. 예를 들어, 인구가 100만 명 이상이고 인구 밀도가 10,000명 미만인 도시를 찾는 쿼리는 다음과 같습니다: ```python query = db.collection(\"cities\") .where(\"population\", \">\", 1000000) .where(\"density\", \"<\", 10000) ```", "sources": ["https://cloud.google.com/firestore/docs/query-data/multiple-range-fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_multiple-range-fields_hl=ko.txt"}
{"question": "Firestore에서 Node.js로 여러 필드에 범위 필터를 적용하는 방법은 무엇인가요?", "answer": "Node.js에서 Firestore 쿼리를 작성할 때는 `where` 메서드를 사용하여 조건을 설정합니다. 예를 들어, 인구가 100만 명 이상이고 인구 밀도가 10,000명 미만인 도시를 찾는 쿼리는 다음과 같습니다: ```javascript db.collection(\"cities\") .where(\"population\", \">\", 1000000) .where(\"density\", \"<\", 10000); ```", "sources": ["https://cloud.google.com/firestore/docs/query-data/multiple-range-fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_multiple-range-fields_hl=ko.txt"}
{"question": "Firestore에서 C#으로 여러 필드에 범위 필터를 적용하는 방법은 무엇인가요?", "answer": "C#에서 Firestore 쿼리를 작성할 때는 `WhereGreaterThan` 및 `WhereLessThan` 메서드를 사용하여 조건을 설정합니다. 예를 들어, 인구가 100만 명 이상이고 인구 밀도가 10,000명 미만인 도시를 찾는 쿼리는 다음과 같습니다: ```csharp CollectionReference citiesRef = db.Collection(\"cities\"); Query query = citiesRef .WhereGreaterThan(\"Population\", 1000000) .WhereLessThan(\"Density\", 10000); ```", "sources": ["https://cloud.google.com/firestore/docs/query-data/multiple-range-fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_multiple-range-fields_hl=ko.txt"}
{"question": "Firestore에서 쿼리 커서를 사용하여 데이터 페이지화를 어떻게 구현하나요?", "answer": "Firestore의 쿼리 커서를 사용하여 쿼리의 시작점과 끝점을 정의할 수 있습니다. 예를 들어, `startAt()` 또는 `startAfter()` 메서드를 사용하여 쿼리의 시작점을 설정할 수 있습니다. `startAt()`은 시작점을 포함하고, `startAfter()`는 시작점을 제외합니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/query-cursors?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_query-cursors_hl=ko.txt"}
{"question": "Firestore에서 `startAt()` 메서드를 사용하는 코드 예시는 무엇인가요?", "answer": "다음은 Firestore에서 `startAt()` 메서드를 사용하는 코드 예시입니다: ```javascript import { query, orderBy, startAt } from \"firebase/firestore\"; const q = query(collectionRef, orderBy(\"population\"), startAt(1000000)); ```", "sources": ["https://cloud.google.com/firestore/docs/query-data/query-cursors?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_query-cursors_hl=ko.txt"}
{"question": "Firestore에서 `endAt()` 메서드를 사용하여 쿼리의 끝점을 정의하는 방법은 무엇인가요?", "answer": "`endAt()` 메서드를 사용하여 쿼리 결과의 끝점을 정의할 수 있습니다. 예를 들어, `endAt(1000000)`을 사용하여 인구가 1,000,000인 도시까지의 결과를 반환할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/query-cursors?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_query-cursors_hl=ko.txt"}
{"question": "Firestore에서 문서 스냅샷을 쿼리 커서의 시작점으로 사용하는 방법은 무엇인가요?", "answer": "문서 스냅샷을 쿼리 커서의 시작점으로 사용하려면, 해당 문서의 스냅샷을 `startAt()` 메서드에 전달하면 됩니다. 예를 들어, '샌프란시스코' 문서의 스냅샷을 사용하여 인구가 그 도시보다 많거나 같은 도시를 반환할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/query-cursors?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_query-cursors_hl=ko.txt"}
{"question": "Firestore에서 여러 필드를 기준으로 커서를 설정하는 방법은 무엇인가요?", "answer": "여러 필드를 기준으로 커서를 설정하려면, `orderBy()` 메서드를 사용하여 추가 필드를 지정할 수 있습니다. 예를 들어, `orderBy(\"name\").orderBy(\"state\").startAt(\"Springfield\", \"Missouri\")`와 같이 사용할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/query-cursors?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_query-cursors_hl=ko.txt"}
{"question": "Firestore에서 쿼리 페이지화를 위해 `limit()` 메서드를 사용하는 방법은 무엇인가요?", "answer": "쿼리 페이지화를 위해 `limit()` 메서드를 사용하여 반환할 문서 수를 제한할 수 있습니다. 예를 들어, `limit(25)`를 사용하여 한 번에 25개의 문서만 반환하도록 설정할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/query-cursors?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_query-cursors_hl=ko.txt"}
{"question": "Firestore에서 `startAfter()` 메서드를 사용하는 코드 예시는 무엇인가요?", "answer": "다음은 Firestore에서 `startAfter()` 메서드를 사용하는 코드 예시입니다: ```javascript const nextQuery = query(collectionRef, orderBy(\"population\"), startAfter(lastVisible), limit(25)); ```", "sources": ["https://cloud.google.com/firestore/docs/query-data/query-cursors?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_query-cursors_hl=ko.txt"}
{"question": "Firestore에서 쿼리 커서를 사용하여 특정 문서 이후의 데이터를 가져오는 방법은 무엇인가요?", "answer": "특정 문서 이후의 데이터를 가져오려면, 해당 문서의 스냅샷을 `startAfter()` 메서드에 전달하면 됩니다. 예를 들어, `startAfter(documentSnapshot)`을 사용하여 해당 문서 이후의 데이터를 가져올 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/query-cursors?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_query-cursors_hl=ko.txt"}
{"question": "Firestore에서 쿼리 커서를 사용하여 데이터의 일부만 반환하는 방법은 무엇인가요?", "answer": "쿼리 커서를 사용하여 데이터의 일부만 반환하려면, `startAt()` 또는 `endAt()` 메서드를 사용하여 쿼리의 시작점과 끝점을 정의하면 됩니다. 이를 통해 원하는 범위의 데이터만 반환할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/query-cursors?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_query-cursors_hl=ko.txt"}
{"question": "Firestore에서 커서를 사용하여 쿼리의 범위를 구체적으로 정의하는 방법은 무엇인가요?", "answer": "커서를 사용하여 쿼리의 범위를 구체적으로 정의하려면, `where()` 메서드를 사용하여 조건을 추가하고, `startAt()` 또는 `endAt()` 메서드를 사용하여 시작점과 끝점을 설정하면 됩니다.", "sources": ["https://cloud.google.com/firestore/docs/query-data/query-cursors?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-data_query-cursors_hl=ko.txt"}
{"question": "Query Explain을 사용하여 Firestore 쿼리의 성능을 어떻게 이해할 수 있나요?", "answer": "Query Explain을 사용하면 Firestore 쿼리를 백엔드에 제출하고 쿼리 실행에 대한 성능 통계를 받을 수 있습니다. 이는 쿼리의 비효율성과 서버 측 병목 현상이 발생할 가능성이 있는 위치를 보여줍니다.", "sources": ["https://cloud.google.com/firestore/docs/query-explain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-explain_hl=ko.txt"}
{"question": "Query Explain의 기본 옵션과 분석 옵션의 차이는 무엇인가요?", "answer": "기본 옵션은 쿼리 계획 단계 정보만 반환하며, 쿼리를 실행하지 않습니다. 반면, 분석 옵션은 쿼리를 계획하고 실행하여 쿼리 실행 런타임의 통계와 플래너 정보를 모두 반환합니다.", "sources": ["https://cloud.google.com/firestore/docs/query-explain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-explain_hl=ko.txt"}
{"question": "기본 옵션으로 Query Explain을 사용하는 방법은 무엇인가요?", "answer": "기본 옵션 요청은 클라이언트 라이브러리를 사용하여 제출할 수 있으며, 예를 들어 자바에서는 `ExplainOptions options = ExplainOptions.builder().build();`를 사용하여 요청을 생성합니다.", "sources": ["https://cloud.google.com/firestore/docs/query-explain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-explain_hl=ko.txt"}
{"question": "분석 옵션을 사용하여 Query Explain을 호출하는 코드 예시는 무엇인가요?", "answer": "노드(관리자)에서 분석 옵션을 사용하여 Query Explain을 호출하는 예시는 다음과 같습니다: ```javascript Query q = db.collection(\"col\").whereGreaterThan(\"a\", 1); ExplainOptions options = ExplainOptions.builder().setAnalyze(true).build(); ExplainResults<QuerySnapshot> explainResults = q.explain(options).get(); ```", "sources": ["https://cloud.google.com/firestore/docs/query-explain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-explain_hl=ko.txt"}
{"question": "Query Explain을 사용할 때 발생하는 요금은 어떻게 되나요?", "answer": "기본 옵션으로 Query Explain을 사용할 경우 색인 또는 읽기 작업이 수행되지 않으며, 읽기 작업 1회에 대한 요금이 청구됩니다. 분석 옵션을 사용할 경우 쿼리에 대한 일반적인 요금이 청구됩니다.", "sources": ["https://cloud.google.com/firestore/docs/query-explain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-explain_hl=ko.txt"}
{"question": "Query Explain의 결과에서 어떤 정보를 얻을 수 있나요?", "answer": "Query Explain의 결과는 쿼리에 필요한 색인, 사용된 색인, 쿼리 실행에 대한 시스템 수준 통계 및 결제 정보를 포함합니다.", "sources": ["https://cloud.google.com/firestore/docs/query-explain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-explain_hl=ko.txt"}
{"question": "Query Explain은 어떤 종류의 쿼리를 지원하나요?", "answer": "Query Explain은 폴링된 쿼리를 지원하며, 스트리밍 쿼리는 지원하지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/query-explain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-explain_hl=ko.txt"}
{"question": "Query Explain을 사용하여 쿼리의 색인을 어떻게 조정할 수 있나요?", "answer": "Query Explain을 통해 쿼리 계획 단계에 대한 정보를 얻어 쿼리에 필요한 색인이 있는지 확인하고, 어떤 색인이 사용되는지 파악하여 색인을 조정할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/query-explain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-explain_hl=ko.txt"}
{"question": "Query Explain을 사용하여 쿼리 성능을 최적화하는 방법은 무엇인가요?", "answer": "분석 옵션을 사용하여 다양한 쿼리 및 색인 구성을 테스트하고, 쿼리의 비용과 지연 시간을 최적화할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/query-explain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-explain_hl=ko.txt"}
{"question": "Query Explain을 사용하기 위해 필요한 인증 방법은 무엇인가요?", "answer": "Query Explain 요청은 IAM으로 인증되며, 일반 쿼리 작업에 대한 동일한 권한을 사용합니다. Firebase 인증은 무시됩니다.", "sources": ["https://cloud.google.com/firestore/docs/query-explain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_query-explain_hl=ko.txt"}
{"question": "Firestore 데이터베이스를 만들기 위한 첫 번째 단계는 무엇인가요?", "answer": "Firestore 데이터베이스를 만들기 위해서는 Firebase Console에서 프로젝트를 열고, 왼쪽 패널에서 '빌드'를 펼친 다음 'Firestore 데이터베이스'를 선택하고 '데이터베이스 만들기'를 클릭해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/quickstart-mobile-web?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart-mobile-web_hl=ko.txt"}
{"question": "Firestore의 보안 규칙에서 '테스트 모드'와 '잠금 모드'의 차이는 무엇인가요?", "answer": "'테스트 모드'는 모든 사용자가 데이터를 읽고 덮어쓸 수 있도록 허용하는 반면, '잠금 모드'는 모바일 및 웹 클라이언트의 모든 읽기 및 쓰기를 거부합니다. 인증된 애플리케이션 서버는 여전히 데이터베이스에 접근할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/quickstart-mobile-web?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart-mobile-web_hl=ko.txt"}
{"question": "웹 버전 9에서 Firestore를 초기화하는 방법은 무엇인가요?", "answer": "웹 버전 9에서 Firestore를 초기화하려면 다음 코드를 사용합니다: ```javascript import { initializeApp } from \"firebase/app\"; import { getFirestore } from \"firebase/firestore\"; ```", "sources": ["https://cloud.google.com/firestore/docs/quickstart-mobile-web?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart-mobile-web_hl=ko.txt"}
{"question": "Firestore에 데이터를 추가하는 기본적인 코드 예시는 무엇인가요?", "answer": "Firestore에 데이터를 추가하는 기본적인 코드 예시는 다음과 같습니다: ```javascript import { collection, addDoc } from \"firebase/firestore\"; try { const docRef = await addDoc(collection(db, \"users\"), { first: \"Ada\", last: \"Lovelace\", born: 1815 }); console.log(\"Document written with ID: \", docRef.id); } catch (e) { console.error(\"Error adding document: \", e); } ```", "sources": ["https://cloud.google.com/firestore/docs/quickstart-mobile-web?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart-mobile-web_hl=ko.txt"}
{"question": "Firestore에서 데이터를 가져오는 방법은 무엇인가요?", "answer": "Firestore에서 데이터를 가져오려면 다음과 같은 코드를 사용할 수 있습니다: ```javascript const querySnapshot = await getDocs(collection(db, \"users\")); querySnapshot.forEach((doc) => { console.log(`${doc.id} => ${doc.data()}`); }); ```", "sources": ["https://cloud.google.com/firestore/docs/quickstart-mobile-web?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart-mobile-web_hl=ko.txt"}
{"question": "Android에서 Firestore 라이브러리를 추가하는 방법은 무엇인가요?", "answer": "Android에서 Firestore 라이브러리를 추가하려면 모듈(앱 수준) Gradle 파일에서 다음 종속 항목을 선언해야 합니다: ```groovy implementation(\"com.google.firebase:firebase-firestore:26.0.0\") ```", "sources": ["https://cloud.google.com/firestore/docs/quickstart-mobile-web?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart-mobile-web_hl=ko.txt"}
{"question": "Flutter에서 Firestore를 설정하는 방법은 무엇인가요?", "answer": "Flutter에서 Firestore를 설정하려면 Flutter 프로젝트 루트에서 다음 명령어를 실행하여 플러그인을 설치합니다: ```bash flutter pub add cloud_firestore ```", "sources": ["https://cloud.google.com/firestore/docs/quickstart-mobile-web?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart-mobile-web_hl=ko.txt"}
{"question": "C++에서 Firestore를 초기화하는 방법은 무엇인가요?", "answer": "C++에서 Firestore를 초기화하려면 다음 코드를 사용합니다: ```cpp using Firebase::Firestore; FirebaseFirestore db = FirebaseFirestore::DefaultInstance(); ```", "sources": ["https://cloud.google.com/firestore/docs/quickstart-mobile-web?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart-mobile-web_hl=ko.txt"}
{"question": "Firestore에서 데이터 추가 시 문서가 자동으로 생성되는 이유는 무엇인가요?", "answer": "Firestore에서 데이터를 추가할 때 문서에 데이터를 처음 추가하면 Firestore가 암시적으로 컬렉션과 문서를 생성하기 때문에 별도로 명시적으로 만들 필요가 없습니다.", "sources": ["https://cloud.google.com/firestore/docs/quickstart-mobile-web?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart-mobile-web_hl=ko.txt"}
{"question": "Firestore의 데이터베이스 위치를 선택할 수 없는 경우 어떻게 해야 하나요?", "answer": "데이터베이스 위치를 선택할 수 없는 경우, 프로젝트의 '기본 Google Cloud 리소스의 위치'가 이미 설정된 것입니다. 이 경우 위치를 변경할 수 없습니다.", "sources": ["https://cloud.google.com/firestore/docs/quickstart-mobile-web?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart-mobile-web_hl=ko.txt"}
{"question": "Firestore 데이터베이스를 만들기 위해 어떤 단계를 따라야 하나요?", "answer": "Firestore 데이터베이스를 만들기 위해서는 Google Cloud Console에서 프로젝트를 선택하거나 생성한 후, Firestore 뷰어로 이동하여 기본 모드의 Firestore를 선택하고 위치를 설정한 후 데이터베이스 만들기를 클릭해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/quickstart-servers?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart-servers_hl=ko.txt"}
{"question": "Firestore에 인증을 설정하는 방법은 무엇인가요?", "answer": "Firestore에 인증을 설정하려면 서비스 계정을 만들고, 환경 변수 GOOGLE_APPLICATION_CREDENTIALS를 설정하여 인증 정보를 제공해야 합니다. 예를 들어, Linux 또는 macOS에서는 `export GOOGLE_APPLICATION_CREDENTIALS=\"KEY_PATH\"`를 사용하고, Windows에서는 `$env:GOOGLE_APPLICATION_CREDENTIALS=\"KEY_PATH\"`를 사용합니다.", "sources": ["https://cloud.google.com/firestore/docs/quickstart-servers?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart-servers_hl=ko.txt"}
{"question": "Java에서 Firestore 클라이언트를 추가하는 방법은 무엇인가요?", "answer": "Java에서 Firestore 클라이언트를 추가하려면 Maven을 사용하여 `pom.xml` 파일에 다음 종속성을 추가해야 합니다: ```xml <dependencyManagement> <dependencies> <dependency> <groupId>com.google.cloud</groupId> <artifactId>libraries-bom</artifactId> <version>26.64.0</version> <type>pom</type> <scope>import</scope> </dependency> </dependencies> </dependencyManagement> <dependencies> <dependency> <groupId>com.google.cloud</groupId> <artifactId>google-cloud-firestore</artifactId> </dependency> </dependencies> ```", "sources": ["https://cloud.google.com/firestore/docs/quickstart-servers?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart-servers_hl=ko.txt"}
{"question": "Python에서 Firestore 클라이언트를 초기화하는 방법은 무엇인가요?", "answer": "Python에서 Firestore 클라이언트를 초기화하려면 다음과 같이 코드를 작성합니다: ```python from google.cloud import firestore db = firestore.Client(project=\"my-project-id\") ```", "sources": ["https://cloud.google.com/firestore/docs/quickstart-servers?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart-servers_hl=ko.txt"}
{"question": "Firestore에 데이터를 추가하는 방법은 무엇인가요?", "answer": "Firestore에 데이터를 추가하려면 다음과 같은 코드를 사용할 수 있습니다. 예를 들어, Python에서는 다음과 같이 작성합니다: ```python doc_ref = db.collection(\"users\").document(\"alovelace\") doc_ref.set({\"first\": \"Ada\", \"last\": \"Lovelace\", \"born\": 1815}) ```", "sources": ["https://cloud.google.com/firestore/docs/quickstart-servers?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart-servers_hl=ko.txt"}
{"question": "Firestore에서 데이터를 읽는 방법은 무엇인가요?", "answer": "Firestore에서 데이터를 읽으려면 `get` 메서드를 사용하여 전체 컬렉션을 검색할 수 있습니다. 예를 들어, Python에서는 다음과 같이 작성합니다: ```python users_ref = db.collection(\"users\") docs = users_ref.stream() for doc in docs: print(f\"{doc.id} => {doc.to_dict()}\") ```", "sources": ["https://cloud.google.com/firestore/docs/quickstart-servers?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart-servers_hl=ko.txt"}
{"question": "Node.js에서 Firestore 클라이언트를 추가하는 방법은 무엇인가요?", "answer": "Node.js에서 Firestore 클라이언트를 추가하려면 다음 명령어를 사용하여 설치합니다: ```bash npm install --save @google-cloud/firestore ```", "sources": ["https://cloud.google.com/firestore/docs/quickstart-servers?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart-servers_hl=ko.txt"}
{"question": "Firestore에서 문서를 추가할 때 어떤 형식으로 데이터를 저장하나요?", "answer": "Firestore에서 문서를 추가할 때는 키-값 쌍의 형태로 데이터를 저장합니다. 예를 들어, Java에서는 다음과 같이 작성합니다: ```java DocumentReference docRef = db.collection(\"users\").document(\"alovelace\"); Map<String, Object> data = new HashMap<>(); data.put(\"first\", \"Ada\"); data.put(\"last\", \"Lovelace\"); data.put(\"born\", 1815); ApiFuture<WriteResult> result = docRef.set(data); ```", "sources": ["https://cloud.google.com/firestore/docs/quickstart-servers?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart-servers_hl=ko.txt"}
{"question": "Firestore에서 비동기 클라이언트를 사용하는 방법은 무엇인가요?", "answer": "Firestore에서 비동기 클라이언트를 사용하려면 Python에서는 다음과 같이 작성합니다: ```python from google.cloud import firestore db = firestore.AsyncClient(project=\"my-project-id\") ```", "sources": ["https://cloud.google.com/firestore/docs/quickstart-servers?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart-servers_hl=ko.txt"}
{"question": "Firestore에서 데이터를 추가한 후 확인하는 방법은 무엇인가요?", "answer": "Firestore에서 데이터를 추가한 후 Firebase Console의 데이터 뷰어를 사용하여 추가한 데이터를 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/quickstart-servers?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart-servers_hl=ko.txt"}
{"question": "Firestore 데이터베이스를 만들기 위한 첫 번째 단계는 무엇인가요?", "answer": "Firestore 데이터베이스를 만들기 위해서는 Firebase Console에서 프로젝트를 열고, 왼쪽 패널에서 '빌드'를 펼친 다음 'Firestore 데이터베이스'를 선택하고 '데이터베이스 만들기'를 클릭해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/quickstarts?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstarts_hl=ko.txt"}
{"question": "Firestore의 보안 규칙을 설정할 때 선택할 수 있는 모드는 무엇인가요?", "answer": "Firestore의 보안 규칙을 설정할 때 '테스트 모드'와 '잠금 모드'를 선택할 수 있습니다. 테스트 모드는 모든 사용자가 데이터를 읽고 덮어쓸 수 있으며, 잠금 모드는 모든 읽기 및 쓰기를 거부합니다.", "sources": ["https://cloud.google.com/firestore/docs/quickstarts?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstarts_hl=ko.txt"}
{"question": "웹 버전 9에서 Firestore를 초기화하는 방법은 무엇인가요?", "answer": "웹 버전 9에서 Firestore를 초기화하려면 다음 코드를 사용합니다: ```javascript import { initializeApp } from \"firebase/app\"; import { getFirestore } from \"firebase/firestore\"; ```", "sources": ["https://cloud.google.com/firestore/docs/quickstarts?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstarts_hl=ko.txt"}
{"question": "Android에서 Firestore 라이브러리를 추가하는 방법은 무엇인가요?", "answer": "Android에서 Firestore 라이브러리를 추가하려면 모듈(앱 수준) Gradle 파일에 다음 종속 항목을 선언해야 합니다: ```groovy implementation(\"com.google.firebase:firebase-firestore:26.0.0\") ```", "sources": ["https://cloud.google.com/firestore/docs/quickstarts?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstarts_hl=ko.txt"}
{"question": "Firestore에 데이터를 추가하는 기본적인 코드 예시는 무엇인가요?", "answer": "Firestore에 데이터를 추가하는 기본적인 코드 예시는 다음과 같습니다: ```javascript import { collection, addDoc } from \"firebase/firestore\"; const docRef = await addDoc(collection(db, \"users\"), { first: \"Ada\", last: \"Lovelace\", born: 1815 }); ```", "sources": ["https://cloud.google.com/firestore/docs/quickstarts?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstarts_hl=ko.txt"}
{"question": "Firestore에서 데이터를 읽는 방법은 무엇인가요?", "answer": "Firestore에서 데이터를 읽으려면 다음과 같은 코드를 사용할 수 있습니다: ```javascript const querySnapshot = await getDocs(collection(db, \"users\")); querySnapshot.forEach((doc) => { console.log(`${doc.id} => ${doc.data()}`); }); ```", "sources": ["https://cloud.google.com/firestore/docs/quickstarts?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstarts_hl=ko.txt"}
{"question": "Firestore에서 데이터 추가 시 발생할 수 있는 오류를 어떻게 처리하나요?", "answer": "Firestore에서 데이터 추가 시 오류를 처리하려면 `addOnFailureListener`를 사용하여 오류를 로그로 출력할 수 있습니다. 예를 들어: ```java .addOnFailureListener(e -> Log.w(TAG, \"Error adding document\", e)); ```", "sources": ["https://cloud.google.com/firestore/docs/quickstarts?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstarts_hl=ko.txt"}
{"question": "Firestore의 위치를 선택할 수 없는 경우 어떻게 해야 하나요?", "answer": "Firestore의 위치를 선택할 수 없는 경우, 프로젝트의 '기본 Google Cloud 리소스의 위치'가 이미 설정된 것입니다. 이 경우 위치를 변경할 수 없습니다.", "sources": ["https://cloud.google.com/firestore/docs/quickstarts?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstarts_hl=ko.txt"}
{"question": "Firestore를 사용 설정하면 어떤 API도 사용 설정되나요?", "answer": "Firestore를 사용 설정하면 Cloud API Manager의 Firestore API도 자동으로 사용 설정됩니다.", "sources": ["https://cloud.google.com/firestore/docs/quickstarts?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstarts_hl=ko.txt"}
{"question": "Firestore에서 데이터 모델을 이해하기 위한 자료는 어디에서 찾을 수 있나요?", "answer": "Firestore에서 데이터 모델을 이해하기 위한 자료는 '데이터 모델' 섹션에서 확인할 수 있습니다. 이 섹션에서는 계층적 데이터와 하위 컬렉션을 포함한 Firestore의 데이터 구조에 대해 설명합니다.", "sources": ["https://cloud.google.com/firestore/docs/quickstarts?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstarts_hl=ko.txt"}
{"question": "Firestore 데이터베이스를 만들기 위한 첫 번째 단계는 무엇인가요?", "answer": "Firestore 데이터베이스를 만들기 위해서는 Firebase Console에서 프로젝트를 열고, 왼쪽 패널에서 '빌드'를 펼친 후 'Firestore 데이터베이스'를 선택하고 '데이터베이스 만들기'를 클릭해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/quickstart?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart_hl=ko.txt"}
{"question": "Firestore의 보안 규칙에서 '테스트 모드'와 '잠금 모드'의 차이는 무엇인가요?", "answer": "'테스트 모드'는 모든 사용자가 데이터를 읽고 덮어쓸 수 있도록 허용하는 반면, '잠금 모드'는 모바일 및 웹 클라이언트의 모든 읽기 및 쓰기를 거부합니다. 인증된 애플리케이션 서버에서는 계속 데이터베이스에 접근할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/quickstart?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart_hl=ko.txt"}
{"question": "웹 버전 9에서 Firestore를 초기화하는 방법은 무엇인가요?", "answer": "웹 버전 9에서 Firestore를 초기화하려면 다음 코드를 사용합니다: ```javascript import { initializeApp } from \"firebase/app\"; import { getFirestore } from \"firebase/firestore\"; ```", "sources": ["https://cloud.google.com/firestore/docs/quickstart?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart_hl=ko.txt"}
{"question": "Android에서 Firestore 라이브러리를 추가하는 방법은 무엇인가요?", "answer": "Android에서 Firestore 라이브러리를 추가하려면 모듈(앱 수준) Gradle 파일에 다음 종속 항목을 선언해야 합니다: ```groovy implementation(\"com.google.firebase:firebase-firestore:26.0.0\") ```", "sources": ["https://cloud.google.com/firestore/docs/quickstart?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart_hl=ko.txt"}
{"question": "Firestore에 데이터를 추가하는 기본적인 코드 예시는 무엇인가요?", "answer": "Firestore에 데이터를 추가하는 기본적인 코드 예시는 다음과 같습니다: ```javascript const docRef = await addDoc(collection(db, \"users\"), { first: \"Ada\", last: \"Lovelace\", born: 1815 }); ```", "sources": ["https://cloud.google.com/firestore/docs/quickstart?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart_hl=ko.txt"}
{"question": "Firestore에서 데이터를 가져오는 방법은 무엇인가요?", "answer": "Firestore에서 데이터를 가져오려면 다음과 같은 코드를 사용할 수 있습니다: ```javascript const querySnapshot = await getDocs(collection(db, \"users\")); querySnapshot.forEach((doc) => { console.log(`${doc.id} => ${doc.data()}`); }); ```", "sources": ["https://cloud.google.com/firestore/docs/quickstart?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart_hl=ko.txt"}
{"question": "C++에서 Firestore를 초기화하는 방법은 무엇인가요?", "answer": "C++에서 Firestore를 초기화하려면 다음 코드를 사용합니다: ```cpp using Firebase.Firestore; FirebaseFirestore db = FirebaseFirestore.DefaultInstance; ```", "sources": ["https://cloud.google.com/firestore/docs/quickstart?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart_hl=ko.txt"}
{"question": "Flutter에서 Firestore 플러그인을 설치하는 방법은 무엇인가요?", "answer": "Flutter에서 Firestore 플러그인을 설치하려면 Flutter 프로젝트 루트에서 다음 명령어를 실행합니다: ```bash flutter pub add cloud_firestore ```", "sources": ["https://cloud.google.com/firestore/docs/quickstart?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart_hl=ko.txt"}
{"question": "Firestore에서 데이터 추가 시 발생할 수 있는 오류를 어떻게 처리하나요?", "answer": "Firestore에서 데이터 추가 시 오류를 처리하려면 `addOnSuccessListener`와 `addOnFailureListener`를 사용하여 성공 및 실패를 처리할 수 있습니다. 예를 들어: ```java .add(user) .addOnSuccessListener(new OnSuccessListener<DocumentReference>() { @Override public void onSuccess(DocumentReference documentReference) { Log.d(TAG, \"DocumentSnapshot added with ID: \" + documentReference.getId()); } }) .addOnFailureListener(new OnFailureListener() { @Override public void onFailure(@NonNull Exception e) { Log.w(TAG, \"Error adding document\", e); } }); ```", "sources": ["https://cloud.google.com/firestore/docs/quickstart?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart_hl=ko.txt"}
{"question": "Firestore에서 데이터베이스를 만들 때 위치를 선택할 수 없는 경우 어떻게 해야 하나요?", "answer": "위치를 선택할 수 없는 경우, 프로젝트의 '기본 Google Cloud 리소스의 위치'가 이미 설정된 것입니다. 이 경우, 해당 위치는 프로젝트 생성 중에 설정되거나 다른 서비스를 설정할 때 공유됩니다.", "sources": ["https://cloud.google.com/firestore/docs/quickstart?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_quickstart_hl=ko.txt"}
{"question": "ExplainMetrics의 JSON 표현은 어떻게 되나요?", "answer": "ExplainMetrics의 JSON 표현은 다음과 같습니다: ```json { \"planSummary\": { object (PlanSummary) }, \"executionStats\": { object (ExecutionStats) } } ```", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/ExplainMetrics?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_ExplainMetrics_hl=ko.txt"}
{"question": "ExplainMetrics의 planSummary 필드는 무엇을 나타내나요?", "answer": "planSummary 필드는 쿼리의 계획 단계 정보를 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/ExplainMetrics?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_ExplainMetrics_hl=ko.txt"}
{"question": "ExplainMetrics의 executionStats 필드는 어떤 정보를 포함하나요?", "answer": "executionStats 필드는 쿼리 실행의 집계 통계를 포함하며, ExplainOptions.analyze가 true로 설정된 경우에만 존재합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/ExplainMetrics?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_ExplainMetrics_hl=ko.txt"}
{"question": "PlanSummary의 indexesUsed 필드는 어떤 형식으로 구성되나요?", "answer": "indexesUsed 필드는 선택된 인덱스에 대한 정보를 포함하며, 예를 들어 다음과 같은 형식입니다: ```json [ {\"queryScope\": \"Collection\", \"properties\": \"(foo ASC, name ASC)\"}, {\"queryScope\": \"Collection\", \"properties\": \"(bar ASC, name ASC)\"} ] ```", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/ExplainMetrics?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_ExplainMetrics_hl=ko.txt"}
{"question": "ExecutionStats의 resultsReturned 필드는 어떤 정보를 제공하나요?", "answer": "resultsReturned 필드는 반환된 총 결과 수를 나타내며, 문서, 프로젝션, 집계 결과 및 키를 포함합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/ExplainMetrics?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_ExplainMetrics_hl=ko.txt"}
{"question": "ExecutionStats의 executionDuration 필드는 어떤 형식으로 제공되나요?", "answer": "executionDuration 필드는 백엔드에서 쿼리를 실행하는 데 걸린 총 시간을 나타내며, 초 단위로 최대 아홉 자리의 소수점 이하를 포함하고 's'로 끝나는 형식입니다. 예: \"3.5s\".", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/ExplainMetrics?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_ExplainMetrics_hl=ko.txt"}
{"question": "ExecutionStats의 readOperations 필드는 무엇을 나타내나요?", "answer": "readOperations 필드는 총 청구 가능한 읽기 작업 수를 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/ExplainMetrics?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_ExplainMetrics_hl=ko.txt"}
{"question": "ExecutionStats의 debugStats 필드는 어떤 정보를 포함할 수 있나요?", "answer": "debugStats 필드는 쿼리 실행의 디버깅 통계를 포함할 수 있으며, 예를 들어 인덱스 항목 스캔 수, 문서 스캔 수 및 청구 세부정보를 포함할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/ExplainMetrics?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_ExplainMetrics_hl=ko.txt"}
{"question": "ExplainOptions.analyze가 true로 설정되면 어떤 변화가 있나요?", "answer": "ExplainOptions.analyze가 true로 설정되면 executionStats 필드가 포함되어 쿼리 실행의 집계 통계를 제공받을 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/ExplainMetrics?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_ExplainMetrics_hl=ko.txt"}
{"question": "ExplainMetrics의 각 필드에 대한 설명은 어디에서 확인할 수 있나요?", "answer": "ExplainMetrics의 각 필드에 대한 설명은 해당 문서의 필드 섹션에서 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/ExplainMetrics?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_ExplainMetrics_hl=ko.txt"}
{"question": "`batchGet` 메서드를 사용하여 여러 문서를 가져오는 방법은 무엇인가요?", "answer": "`batchGet` 메서드는 POST 요청을 통해 여러 문서를 가져옵니다. 요청 URL은 `https://firestore.googleapis.com/v1beta1/{database=projects/*/databases/*}/documents:batchGet` 형식입니다. 요청 본문에는 가져올 문서의 이름을 포함하는 `documents` 배열이 필요합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`batchGet` 요청의 요청 본문 구조는 어떻게 되나요?", "answer": "요청 본문은 다음과 같은 구조를 가집니다: ```json { \"documents\": [string], \"mask\": { object (DocumentMask) }, \"consistency_selector\": { \"transaction\": string, \"newTransaction\": { object (TransactionOptions) }, \"readTime\": string } } ```", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`documents` 필드에 포함해야 하는 값의 형식은 무엇인가요?", "answer": "`documents` 필드에는 가져올 문서의 이름이 포함되어야 하며, 형식은 `projects/{projectId}/databases/{databaseId}/documents/{document_path}`입니다. 요청이 실패하는 경우는 문서가 주어진 데이터베이스의 자식 리소스가 아닐 때입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`mask` 필드는 무엇을 의미하며, 어떻게 사용하나요?", "answer": "`mask` 필드는 반환할 필드를 지정하는 데 사용됩니다. 설정하지 않으면 모든 필드가 반환됩니다. 문서에 `mask`에 포함되지 않은 필드가 있을 경우, 해당 필드는 응답에서 반환되지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`consistency_selector` 필드의 역할은 무엇인가요?", "answer": "`consistency_selector` 필드는 트랜잭션의 일관성 모드를 설정하는 데 사용됩니다. 설정하지 않으면 기본적으로 강한 일관성이 적용됩니다. 이 필드는 `transaction`, `newTransaction`, `readTime` 중 하나만 포함될 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`readTime` 필드는 어떤 형식으로 입력해야 하나요?", "answer": "`readTime` 필드는 RFC 3339 형식의 타임스탬프를 사용해야 하며, 마이크로초 정밀도로 지난 한 시간 이내의 시간이어야 합니다. 예시로는 `\"2014-10-02T15:01:23Z\"`와 같은 형식이 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`batchGet` 요청이 성공했을 때 응답 본문의 구조는 어떻게 되나요?", "answer": "성공적인 응답 본문은 다음과 같은 구조를 가집니다: ```json { \"transaction\": string, \"readTime\": string, \"result\": { \"found\": { object (Document) }, \"missing\": string } } ```", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`transaction` 필드는 어떤 경우에 설정되나요?", "answer": "`transaction` 필드는 요청에서 `newTransaction`이 설정된 경우에만 응답 본문에 포함됩니다. 이 필드는 요청의 일환으로 시작된 트랜잭션을 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`missing` 필드는 어떤 정보를 제공하나요?", "answer": "`missing` 필드는 요청한 문서가 존재하지 않을 경우 그 문서의 이름을 포함합니다. 형식은 `projects/{projectId}/databases/{databaseId}/documents/{document_path}`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`batchGet` 메서드를 사용하기 위한 인증 범위는 무엇인가요?", "answer": "`batchGet` 메서드를 사용하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "Firestore의 `batchWrite` 메서드는 어떤 기능을 제공하나요?", "answer": "`batchWrite` 메서드는 여러 개의 쓰기 작업을 적용할 수 있는 기능을 제공합니다. 그러나 이 메서드는 쓰기 작업을 원자적으로 적용하지 않으며, 순서에 관계없이 적용될 수 있습니다. 각 쓰기는 독립적으로 성공하거나 실패할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드의 HTTP 요청 형식은 어떻게 되나요?", "answer": "`batchWrite` 메서드는 POST 요청을 사용하며, 요청 URL은 `https://firestore.googleapis.com/v1beta1/{database=projects/*/databases/*}/documents:batchWrite`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드의 요청 본문 구조는 어떻게 되나요?", "answer": "요청 본문은 다음과 같은 구조를 가집니다: ```json { \"writes\": [ { \"object (Write)\" } ], \"labels\": { \"string\": \"string\" } } ```", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드에서 `writes` 필드는 어떤 역할을 하나요?", "answer": "`writes` 필드는 적용할 쓰기 작업을 포함하는 배열입니다. 이 메서드는 쓰기를 원자적으로 적용하지 않으며, 같은 문서에 대해 한 요청에서 두 번 이상 쓰기를 할 수 없습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드의 응답 본문 구조는 어떻게 되나요?", "answer": "응답 본문은 다음과 같은 구조를 가집니다: ```json { \"writeResults\": [ { \"object (WriteResult)\" } ], \"status\": [ { \"object (Status)\" } ] } ```", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드의 `status` 필드는 어떤 정보를 제공하나요?", "answer": "`status` 필드는 쓰기 작업을 적용한 상태를 나타내며, 각 쓰기 상태는 요청의 i번째 쓰기에 해당합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드를 사용할 때 필요한 인증 범위는 무엇인가요?", "answer": "`batchWrite` 메서드를 사용하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드와 관련된 다른 메서드는 무엇인가요?", "answer": "`batchWrite` 메서드와 관련된 다른 메서드는 `documents.commit`입니다. 이 메서드는 원자적으로 적용되는 쓰기 작업 세트를 요구할 때 사용됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드에서 `labels` 필드는 어떤 용도로 사용되나요?", "answer": "`labels` 필드는 이 배치 쓰기와 관련된 레이블을 포함하는 맵으로, \"key\": \"value\" 쌍의 리스트를 포함합니다. 예를 들어, `{ \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }`와 같은 형식입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드의 성공적인 응답은 어떤 정보를 포함하나요?", "answer": "성공적인 응답은 각 쓰기 작업의 결과를 포함하는 `writeResults` 배열과 각 쓰기 작업의 상태를 포함하는 `status` 배열을 포함합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "Firestore에서 새로운 트랜잭션을 시작하는 방법은 무엇인가요?", "answer": "Firestore에서 새로운 트랜잭션을 시작하려면, HTTP POST 요청을 `https://firestore.googleapis.com/v1beta1/{database=projects/*/databases/*}/documents:beginTransaction`에 보내야 합니다. 요청 본문에는 트랜잭션 옵션을 포함하는 JSON 구조가 필요합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "트랜잭션을 시작할 때 필요한 경로 매개변수는 무엇인가요?", "answer": "트랜잭션을 시작할 때 필요한 경로 매개변수는 `database`입니다. 이 매개변수는 `projects/{projectId}/databases/{databaseId}` 형식의 데이터베이스 이름을 포함해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "요청 본문에 포함해야 하는 JSON 구조는 어떻게 되나요?", "answer": "요청 본문은 다음과 같은 JSON 구조를 가져야 합니다: `{ \"options\": { object (TransactionOptions) } }`. 여기서 `options`는 트랜잭션 옵션을 포함하는 객체입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "트랜잭션 시작 요청이 성공했을 때의 응답 구조는 어떻게 되나요?", "answer": "트랜잭션 시작 요청이 성공하면 응답 본문은 `{ \"transaction\": string }` 형식을 가지며, `transaction` 필드는 시작된 트랜잭션을 나타내는 base64 인코딩된 문자열입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "트랜잭션 옵션의 기본값은 무엇인가요?", "answer": "트랜잭션 옵션의 기본값은 읽기-쓰기 트랜잭션입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "이 메서드를 사용하기 위해 필요한 인증 범위는 무엇인가요?", "answer": "이 메서드를 사용하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "트랜잭션을 시작하기 위한 HTTP 요청의 메서드는 무엇인가요?", "answer": "트랜잭션을 시작하기 위한 HTTP 요청의 메서드는 POST입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "트랜잭션을 시작하는 API의 gRPC Transcoding에 대한 정보는 어디에서 찾을 수 있나요?", "answer": "트랜잭션을 시작하는 API의 gRPC Transcoding에 대한 정보는 [여기](https://google.aip.dev/127)에서 찾을 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "트랜잭션 시작 요청의 성공적인 응답을 처리하는 방법은 무엇인가요?", "answer": "트랜잭션 시작 요청의 성공적인 응답을 처리하려면, 응답 본문에서 `transaction` 필드를 추출하여 시작된 트랜잭션을 사용할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "트랜잭션을 시작하기 위한 API 호출의 예시는 어디에서 확인할 수 있나요?", "answer": "트랜잭션을 시작하기 위한 API 호출의 예시는 문서에 명시되어 있지 않지만, 요청 본문과 경로 매개변수에 대한 설명을 통해 구현할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "Firestore의 commit 메서드를 사용하여 트랜잭션을 커밋하는 방법은 무엇인가요?", "answer": "Firestore의 commit 메서드는 HTTP POST 요청을 사용하여 트랜잭션을 커밋합니다. 요청 URL은 `https://firestore.googleapis.com/v1beta1/{database=projects/*/databases/*}/documents:commit` 형식을 따릅니다. 요청 본문에는 `writes` 배열과 선택적으로 `transaction` 필드를 포함해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "commit 메서드의 요청 본문 구조는 어떻게 되나요?", "answer": "요청 본문은 JSON 형식으로, `writes` 배열과 선택적으로 `transaction` 필드를 포함합니다. `writes`는 적용할 쓰기 작업을 포함하며, `transaction`은 base64로 인코딩된 문자열입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "commit 메서드의 응답 본문 구조는 어떻게 되나요?", "answer": "응답 본문은 JSON 형식으로, `writeResults` 배열과 `commitTime` 필드를 포함합니다. `writeResults`는 요청의 각 쓰기 작업에 대한 결과를 포함하며, `commitTime`은 커밋이 발생한 시간을 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "commit 메서드를 호출할 때 필요한 권한은 무엇인가요?", "answer": "commit 메서드를 호출하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "Firestore의 commit 메서드에서 `writes` 배열의 역할은 무엇인가요?", "answer": "`writes` 배열은 적용할 쓰기 작업을 포함하며, 이 작업들은 항상 원자적으로 순서대로 실행됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "`transaction` 필드는 어떤 경우에 사용되며, 어떤 형식이어야 하나요?", "answer": "`transaction` 필드는 모든 쓰기를 이 트랜잭션 내에서 적용하고 커밋할 때 사용됩니다. 이 필드는 base64로 인코딩된 문자열 형식이어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "커밋이 성공적으로 완료되었을 때, `commitTime`의 형식은 어떻게 되나요?", "answer": "`commitTime`은 RFC 3339 형식의 타임스탬프이며, 항상 Z-normalized로 출력됩니다. 예시로는 \"2014-10-02T15:01:23Z\"와 같은 형식이 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "Firestore의 commit 메서드를 사용할 때, 어떤 HTTP 메서드를 사용해야 하나요?", "answer": "Firestore의 commit 메서드를 사용할 때는 HTTP POST 메서드를 사용해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "Firestore의 commit 메서드에서 `writeResults` 배열의 의미는 무엇인가요?", "answer": "`writeResults` 배열은 요청에서 각 쓰기 작업의 결과를 포함하며, i번째 쓰기 결과는 요청의 i번째 쓰기와 대응됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "Firestore의 commit 메서드에서 사용하는 데이터베이스 이름의 형식은 무엇인가요?", "answer": "데이터베이스 이름은 `projects/{projectId}/databases/{databaseId}` 형식이어야 하며, 이는 필수 파라미터입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "`createDocument` 메서드를 사용하여 새 문서를 생성하는 HTTP 요청의 형식은 무엇인가요?", "answer": "`createDocument` 메서드는 POST 요청을 사용하여 다음과 같은 형식의 URL로 호출됩니다: `https://firestore.googleapis.com/v1beta1/{parent=projects/*/databases/*/documents/**}/{collectionId}`. 여기서 `parent`는 필수로 지정해야 하는 부모 리소스입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "`createDocument` 메서드의 `parent` 파라미터는 무엇을 의미하나요?", "answer": "`parent` 파라미터는 필수로 지정해야 하며, 예를 들어 `projects/{projectId}/databases/{databaseId}/documents` 또는 `projects/{projectId}/databases/{databaseId}/documents/chatrooms/{chatroom_id}`와 같은 형식으로 부모 리소스를 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "`createDocument` 메서드에서 `collectionId`는 어떤 역할을 하나요?", "answer": "`collectionId`는 필수 파라미터로, 부모에 대한 상대적인 컬렉션 ID를 나타냅니다. 예를 들어, `chatrooms`와 같은 값을 사용할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "`createDocument` 메서드의 `documentId` 쿼리 파라미터는 무엇인가요?", "answer": "`documentId`는 클라이언트가 지정하는 문서 ID로, 선택 사항입니다. 지정하지 않으면 서비스에서 ID를 자동으로 할당합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "요청 본문에 포함해야 하는 내용은 무엇인가요?", "answer": "요청 본문에는 `Document` 인스턴스가 포함되어야 합니다. 이 인스턴스는 생성할 문서의 내용을 정의합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "`createDocument` 메서드의 응답 본문에는 어떤 내용이 포함되나요?", "answer": "성공적인 요청의 경우 응답 본문에는 `Document` 인스턴스가 포함됩니다. 이는 생성된 문서의 정보를 담고 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "`createDocument` 메서드를 사용하기 위한 인증 범위는 무엇인가요?", "answer": "이 메서드를 사용하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "`mask` 쿼리 파라미터는 어떤 기능을 하나요?", "answer": "`mask`는 반환할 필드를 지정하는 객체입니다. 설정하지 않으면 모든 필드가 반환되며, 문서에 해당 마스크에 없는 필드가 있을 경우 그 필드는 응답에 포함되지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "`createDocument` 메서드의 요청을 성공적으로 수행하기 위한 필수 요소는 무엇인가요?", "answer": "요청을 성공적으로 수행하기 위해서는 `parent`, `collectionId`, 그리고 요청 본문에 `Document` 인스턴스가 포함되어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "`createDocument` 메서드의 사용 예시는 어디에서 찾을 수 있나요?", "answer": "문서 내에 구체적인 사용 예시는 제공되지 않지만, 메서드의 요청 형식과 파라미터에 대한 설명을 통해 사용 방법을 이해할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "Firestore에서 문서를 삭제하는 HTTP 요청은 어떻게 구성되나요?", "answer": "문서를 삭제하기 위한 HTTP 요청은 DELETE 메서드를 사용하며, URL 형식은 `https://firestore.googleapis.com/v1beta1/{name=projects/*/databases/*/documents/*/**}`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "문서를 삭제할 때 필요한 경로 매개변수는 무엇인가요?", "answer": "문서를 삭제할 때 필요한 경로 매개변수는 `name`으로, 삭제할 문서의 리소스 이름을 포함해야 하며, 형식은 `projects/{projectId}/databases/{databaseId}/documents/{document_path}`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "문서를 삭제할 때 사용할 수 있는 쿼리 매개변수는 무엇인가요?", "answer": "문서를 삭제할 때 사용할 수 있는 쿼리 매개변수는 `currentDocument`로, 이는 문서에 대한 선택적 전제 조건을 설정하는 데 사용됩니다. 이 매개변수가 설정되면, 대상 문서가 이를 충족하지 않으면 요청이 실패합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "문서를 삭제하기 위한 요청 본문은 어떻게 구성되나요?", "answer": "문서를 삭제하기 위한 요청 본문은 비어 있어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "문서 삭제 요청이 성공했을 때의 응답 본문은 어떻게 되나요?", "answer": "문서 삭제 요청이 성공하면 응답 본문은 빈 JSON 객체입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "문서를 삭제하기 위해 필요한 인증 범위는 무엇인가요?", "answer": "문서를 삭제하기 위해 필요한 인증 범위는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform` 중 하나입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "문서 삭제 요청을 보낼 때 어떤 HTTP 메서드를 사용해야 하나요?", "answer": "문서 삭제 요청을 보낼 때는 HTTP DELETE 메서드를 사용해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "문서 삭제 요청에서 `currentDocument` 매개변수를 사용하는 이유는 무엇인가요?", "answer": "`currentDocument` 매개변수는 문서에 대한 전제 조건을 설정하여, 특정 조건이 충족되지 않으면 요청이 실패하도록 하여 데이터의 무결성을 보장하는 데 사용됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "문서 삭제 요청을 위한 URL에서 `{name}` 부분은 어떻게 구성되나요?", "answer": "`{name}` 부분은 삭제할 문서의 리소스 이름으로 구성되며, 형식은 `projects/{projectId}/databases/{databaseId}/documents/{document_path}`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "Firestore 문서 삭제 요청을 위한 인증 개요는 어디에서 확인할 수 있나요?", "answer": "Firestore 문서 삭제 요청을 위한 인증 개요는 [Authentication Overview](https://cloud.google.com/docs/authentication#authorization-gcp)에서 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "`projects.databases.documents.get` 메서드는 어떤 HTTP 요청을 사용하나요?", "answer": "`projects.databases.documents.get` 메서드는 GET 요청을 사용합니다. 요청 URL 형식은 `https://firestore.googleapis.com/v1beta1/{name=projects/*/databases/*/documents/*/**}`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_get_hl=ko.txt"}
{"question": "`name` 파라미터는 어떤 형식을 가져야 하나요?", "answer": "`name` 파라미터는 필수이며, Document의 리소스 이름을 나타냅니다. 형식은 `projects/{projectId}/databases/{databaseId}/documents/{document_path}`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_get_hl=ko.txt"}
{"question": "`mask` 쿼리 파라미터는 무엇을 의미하나요?", "answer": "`mask` 쿼리 파라미터는 반환할 필드를 지정하는 객체입니다. 설정하지 않으면 모든 필드가 반환됩니다. 문서에 이 마스크에 포함되지 않은 필드가 있으면 해당 필드는 응답에서 반환되지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_get_hl=ko.txt"}
{"question": "`transaction` 쿼리 파라미터는 어떤 형식이어야 하나요?", "answer": "`transaction` 쿼리 파라미터는 바이트 형식의 문자열로, 문서를 트랜잭션 내에서 읽을 때 사용됩니다. 이는 base64로 인코딩된 문자열이어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_get_hl=ko.txt"}
{"question": "`readTime` 쿼리 파라미터는 어떤 형식과 조건을 가져야 하나요?", "answer": "`readTime` 쿼리 파라미터는 타임스탬프 형식이어야 하며, 지난 한 시간 이내의 마이크로초 정밀 타임스탬프 또는 포인트 인 타임 복구가 활성화된 경우 지난 7일 이내의 정각 타임스탬프를 사용할 수 있습니다. 형식은 RFC 3339를 따릅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_get_hl=ko.txt"}
{"question": "요청 본문은 어떻게 구성해야 하나요?", "answer": "요청 본문은 비어 있어야 합니다. 즉, 요청 본문을 포함할 필요가 없습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_get_hl=ko.txt"}
{"question": "이 메서드를 사용하기 위해 필요한 인증 범위는 무엇인가요?", "answer": "이 메서드를 사용하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_get_hl=ko.txt"}
{"question": "성공적인 응답의 본문에는 어떤 내용이 포함되나요?", "answer": "성공적인 응답의 본문에는 `Document` 인스턴스가 포함됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_get_hl=ko.txt"}
{"question": "`consistency_selector`는 무엇을 의미하나요?", "answer": "`consistency_selector`는 이 트랜잭션의 일관성 모드를 지정합니다. 설정하지 않으면 기본적으로 강한 일관성이 적용됩니다. `consistency_selector`는 `transaction` 또는 `readTime` 중 하나만 사용할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_get_hl=ko.txt"}
{"question": "`DocumentMask`는 무엇인가요?", "answer": "`DocumentMask`는 반환할 필드를 지정하는 객체로, 특정 필드만 선택적으로 반환할 수 있도록 합니다. 문서에 포함되지 않은 필드는 응답에서 제외됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_get_hl=ko.txt"}
{"question": "Firestore 문서의 JSON 표현은 어떻게 되나요?", "answer": "Firestore 문서의 JSON 표현은 다음과 같습니다: ```json { \"name\": string, \"fields\": { string: { object (Value) }, ... }, \"createTime\": string, \"updateTime\": string } ```", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore 문서의 필드 이름에 대한 규칙은 무엇인가요?", "answer": "Firestore 문서의 필드 이름은 UTF-8로 인코딩되어야 하며, 1,500 바이트를 초과할 수 없고 비어있어서는 안 됩니다. 필드 이름은 a-z, A-Z, 0-9, 또는 _로만 구성된 단순 필드 이름이거나, `로 시작하고 끝나는 인용된 필드 이름일 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 문서를 생성하는 방법은 무엇인가요?", "answer": "Firestore에서 문서를 생성하려면 `createDocument` 메서드를 사용합니다. 이 메서드는 새로운 문서를 생성합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore 문서의 생성 시간과 업데이트 시간은 어떻게 기록되나요?", "answer": "Firestore 문서의 생성 시간(`createTime`)은 문서가 생성된 시간을 나타내며, 업데이트 시간(`updateTime`)은 문서가 마지막으로 변경된 시간을 나타냅니다. 두 값 모두 RFC 3339 형식으로 기록됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 여러 문서를 가져오는 방법은 무엇인가요?", "answer": "Firestore에서 여러 문서를 가져오려면 `batchGet` 메서드를 사용합니다. 이 메서드는 여러 문서를 동시에 가져옵니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 문서를 삭제하는 방법은 무엇인가요?", "answer": "Firestore에서 문서를 삭제하려면 `delete` 메서드를 사용합니다. 이 메서드는 지정된 문서를 삭제합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 문서를 업데이트하거나 삽입하는 방법은 무엇인가요?", "answer": "Firestore에서 문서를 업데이트하거나 삽입하려면 `patch` 메서드를 사용합니다. 이 메서드는 문서를 업데이트하거나 문서가 존재하지 않을 경우 새로 삽입합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 트랜잭션을 시작하는 방법은 무엇인가요?", "answer": "Firestore에서 트랜잭션을 시작하려면 `beginTransaction` 메서드를 사용합니다. 이 메서드는 새로운 트랜잭션을 시작합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 문서 목록을 가져오는 방법은 무엇인가요?", "answer": "Firestore에서 문서 목록을 가져오려면 `listDocuments` 메서드를 사용합니다. 이 메서드는 지정된 경로 아래의 문서 목록을 반환합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 쿼리를 실행하는 방법은 무엇인가요?", "answer": "Firestore에서 쿼리를 실행하려면 `runQuery` 메서드를 사용합니다. 이 메서드는 지정된 쿼리를 실행합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_hl=ko.txt"}
{"question": "`listCollectionIds` 메서드는 어떤 HTTP 요청을 사용하나요?", "answer": "`listCollectionIds` 메서드는 POST 요청을 사용하며, 요청 URL은 `https://firestore.googleapis.com/v1beta1/{parent=projects/*/databases/*/documents}:listCollectionIds`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/listCollectionIds?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_listCollectionIds_hl=ko.txt"}
{"question": "`listCollectionIds` 메서드의 `parent` 파라미터는 어떤 형식을 가져야 하나요?", "answer": "`parent` 파라미터는 필수이며, 형식은 `projects/{projectId}/databases/{databaseId}/documents/{document_path}`입니다. 예를 들어, `projects/my-project/databases/my-database/documents/chatrooms/my-chatroom`과 같은 형식을 가집니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/listCollectionIds?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_listCollectionIds_hl=ko.txt"}
{"question": "요청 본문에서 `pageSize` 필드는 어떤 역할을 하나요?", "answer": "`pageSize` 필드는 반환할 최대 결과 수를 지정하는 정수입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/listCollectionIds?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_listCollectionIds_hl=ko.txt"}
{"question": "`listCollectionIds` 메서드의 요청 본문에서 `readTime` 필드는 무엇을 의미하나요?", "answer": "`readTime` 필드는 요청의 일관성 모드를 설정하는 데 사용되며, 주어진 시간에 문서를 읽습니다. 이 값은 최근 1시간 이내의 마이크로초 정밀 타임스탬프여야 하며, Point-in-Time Recovery가 활성화된 경우 최근 7일 이내의 정각 타임스탬프도 허용됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/listCollectionIds?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_listCollectionIds_hl=ko.txt"}
{"question": "`listCollectionIds` 메서드의 응답 본문은 어떤 구조를 가지고 있나요?", "answer": "응답 본문은 `collectionIds` 배열과 `nextPageToken` 문자열을 포함하는 구조입니다. `collectionIds`는 컬렉션 ID의 배열이며, `nextPageToken`은 목록을 계속하기 위해 사용할 수 있는 페이지 토큰입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/listCollectionIds?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_listCollectionIds_hl=ko.txt"}
{"question": "`listCollectionIds` 메서드를 호출하기 위해 필요한 OAuth 스코프는 무엇인가요?", "answer": "`listCollectionIds` 메서드를 호출하기 위해서는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform` 중 하나의 OAuth 스코프가 필요합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/listCollectionIds?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_listCollectionIds_hl=ko.txt"}
{"question": "`nextPageToken`은 어떤 용도로 사용되나요?", "answer": "`nextPageToken`은 목록을 계속하기 위해 사용할 수 있는 페이지 토큰입니다. 이를 통해 결과를 페이지 단위로 나누어 요청할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/listCollectionIds?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_listCollectionIds_hl=ko.txt"}
{"question": "`listCollectionIds` 메서드의 요청 본문에서 `pageToken` 필드는 어떤 역할을 하나요?", "answer": "`pageToken` 필드는 `ListCollectionIdsResponse`에서 가져온 값으로, 다음 페이지의 결과를 요청할 때 사용됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/listCollectionIds?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_listCollectionIds_hl=ko.txt"}
{"question": "`listCollectionIds` 메서드의 기본 일관성 모드는 무엇인가요?", "answer": "`listCollectionIds` 메서드의 기본 일관성 모드는 강한 일관성입니다. 요청 본문에서 `consistency_selector`를 설정하지 않으면 기본적으로 강한 일관성이 적용됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/listCollectionIds?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_listCollectionIds_hl=ko.txt"}
{"question": "`listCollectionIds` 메서드를 사용하여 반환된 `collectionIds`는 어떤 형식을 가지나요?", "answer": "반환된 `collectionIds`는 문자열 배열 형식으로, 각 문자열은 컬렉션 ID를 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/listCollectionIds?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_listCollectionIds_hl=ko.txt"}
{"question": "`listDocuments` 메서드를 호출하기 위한 HTTP 요청 형식은 무엇인가요?", "answer": "`listDocuments` 메서드는 다음과 같은 HTTP GET 요청 형식을 사용합니다: `GET https://firestore.googleapis.com/v1beta1/{parent=projects/*/databases/*/documents}/{collectionId}`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "`listDocuments` 메서드의 `parent` 파라미터는 어떤 형식을 가져야 하나요?", "answer": "`parent` 파라미터는 필수이며, 형식은 `projects/{projectId}/databases/{databaseId}/documents` 또는 `projects/{projectId}/databases/{databaseId}/documents/{document_path}`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "`listDocuments` 메서드에서 `collectionId` 파라미터는 무엇을 의미하나요?", "answer": "`collectionId` 파라미터는 선택 사항이며, 부모에 대한 상대적인 컬렉션 ID를 나타냅니다. 예를 들어, `chatrooms` 또는 `messages`와 같은 값을 가질 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "`listDocuments` 메서드의 `pageSize` 파라미터는 어떤 역할을 하나요?", "answer": "`pageSize` 파라미터는 한 번의 응답에서 반환할 최대 문서 수를 지정하는 선택적 파라미터입니다. Firestore는 이 값보다 적은 수의 문서를 반환할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "`listDocuments` 메서드에서 `showMissing` 파라미터는 어떤 기능을 하나요?", "answer": "`showMissing` 파라미터는 누락된 문서를 표시할지를 결정합니다. 누락된 문서는 존재하지 않지만 그 아래에 서브 문서가 있는 경우를 의미합니다. 이 값이 true일 경우, 누락된 문서가 키와 함께 반환되지만 필드, createTime, 또는 updateTime은 설정되지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "`listDocuments` 메서드의 `orderBy` 파라미터는 어떻게 사용하나요?", "answer": "`orderBy` 파라미터는 반환할 문서의 선택적 정렬 방식을 지정합니다. 예를 들어, `priority desc` 또는 `__name__ desc`와 같은 형식으로 사용할 수 있습니다. 이 파라미터가 없으면 문서는 `__name__ ASC`로 정렬됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "`listDocuments` 메서드의 요청 본문은 어떤 형식을 가져야 하나요?", "answer": "`listDocuments` 메서드의 요청 본문은 비어 있어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "`listDocuments` 메서드를 사용할 때 필요한 인증 범위는 무엇인가요?", "answer": "`listDocuments` 메서드를 사용하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "`listDocuments` 메서드의 응답 본문은 어떤 형식을 가지나요?", "answer": "성공적인 응답 본문은 `ListDocumentsResponse`의 인스턴스를 포함합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "`listDocuments` 메서드에서 `transaction` 파라미터는 어떤 역할을 하나요?", "answer": "`transaction` 파라미터는 이미 활성화된 트랜잭션의 일환으로 읽기를 수행하도록 지정합니다. 이 값은 base64로 인코딩된 문자열 형식이어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "Firestore에서 문서를 나열하기 위한 HTTP 요청은 어떻게 구성되나요?", "answer": "Firestore에서 문서를 나열하기 위한 HTTP 요청은 다음과 같이 구성됩니다: `GET https://firestore.googleapis.com/v1beta1/{parent=projects/*/databases/*/documents/*/**}/{collectionId}`. 여기서 `parent`는 필수 매개변수로, 프로젝트와 데이터베이스의 경로를 포함해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_list_hl=ko.txt"}
{"question": "`parent` 매개변수의 형식은 무엇인가요?", "answer": "`parent` 매개변수는 다음 형식이어야 합니다: `projects/{projectId}/databases/{databaseId}/documents` 또는 `projects/{projectId}/databases/{databaseId}/documents/{document_path}`. 예를 들어, `projects/my-project/databases/my-database/documents` 또는 `projects/my-project/databases/my-database/documents/chatrooms/my-chatroom`와 같은 형식입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_list_hl=ko.txt"}
{"question": "`collectionId` 매개변수는 무엇이며, 어떻게 사용하나요?", "answer": "`collectionId` 매개변수는 선택적 매개변수로, 나열할 컬렉션의 ID를 지정합니다. 예를 들어, `chatrooms` 또는 `messages`와 같은 값을 사용할 수 있습니다. 이 매개변수를 제공하지 않으면 Firestore는 제공된 부모 아래의 모든 컬렉션에서 문서를 나열합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_list_hl=ko.txt"}
{"question": "`pageSize` 매개변수는 어떤 역할을 하나요?", "answer": "`pageSize` 매개변수는 단일 응답에서 반환할 최대 문서 수를 지정하는 선택적 매개변수입니다. Firestore는 이 값보다 적은 수의 문서를 반환할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_list_hl=ko.txt"}
{"question": "`showMissing` 매개변수는 무엇을 의미하나요?", "answer": "`showMissing` 매개변수는 누락된 문서를 표시할지를 결정합니다. 누락된 문서는 존재하지 않지만 그 아래에 하위 문서가 있는 경우를 의미합니다. 이 값이 true로 설정되면, 이러한 누락된 문서가 키와 함께 반환되지만 필드, createTime 또는 updateTime은 설정되지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_list_hl=ko.txt"}
{"question": "`orderBy` 매개변수는 어떻게 사용하나요?", "answer": "`orderBy` 매개변수는 반환할 문서의 선택적 정렬 방식을 지정합니다. 예를 들어, `priority desc` 또는 `__name__ desc`와 같은 형식으로 사용할 수 있습니다. 이 매개변수가 없으면 문서는 기본적으로 `__name__ ASC`로 정렬됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_list_hl=ko.txt"}
{"question": "요청 본문은 어떻게 구성되나요?", "answer": "요청 본문은 비어 있어야 합니다. 문서 나열 요청을 보낼 때는 본문을 포함할 필요가 없습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_list_hl=ko.txt"}
{"question": "Firestore에서 문서를 나열할 때 필요한 인증 범위는 무엇인가요?", "answer": "Firestore에서 문서를 나열하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_list_hl=ko.txt"}
{"question": "`mask` 매개변수는 어떤 용도로 사용되나요?", "answer": "`mask` 매개변수는 반환할 필드를 지정하는 선택적 매개변수입니다. 이 매개변수가 설정되지 않으면 모든 필드가 반환됩니다. 문서에 이 마스크에 포함되지 않은 필드가 있는 경우, 해당 필드는 응답에서 반환되지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_list_hl=ko.txt"}
{"question": "`transaction` 매개변수는 무엇인가요?", "answer": "`transaction` 매개변수는 이미 활성화된 트랜잭션의 일환으로 읽기를 수행할 때 사용됩니다. 이 값은 base64로 인코딩된 문자열 형식이어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_list_hl=ko.txt"}
{"question": "`partitionQuery` 메서드는 어떤 기능을 제공하나요?", "answer": "`partitionQuery` 메서드는 쿼리를 파티셔닝하여 쿼리를 병렬로 실행할 수 있는 파티션 커서를 반환합니다. 반환된 파티션 커서는 `documents.runQuery`의 시작/종료 지점으로 사용될 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`partitionQuery` 메서드의 HTTP 요청 형식은 어떻게 되나요?", "answer": "`partitionQuery` 메서드는 POST 요청을 사용하며, 요청 URL은 `https://firestore.googleapis.com/v1beta1/{parent=projects/*/databases/*/documents}:partitionQuery` 형식입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`partitionQuery` 요청의 `parent` 파라미터는 어떤 형식이어야 하나요?", "answer": "`parent` 파라미터는 필수이며, 형식은 `projects/{projectId}/databases/{databaseId}/documents`입니다. 문서 리소스 이름은 지원되지 않으며, 오직 데이터베이스 리소스 이름만 지정할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`partitionQuery` 요청 본문에서 `partitionCount` 필드는 어떤 역할을 하나요?", "answer": "`partitionCount` 필드는 원하는 최대 파티션 수를 지정합니다. 이 값은 양수여야 하며, 반환된 파티션 수는 이보다 적을 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`pageToken` 필드는 어떤 용도로 사용되나요?", "answer": "`pageToken` 필드는 이전 호출에서 반환된 `nextPageToken` 값을 사용하여 추가 결과 세트를 가져오는 데 사용됩니다. 여러 결과 세트를 사용할 경우, 결과 세트를 병합해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`structuredQuery`는 `partitionQuery` 요청에서 어떻게 사용되나요?", "answer": "`structuredQuery`는 파티셔닝할 쿼리를 지정하는 데 사용되며, 쿼리는 모든 하위 항목을 포함하는 컬렉션을 지정하고 이름 오름차순으로 정렬되어야 합니다. 다른 필터, 정렬, 제한, 오프셋, 시작/종료 커서는 지원되지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`readTime` 필드는 어떤 경우에 사용되며, 어떤 형식이어야 하나요?", "answer": "`readTime` 필드는 요청의 일관성 모드를 지정하는 데 사용되며, 주어진 시간에 문서를 읽습니다. 이 값은 최근 1시간 이내의 마이크로초 정밀 타임스탬프여야 하며, RFC 3339 형식을 따라야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`partitionQuery`의 응답 본문은 어떤 구조를 가지고 있나요?", "answer": "`partitionQuery`의 응답 본문은 `partitions` 배열과 `nextPageToken`을 포함하며, `partitions`는 각 파티션의 커서를 포함합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`partitions` 배열의 각 요소는 어떤 정보를 담고 있나요?", "answer": "`partitions` 배열의 각 요소는 `Cursor` 객체로, 각 파티션은 `documents.runQuery`의 시작 또는 종료 지점으로 사용될 수 있는 분할 지점을 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`partitionQuery` 메서드를 사용하기 위한 인증 범위는 무엇인가요?", "answer": "`partitionQuery` 메서드를 사용하기 위해서는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform` 중 하나의 OAuth 범위가 필요합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`PATCH` 메서드를 사용하여 Firestore 문서를 업데이트하는 방법은 무엇인가요?", "answer": "Firestore 문서를 업데이트하려면 `PATCH` HTTP 요청을 사용하여 다음 URL로 요청을 보냅니다: `https://firestore.googleapis.com/v1beta1/{document.name=projects/*/databases/*/documents/*/**}`. 요청 본문에는 업데이트할 문서의 인스턴스를 포함해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "`PATCH` 요청에서 `updateMask` 파라미터의 역할은 무엇인가요?", "answer": "`updateMask` 파라미터는 업데이트할 필드를 지정합니다. 마스크에 포함되지 않은 필드는 서버에서 변경되지 않으며, 마스크에 포함되지만 입력 문서에 없는 필드는 서버의 문서에서 삭제됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "`mask` 파라미터는 어떤 용도로 사용되나요?", "answer": "`mask` 파라미터는 응답에서 반환할 필드를 지정합니다. 이 파라미터가 설정되지 않으면 모든 필드가 반환됩니다. 마스크에 포함되지 않은 필드는 응답에서 반환되지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "`currentDocument` 파라미터는 어떤 경우에 사용되며, 그 기능은 무엇인가요?", "answer": "`currentDocument` 파라미터는 문서에 대한 선택적 전제 조건을 설정합니다. 이 파라미터가 설정되면, 요청이 실패할 경우 해당 문서가 이 조건을 충족하지 않을 때 발생합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "`PATCH` 요청의 성공적인 응답 본문에는 어떤 내용이 포함되나요?", "answer": "성공적인 `PATCH` 요청의 응답 본문에는 문서의 인스턴스가 포함됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "Firestore의 `PATCH` 메서드를 사용하기 위해 필요한 OAuth 스코프는 무엇인가요?", "answer": "`PATCH` 메서드를 사용하기 위해서는 다음 중 하나의 OAuth 스코프가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "`PATCH` 요청을 보낼 때 문서의 리소스 이름 형식은 어떻게 되나요?", "answer": "문서의 리소스 이름 형식은 `projects/{projectId}/databases/{databaseId}/documents/{document_path}`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "`PATCH` 요청을 통해 문서를 업데이트할 때, 어떤 HTTP 메서드를 사용해야 하나요?", "answer": "문서를 업데이트할 때는 `PATCH` HTTP 메서드를 사용해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "Firestore 문서 업데이트 시, 필드 경로에 예약어를 포함할 수 있나요?", "answer": "아니요, `updateMask`에 포함된 필드 경로는 예약어를 포함할 수 없습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "Firestore 문서의 업데이트 요청을 보낼 때, 요청 본문에 포함해야 하는 내용은 무엇인가요?", "answer": "요청 본문에는 업데이트할 문서의 인스턴스를 포함해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "Firestore에서 트랜잭션을 롤백하는 방법은 무엇인가요?", "answer": "Firestore에서 트랜잭션을 롤백하려면 HTTP POST 요청을 사용하여 `https://firestore.googleapis.com/v1beta1/{database=projects/*/databases/*}/documents:rollback` 엔드포인트에 요청을 보냅니다. 요청 본문에는 롤백할 트랜잭션의 base64 인코딩된 문자열을 포함해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/rollback?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_rollback_hl=ko.txt"}
{"question": "롤백 요청을 보낼 때 필요한 경로 매개변수는 무엇인가요?", "answer": "롤백 요청을 보낼 때 필요한 경로 매개변수는 `database`입니다. 이 매개변수는 `projects/{projectId}/databases/{databaseId}` 형식으로 되어 있어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/rollback?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_rollback_hl=ko.txt"}
{"question": "롤백 요청의 본문 구조는 어떻게 되나요?", "answer": "롤백 요청의 본문은 JSON 형식으로, `transaction` 필드를 포함해야 합니다. 이 필드는 롤백할 트랜잭션의 base64 인코딩된 문자열입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/rollback?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_rollback_hl=ko.txt"}
{"question": "롤백 요청이 성공했을 때의 응답은 어떻게 되나요?", "answer": "롤백 요청이 성공하면 응답 본문은 빈 JSON 객체입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/rollback?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_rollback_hl=ko.txt"}
{"question": "롤백 요청을 수행하기 위해 필요한 인증 범위는 무엇인가요?", "answer": "롤백 요청을 수행하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/rollback?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_rollback_hl=ko.txt"}
{"question": "트랜잭션 롤백을 위한 HTTP 메서드는 무엇인가요?", "answer": "트랜잭션 롤백을 위한 HTTP 메서드는 POST입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/rollback?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_rollback_hl=ko.txt"}
{"question": "요청 본문에서 `transaction` 필드는 어떤 형식이어야 하나요?", "answer": "요청 본문에서 `transaction` 필드는 base64 인코딩된 문자열 형식이어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/rollback?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_rollback_hl=ko.txt"}
{"question": "gRPC Transcoding이란 무엇인가요?", "answer": "gRPC Transcoding은 RESTful API 요청을 gRPC 요청으로 변환하는 방법을 설명하는 것으로, 이 문서에서는 URL이 gRPC Transcoding 구문을 사용한다고 명시되어 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/rollback?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_rollback_hl=ko.txt"}
{"question": "롤백 요청을 보내기 전에 어떤 준비가 필요한가요?", "answer": "롤백 요청을 보내기 전에 롤백할 트랜잭션의 base64 인코딩된 문자열을 준비하고, 올바른 데이터베이스 경로를 확인해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/rollback?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_rollback_hl=ko.txt"}
{"question": "이 API를 사용하기 위한 인증 개요는 어디에서 확인할 수 있나요?", "answer": "이 API를 사용하기 위한 인증 개요는 [Authentication Overview](https://cloud.google.com/docs/authentication#authorization-gcp)에서 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/rollback?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_rollback_hl=ko.txt"}
{"question": "`runAggregationQuery` 메서드는 어떤 기능을 수행하나요?", "answer": "`runAggregationQuery` 메서드는 집계 쿼리를 실행하여 AggregationResult 시리즈를 생성합니다. 이는 Firestore.RunQuery와 달리 문서 결과를 생성하는 것이 아니라 서버 측에서 집계를 수행합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`runAggregationQuery`를 호출하기 위한 HTTP 요청 형식은 무엇인가요?", "answer": "`runAggregationQuery`를 호출하기 위한 HTTP 요청 형식은 POST이며, URL은 `https://firestore.googleapis.com/v1beta1/{parent=projects/*/databases/*/documents}:runAggregationQuery`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`runAggregationQuery`의 요청 본문 구조는 어떻게 되나요?", "answer": "요청 본문은 `explainOptions`, `query_type`, 및 `consistency_selector`를 포함하는 JSON 구조를 가집니다. `query_type`은 `structuredAggregationQuery` 객체를 포함해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`StructuredAggregationQuery`의 필드는 무엇이 있나요?", "answer": "`StructuredAggregationQuery`는 `aggregations` 배열과 `query_type`을 포함합니다. `aggregations`는 적용할 집계의 시리즈를 정의합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`Aggregation` 객체의 필드는 무엇인가요?", "answer": "`Aggregation` 객체는 `alias`와 `operator`를 포함합니다. `operator`는 `count`, `sum`, 또는 `avg` 중 하나로 설정할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`Count` 집계의 `upTo` 필드는 어떤 역할을 하나요?", "answer": "`Count` 집계의 `upTo` 필드는 카운트할 문서의 최대 수에 대한 제약을 설정합니다. 이 값은 0보다 커야 하며, 지정하지 않으면 제한이 없는 것으로 간주됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`Sum` 집계는 어떤 데이터를 처리하나요?", "answer": "`Sum` 집계는 요청된 필드의 값들을 합산합니다. 숫자 값만 집계되며, 비숫자 값이나 NULL은 건너뜁니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`Avg` 집계는 어떤 결과를 반환하나요?", "answer": "`Avg` 집계는 요청된 필드의 값들의 평균을 계산하여 반환합니다. 비숫자 값이나 NULL은 건너뛰며, 집계된 값이 없으면 NULL을 반환합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`runAggregationQuery`의 응답 본문 구조는 어떻게 되나요?", "answer": "응답 본문은 `result`, `transaction`, `readTime`, 및 `explainMetrics`를 포함하는 JSON 구조를 가집니다. `result`는 단일 집계 결과를 포함합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`runAggregationQuery`를 사용할 때 필요한 인증 범위는 무엇인가요?", "answer": "`runAggregationQuery`를 사용하기 위해서는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform` 중 하나의 OAuth 범위가 필요합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드를 호출하기 위한 HTTP 요청 형식은 무엇인가요?", "answer": "`runQuery` 메서드는 POST 요청을 사용하며, 요청 URL은 `https://firestore.googleapis.com/v1beta1/{parent=projects/*/databases/*/documents}:runQuery` 형식을 따릅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드의 `parent` 파라미터는 어떤 형식을 가져야 하나요?", "answer": "`parent` 파라미터는 `projects/{projectId}/databases/{databaseId}/documents` 또는 `projects/{projectId}/databases/{databaseId}/documents/{document_path}` 형식을 가져야 하며, 예를 들어 `projects/my-project/databases/my-database/documents`와 같은 형식입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 요청의 본문에서 사용할 수 있는 `query_type`의 종류는 무엇인가요?", "answer": "`query_type`은 `structuredQuery` 객체로만 설정할 수 있으며, 이는 구조화된 쿼리를 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드에서 `consistency_selector`는 어떤 값을 가질 수 있나요?", "answer": "`consistency_selector`는 `transaction`, `newTransaction`, 또는 `readTime` 중 하나의 값을 가질 수 있으며, 기본적으로 강한 일관성을 사용합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드의 응답 본문에서 `transaction` 필드는 어떤 정보를 제공하나요?", "answer": "`transaction` 필드는 요청의 일환으로 시작된 트랜잭션의 ID를 제공하며, 이는 base64로 인코딩된 문자열입니다. 이 필드는 요청에서 `new_transaction`이 설정된 경우에만 응답의 첫 번째 응답에 포함됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드의 응답에서 `readTime` 필드는 어떤 형식으로 제공되나요?", "answer": "`readTime` 필드는 RFC 3339 형식의 타임스탬프 문자열로 제공되며, 예를 들어 `\"2014-10-02T15:01:23Z\"`와 같은 형식입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드의 응답에서 `skippedResults` 필드는 무엇을 나타내나요?", "answer": "`skippedResults` 필드는 마지막 응답과 현재 응답 사이의 오프셋으로 인해 건너뛴 결과의 수를 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드에서 `explainOptions` 필드는 어떤 역할을 하나요?", "answer": "`explainOptions` 필드는 쿼리에 대한 설명 옵션을 제공하며, 설정된 경우 추가 쿼리 통계가 반환됩니다. 설정되지 않은 경우 쿼리 결과만 반환됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드의 응답에서 `done` 필드는 어떤 의미인가요?", "answer": "`done` 필드는 Firestore가 요청을 완전히 마쳤고 더 이상 문서가 반환되지 않음을 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드를 사용하기 위해 필요한 OAuth 스코프는 무엇인가요?", "answer": "`runQuery` 메서드를 사용하기 위해서는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform` 중 하나의 OAuth 스코프가 필요합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "Firestore에서 인덱스를 생성하는 방법은 무엇인가요?", "answer": "Firestore에서 인덱스를 생성하려면 HTTP POST 요청을 사용하여 `https://firestore.googleapis.com/v1beta1/{parent=projects/*/databases/*}/indexes` URL에 요청을 보내야 합니다. 요청 본문에는 인덱스의 인스턴스가 포함되어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_create_hl=ko.txt"}
{"question": "인덱스 생성 요청의 경로 매개변수는 무엇인가요?", "answer": "인덱스 생성 요청의 경로 매개변수는 `parent`로, 이 인덱스가 적용될 데이터베이스의 이름을 나타냅니다. 예를 들어, `projects/{projectId}/databases/{databaseId}` 형식입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_create_hl=ko.txt"}
{"question": "인덱스 생성 후 초기 상태는 무엇인가요?", "answer": "새로 생성된 인덱스의 초기 상태는 `CREATING`입니다. 반환된 `google.longrunning.Operation`이 완료되면 상태는 `READY`로 변경됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_create_hl=ko.txt"}
{"question": "인덱스가 이미 존재할 경우의 응답은 어떻게 되나요?", "answer": "인덱스가 이미 존재하는 경우, 호출은 `ALREADY_EXISTS` 상태를 반환합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_create_hl=ko.txt"}
{"question": "인덱스 생성 중 오류가 발생하면 어떻게 되나요?", "answer": "인덱스 생성 중 오류가 발생하면 인덱스는 `ERROR` 상태로 이동합니다. 이 경우, 오류를 유발한 데이터를 수정한 후 인덱스를 삭제하고 다시 생성해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_create_hl=ko.txt"}
{"question": "단일 필드 인덱스는 생성할 수 있나요?", "answer": "아니요, 단일 필드 인덱스는 생성할 수 없습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_create_hl=ko.txt"}
{"question": "인덱스 생성 요청의 본문에는 어떤 정보가 포함되어야 하나요?", "answer": "인덱스 생성 요청의 본문에는 인덱스의 인스턴스가 포함되어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_create_hl=ko.txt"}
{"question": "인덱스 생성 요청을 위한 인증 범위는 무엇인가요?", "answer": "인덱스 생성 요청을 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_create_hl=ko.txt"}
{"question": "인덱스 생성 후 성공적인 응답 본문은 무엇을 포함하나요?", "answer": "인덱스 생성 후 성공적인 응답 본문에는 새로 생성된 `Operation` 인스턴스가 포함됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_create_hl=ko.txt"}
{"question": "인덱스를 삭제하는 방법은 무엇인가요?", "answer": "인덱스를 삭제하려면 `DELETE` 요청을 사용하여 `https://firestore.googleapis.com/v1beta1/{name=projects/*/databases/*/indexes/*}` URL에 요청을 보내야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes/delete#google.firestore.admin.v1beta1.FirestoreAdmin.DeleteIndex"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_create_hl=ko.txt"}
{"question": "Firestore에서 인덱스를 정의하는 JSON 형식은 어떻게 되나요?", "answer": "Firestore에서 인덱스를 정의하는 JSON 형식은 다음과 같습니다: ```json { \"name\": string, \"collectionId\": string, \"fields\": [ { object (IndexField) } ], \"state\": enum (State) } ```", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_hl=ko.txt"}
{"question": "인덱스 필드(IndexField)의 JSON 표현은 어떻게 되나요?", "answer": "인덱스 필드(IndexField)의 JSON 표현은 다음과 같습니다: ```json { \"fieldPath\": string, \"mode\": enum (Mode) } ```", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_hl=ko.txt"}
{"question": "인덱스 필드의 mode는 무엇을 의미하며, 어떤 값들이 있나요?", "answer": "인덱스 필드의 mode는 필드가 어떻게 인덱싱되는지를 결정합니다. 가능한 값은 다음과 같습니다: - MODE_UNSPECIFIED - ASCENDING - DESCENDING - ARRAY_CONTAINS", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_hl=ko.txt"}
{"question": "인덱스의 상태(State)에는 어떤 값들이 있으며, 각 상태는 무엇을 의미하나요?", "answer": "인덱스의 상태(State)에는 다음과 같은 값들이 있습니다: - STATE_UNSPECIFIED: 상태가 지정되지 않음. - CREATING: 인덱스가 생성 중임. - READY: 인덱스가 사용 준비 완료됨. - ERROR: 인덱스 생성 중 오류 발생.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_hl=ko.txt"}
{"question": "Firestore에서 인덱스를 생성하는 방법은 무엇인가요?", "answer": "Firestore에서 인덱스를 생성하려면 `create` 메서드를 사용합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_hl=ko.txt"}
{"question": "Firestore에서 인덱스를 삭제하는 방법은 무엇인가요?", "answer": "Firestore에서 인덱스를 삭제하려면 `delete` 메서드를 사용합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_hl=ko.txt"}
{"question": "Firestore에서 특정 인덱스를 가져오는 방법은 무엇인가요?", "answer": "Firestore에서 특정 인덱스를 가져오려면 `get` 메서드를 사용합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_hl=ko.txt"}
{"question": "Firestore에서 인덱스를 나열하는 방법은 무엇인가요?", "answer": "Firestore에서 인덱스를 나열하려면 `list` 메서드를 사용하여 지정된 필터에 맞는 인덱스를 나열할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_hl=ko.txt"}
{"question": "인덱스의 상태가 CREATING일 때 어떤 상황인가요?", "answer": "인덱스의 상태가 CREATING일 때는 인덱스가 생성 중이며, 활성 장기 작업이 진행 중입니다. 일부 인덱스 데이터가 존재할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_hl=ko.txt"}
{"question": "인덱스의 상태가 ERROR일 때는 어떤 의미인가요?", "answer": "인덱스의 상태가 ERROR일 때는 인덱스 생성 중에 문제가 발생했음을 의미하며, 최근에 완료된 장기 작업이 실패했습니다. 인덱스는 더 이상 업데이트되지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_hl=ko.txt"}
{"question": "`projects.databases.indexes.list` 메서드를 호출하는 HTTP 요청의 형식은 무엇인가요?", "answer": "`projects.databases.indexes.list` 메서드는 다음과 같은 형식의 HTTP GET 요청을 사용합니다: `GET https://firestore.googleapis.com/v1beta1/{parent=projects/*/databases/*}/indexes`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_list_hl=ko.txt"}
{"question": "`parent` 파라미터는 어떤 값을 가져야 하나요?", "answer": "`parent` 파라미터는 데이터베이스 이름을 나타내며, 예를 들어 `projects/{projectId}/databases/{databaseId}` 형식을 따라야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_list_hl=ko.txt"}
{"question": "`projects.databases.indexes.list` 메서드에서 사용할 수 있는 쿼리 파라미터는 무엇이 있나요?", "answer": "이 메서드에서 사용할 수 있는 쿼리 파라미터는 `filter`, `pageSize`, `pageToken`이 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_list_hl=ko.txt"}
{"question": "요청 본문은 어떻게 구성되나요?", "answer": "`projects.databases.indexes.list` 메서드의 요청 본문은 비어 있어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_list_hl=ko.txt"}
{"question": "이 메서드의 성공적인 응답은 어떤 구조를 가지고 있나요?", "answer": "성공적인 응답은 다음과 같은 구조를 가집니다: `{ \"indexes\": [ { object (Index) } ], \"nextPageToken\": string }`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_list_hl=ko.txt"}
{"question": "응답에서 `indexes` 필드는 어떤 정보를 포함하나요?", "answer": "`indexes` 필드는 인덱스 객체를 포함하며, 각 인덱스에 대한 정보를 담고 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_list_hl=ko.txt"}
{"question": "`nextPageToken` 필드는 어떤 용도로 사용되나요?", "answer": "`nextPageToken` 필드는 표준 목록의 다음 페이지 토큰으로 사용되며, 추가 페이지가 있을 경우 이를 통해 다음 페이지를 요청할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_list_hl=ko.txt"}
{"question": "이 메서드를 호출하기 위해 필요한 인증 범위는 무엇인가요?", "answer": "이 메서드를 호출하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_list_hl=ko.txt"}
{"question": "`filter` 쿼리 파라미터는 어떤 용도로 사용되나요?", "answer": "`filter` 쿼리 파라미터는 인덱스를 필터링하는 데 사용됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_list_hl=ko.txt"}
{"question": "`pageSize` 쿼리 파라미터는 어떤 역할을 하나요?", "answer": "`pageSize` 쿼리 파라미터는 표준 목록의 페이지 크기를 설정하는 데 사용됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases.indexes_list_hl=ko.txt"}
{"question": "Firestore에서 문서를 내보내기 위해 어떤 HTTP 요청을 사용해야 하나요?", "answer": "Firestore에서 문서를 내보내기 위해서는 POST 요청을 사용해야 하며, 요청 URL은 `https://firestore.googleapis.com/v1beta1/{name=projects/*/databases/*}:exportDocuments`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "문서를 내보낼 때 필요한 경로 매개변수는 무엇인가요?", "answer": "문서를 내보낼 때 필요한 경로 매개변수는 `name`으로, 형식은 `projects/{projectId}/databases/{databaseId}`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "요청 본문에 포함해야 하는 JSON 구조는 어떻게 되나요?", "answer": "요청 본문에는 `collectionIds`와 `outputUriPrefix` 필드를 포함해야 하며, JSON 구조는 다음과 같습니다: ```json { \"collectionIds\": [string], \"outputUriPrefix\": string } ```", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "`collectionIds` 필드는 어떤 역할을 하나요?", "answer": "`collectionIds` 필드는 내보낼 컬렉션의 ID를 지정하며, 지정하지 않으면 모든 컬렉션이 내보내집니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "`outputUriPrefix` 필드는 어떤 형식을 가져야 하나요?", "answer": "`outputUriPrefix` 필드는 Google Cloud Storage URI 형식이어야 하며, 예를 들어 `gs://BUCKET_NAME[/NAMESPACE_PATH]`와 같은 형식을 가져야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "내보내기 작업이 성공적으로 완료되면 어떤 응답을 받게 되나요?", "answer": "내보내기 작업이 성공적으로 완료되면 응답 본문에 `Operation` 인스턴스가 포함됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "내보내기 작업이 완료되기 전에 취소하면 어떤 결과가 발생하나요?", "answer": "내보내기 작업이 완료되기 전에 취소하면 Google Cloud Storage에 부분적인 데이터가 남을 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "이 API를 사용하기 위해 필요한 인증 범위는 무엇인가요?", "answer": "이 API를 사용하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "Google Cloud Storage의 URI를 선택할 때 어떤 가이드라인을 고려해야 하나요?", "answer": "Google Cloud Storage URI를 선택할 때는 Google Cloud Storage의 명명 가이드라인을 고려해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "내보내기 작업의 진행 상황은 어떻게 모니터링하나요?", "answer": "내보내기 작업의 진행 상황은 생성된 Operation 리소스를 통해 모니터링하고 관리할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "Firestore에 문서를 가져오는 방법은 무엇인가요?", "answer": "Firestore에 문서를 가져오려면 `POST` 요청을 사용하여 `https://firestore.googleapis.com/v1beta1/{name=projects/*/databases/*}:importDocuments` 엔드포인트에 요청을 보내야 합니다. 요청 본문에는 `collectionIds`와 `inputUriPrefix` 필드를 포함해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "`importDocuments` 메서드의 요청 본문 구조는 어떻게 되나요?", "answer": "요청 본문은 다음과 같은 JSON 구조를 가져야 합니다: ```json { \"collectionIds\": [string], \"inputUriPrefix\": string } ``` 여기서 `collectionIds`는 가져올 컬렉션 ID의 배열이며, `inputUriPrefix`는 가져올 파일의 위치를 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "`inputUriPrefix`는 무엇을 의미하나요?", "answer": "`inputUriPrefix`는 가져올 파일의 위치를 나타내며, 이는 성공적으로 완료된 `ExportDocumentsResponse`의 `outputUriPrefix`와 일치해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "`collectionIds`를 지정하지 않으면 어떤 일이 발생하나요?", "answer": "`collectionIds`를 지정하지 않으면 가져오기 작업에 포함된 모든 컬렉션이 가져와집니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "가져오기 작업의 진행 상황은 어떻게 확인하나요?", "answer": "가져오기 작업의 진행 상황은 생성된 Operation 리소스를 통해 모니터링하고 관리할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "가져오기 작업이 취소되면 어떤 일이 발생하나요?", "answer": "가져오기 작업이 취소되면 이미 일부 데이터가 Cloud Firestore에 가져와졌을 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "이 메서드를 사용하기 위한 인증 범위는 무엇인가요?", "answer": "이 메서드를 사용하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "`importDocuments` 메서드의 HTTP 요청 방식은 무엇인가요?", "answer": "`importDocuments` 메서드는 `POST` 방식의 HTTP 요청을 사용합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "`importDocuments` 메서드의 응답 본문은 어떤 형식을 가지나요?", "answer": "성공적인 응답 본문은 Operation 인스턴스를 포함합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "Firestore의 문서 가져오기 작업에 대한 자세한 정보는 어디에서 찾을 수 있나요?", "answer": "Firestore의 문서 가져오기 작업에 대한 자세한 정보는 [Firestore 문서](https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.importDocuments?hl=ko)에서 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "Firestore에서 StructuredQuery의 쿼리 단계는 어떤 순서로 실행되나요?", "answer": "Firestore의 StructuredQuery 쿼리 단계는 다음과 같은 순서로 실행됩니다: 1. from 2. where 3. select 4. orderBy + startAt + endAt 5. offset 6. limit 7. findNearest.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/StructuredQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_StructuredQuery_hl=ko.txt"}
{"question": "StructuredQuery에서 'select' 필드는 어떤 역할을 하나요?", "answer": "'select' 필드는 반환할 필드의 하위 집합을 지정합니다. 이는 쿼리에서 반환되는 문서에 대한 DocumentMask 역할을 하며, 설정하지 않으면 호출자가 모든 필드를 반환하고자 한다고 가정합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/StructuredQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_StructuredQuery_hl=ko.txt"}
{"question": "'where' 필드는 StructuredQuery에서 어떻게 사용되나요?", "answer": "'where' 필드는 쿼리에 적용할 필터를 지정합니다. 이를 통해 특정 조건을 만족하는 문서만을 선택할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/StructuredQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_StructuredQuery_hl=ko.txt"}
{"question": "'orderBy' 필드는 어떤 기능을 제공하나요?", "answer": "'orderBy' 필드는 쿼리 결과에 적용할 정렬 순서를 지정합니다. Firestore는 전체 정렬, 부분 정렬 또는 정렬이 없는 경우를 허용하며, 모든 경우에 대해 안정적인 정렬을 보장합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/StructuredQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_StructuredQuery_hl=ko.txt"}
{"question": "'startAt'과 'endAt' 필드는 어떻게 사용되며, 어떤 요구 사항이 있나요?", "answer": "'startAt'은 결과 집합에서 쿼리를 시작할 위치의 잠재적 접두사를 지정하며, 'endAt'은 쿼리를 종료할 위치의 잠재적 접두사를 지정합니다. 두 필드 모두 ORDER BY 절에 지정된 필드 수보다 더 많은 값을 참조할 수 없습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/StructuredQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_StructuredQuery_hl=ko.txt"}
{"question": "'offset' 필드는 어떤 용도로 사용되며, 어떤 요구 사항이 있나요?", "answer": "'offset' 필드는 첫 번째 결과를 반환하기 전에 건너뛸 문서 수를 지정합니다. 지정된 경우 값은 0 이상이어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/StructuredQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_StructuredQuery_hl=ko.txt"}
{"question": "'limit' 필드는 StructuredQuery에서 어떤 역할을 하나요?", "answer": "'limit' 필드는 반환할 최대 결과 수를 지정합니다. 모든 다른 제약 조건 이후에 적용되며, 지정된 경우 값은 0 이상이어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/StructuredQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_StructuredQuery_hl=ko.txt"}
{"question": "'findNearest' 필드는 어떤 기능을 제공하나요?", "answer": "'findNearest' 필드는 선택적이며, 가장 가까운 이웃 검색을 위한 구성을 제공합니다. 이는 모든 다른 필터 및 정렬 이후에 적용되며, 주어진 쿼리 벡터에 가장 가까운 벡터 임베딩을 찾습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/StructuredQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_StructuredQuery_hl=ko.txt"}
{"question": "'CompositeFilter'는 무엇이며, 어떻게 사용되나요?", "answer": "'CompositeFilter'는 주어진 연산자를 사용하여 여러 다른 필터를 결합하는 필터입니다. 최소한 하나의 필터가 필요하며, 여러 필터를 AND 또는 OR 연산자로 결합할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/StructuredQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_StructuredQuery_hl=ko.txt"}
{"question": "'FieldFilter'는 어떤 구조를 가지며, 어떻게 사용되나요?", "answer": "'FieldFilter'는 특정 필드에 대한 필터로, 필드, 연산자, 비교할 값을 포함합니다. 이를 통해 특정 필드의 값에 따라 문서를 필터링할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/StructuredQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_StructuredQuery_hl=ko.txt"}
{"question": "Firestore에서 문서를 업데이트할 때 `updateMask`의 역할은 무엇인가요?", "answer": "`updateMask`는 업데이트할 필드를 지정하는 역할을 합니다. 이 필드는 업데이트 작업일 때만 설정할 수 있으며, 설정하지 않으면 기존 데이터가 덮어쓰여집니다. 마스크가 설정되면 서버의 문서에 마스크에 포함되지 않은 필드는 변경되지 않습니다. 마스크에 참조된 필드가 입력 문서에 없으면 서버의 문서에서 삭제됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_Write_hl=ko.txt"}
{"question": "Firestore에서 문서를 삭제하는 방법은 무엇인가요?", "answer": "문서를 삭제하려면 `delete` 필드를 사용하여 삭제할 문서의 이름을 지정합니다. 문서 이름은 `projects/{projectId}/databases/{databaseId}/documents/{document_path}` 형식이어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_Write_hl=ko.txt"}
{"question": "`FieldTransform`의 `increment` 변환은 어떻게 작동하나요?", "answer": "`increment` 변환은 주어진 값을 필드의 현재 값에 더합니다. 이 값은 정수 또는 실수여야 하며, 필드가 존재하지 않거나 정수 또는 실수가 아닐 경우 주어진 값으로 필드를 설정합니다. 두 값 중 하나라도 실수인 경우, 두 값은 실수로 해석됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_Write_hl=ko.txt"}
{"question": "`currentDocument` 필드는 어떤 용도로 사용되나요?", "answer": "`currentDocument` 필드는 문서에 대한 선택적 전제 조건을 설정하는 데 사용됩니다. 이 필드가 설정되면, 해당 조건이 충족되지 않으면 쓰기가 실패합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_Write_hl=ko.txt"}
{"question": "`DocumentTransform`의 구조는 어떻게 되나요?", "answer": "`DocumentTransform`은 변환할 문서의 이름과 적용할 필드 변환의 목록을 포함합니다. `document` 필드는 변환할 문서의 이름을 나타내며, `fieldTransforms`는 적용할 변환의 배열입니다. 이 배열은 비어있지 않아야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_Write_hl=ko.txt"}
{"question": "`appendMissingElements` 변환의 기능은 무엇인가요?", "answer": "`appendMissingElements` 변환은 현재 필드 값에 없는 요소를 순서대로 추가합니다. 필드가 배열이 아니거나 존재하지 않는 경우, 먼저 빈 배열로 설정됩니다. 중복된 값은 첫 번째 값만 고려됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_Write_hl=ko.txt"}
{"question": "`removeAllFromArray` 변환은 어떻게 작동하나요?", "answer": "`removeAllFromArray` 변환은 필드의 배열에서 주어진 모든 요소를 제거합니다. 필드가 배열이 아니거나 존재하지 않는 경우, 빈 배열로 설정됩니다. 중복된 값이 있을 경우 모든 동등한 값이 제거됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_Write_hl=ko.txt"}
{"question": "`setToServerValue` 변환은 어떤 경우에 사용되나요?", "answer": "`setToServerValue` 변환은 필드를 서버에서 계산된 값으로 설정할 때 사용됩니다. 이 값은 서버에서 처리된 요청의 시간과 같은 특정 서버 값을 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_Write_hl=ko.txt"}
{"question": "`maximum` 변환의 사용 사례는 무엇인가요?", "answer": "`maximum` 변환은 필드의 현재 값과 주어진 값 중 큰 값을 필드에 설정합니다. 필드가 존재하지 않거나 정수 또는 실수가 아닐 경우, 주어진 값으로 필드를 설정합니다. 두 값의 타입이 다를 경우, 더 큰 피연산자의 타입을 따릅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_Write_hl=ko.txt"}
{"question": "Firestore에서 문서를 업데이트할 때 `updateTransforms`의 역할은 무엇인가요?", "answer": "`updateTransforms`는 업데이트 후에 수행할 변환을 지정합니다. 이 필드는 업데이트 작업일 때만 설정할 수 있으며, 업데이트와 변환을 원자적으로 순서대로 수행하는 것과 동일한 효과를 가집니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta1_Write_hl=ko.txt"}
{"question": "FirestoreAdmin.ListFields 메서드를 호출할 때 어떤 필터를 사용해야 하나요?", "answer": "FirestoreAdmin.ListFields 메서드를 호출할 때는 filter를 indexConfig.usesAncestorConfig:false로 설정해야 합니다. 이는 FirestoreAdmin.ListFields가 명시적으로 오버라이드된 필드만 나열하도록 지원하기 때문입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "FirestoreAdmin.ListFields 메서드를 호출하기 위한 HTTP 요청 형식은 무엇인가요?", "answer": "FirestoreAdmin.ListFields 메서드를 호출하기 위한 HTTP 요청 형식은 GET https://firestore.googleapis.com/v1beta2/{parent=projects/*/databases/*/collectionGroups/*}/fields입니다. 여기서 {parent}는 프로젝트 ID, 데이터베이스 ID, 컬렉션 ID를 포함해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "요청 본문은 어떻게 구성해야 하나요?", "answer": "FirestoreAdmin.ListFields 메서드의 요청 본문은 비어 있어야 합니다. 즉, 요청 본문을 포함할 필요가 없습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "FirestoreAdmin.ListFields 메서드의 응답 구조는 어떻게 되나요?", "answer": "FirestoreAdmin.ListFields 메서드의 응답 구조는 JSON 형식으로, \"fields\" 배열과 \"nextPageToken\" 문자열을 포함합니다. \"fields\" 배열은 요청된 필드 객체를 포함하고, \"nextPageToken\"은 다음 페이지의 요청에 사용할 수 있는 페이지 토큰입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "FirestoreAdmin.ListFields 메서드를 호출할 때 필요한 인증 범위는 무엇인가요?", "answer": "FirestoreAdmin.ListFields 메서드를 호출할 때는 다음 중 하나의 OAuth 범위가 필요합니다: https://www.googleapis.com/auth/datastore 또는 https://www.googleapis.com/auth/cloud-platform.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "FirestoreAdmin.ListFields 메서드에서 pageSize 파라미터는 무엇을 의미하나요?", "answer": "pageSize 파라미터는 반환할 결과의 수를 지정합니다. 이 값을 설정하여 한 번의 요청에서 받을 결과의 양을 조절할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "pageToken 파라미터는 어떤 용도로 사용되나요?", "answer": "pageToken 파라미터는 이전 호출에서 반환된 페이지 토큰을 사용하여 다음 페이지의 결과를 요청하는 데 사용됩니다. 이 값을 설정하면 연속된 결과를 가져올 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "FirestoreAdmin.ListFields 메서드의 사용 사례는 무엇인가요?", "answer": "FirestoreAdmin.ListFields 메서드는 데이터베이스의 필드 구성 및 메타데이터를 나열하는 데 사용됩니다. 이를 통해 명시적으로 오버라이드된 필드를 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "FirestoreAdmin.ListFields 메서드의 응답에서 \"nextPageToken\"이 비어있으면 어떤 의미인가요?", "answer": "\"nextPageToken\"이 비어있으면 이는 마지막 페이지임을 의미합니다. 즉, 더 이상 요청할 페이지가 없다는 것을 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "FirestoreAdmin.ListFields 메서드를 사용하여 필드를 나열할 때 주의해야 할 점은 무엇인가요?", "answer": "FirestoreAdmin.ListFields 메서드를 사용할 때는 필드가 명시적으로 오버라이드된 경우에만 나열된다는 점에 유의해야 합니다. 따라서 필드가 오버라이드되지 않은 경우에는 결과가 반환되지 않을 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "`projects.databases.collectionGroups.fields.patch` 메서드는 어떤 기능을 수행하나요?", "answer": "이 메서드는 필드 구성을 업데이트합니다. 현재 필드 업데이트는 단일 필드 인덱스 구성에만 적용됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "`field.name` 파라미터는 어떤 형식을 가져야 하나요?", "answer": "`field.name` 파라미터는 `projects/{projectId}/databases/{databaseId}/collectionGroups/{collectionId}/fields/{fieldPath}` 형식을 가져야 하며, 필드 경로는 간단한 필드 이름 또는 맵 값 내의 필드 경로를 포함할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "`updateMask` 파라미터는 무엇이며 어떻게 사용하나요?", "answer": "`updateMask`는 필드에 대한 마스크로, 지정된 경우 이 필드에 의해 지정된 구성만 업데이트됩니다. 이는 필드의 완전한 이름 목록으로 구성된 쉼표로 구분된 문자열입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "요청 본문에 포함해야 하는 내용은 무엇인가요?", "answer": "요청 본문에는 `Field` 인스턴스가 포함되어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "이 메서드를 호출한 후 어떤 응답을 기대할 수 있나요?", "answer": "성공적으로 호출된 경우 응답 본문에는 `Operation` 인스턴스가 포함됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "`Field`의 기본 인덱싱 설정을 구성하려면 어떻게 해야 하나요?", "answer": "기본 필드 설정을 구성하려면 특별한 필드인 `projects/{projectId}/databases/{databaseId}/collectionGroups/__default__/fields/*`를 사용해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "이 메서드를 사용하기 위해 필요한 OAuth 스코프는 무엇인가요?", "answer": "필요한 OAuth 스코프는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "`field.name`에서 사용할 수 있는 특수 문자는 무엇인가요?", "answer": "`field.name`에서 사용할 수 있는 특수 문자는 `*`, `.`, `` ` ``, `[`, `]`이며, 이들은 반드시 인용되어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "`PATCH` 요청의 URL 형식은 어떻게 되나요?", "answer": "`PATCH` 요청의 URL 형식은 `https://firestore.googleapis.com/v1beta2/{field.name=projects/*/databases/*/collectionGroups/*/fields/*}`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "`FieldOperationMetadata`는 무엇인가요?", "answer": "`FieldOperationMetadata`는 필드 업데이트의 메타데이터로, `google.longrunning.Operation`의 일부로 반환됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "Cloud Firestore에서 인덱스를 생성하는 방법은 무엇인가요?", "answer": "Cloud Firestore에서 인덱스를 생성하려면 `create` 메서드를 사용해야 합니다. 이 메서드는 복합 인덱스를 생성합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_hl=ko.txt"}
{"question": "인덱스의 JSON 표현은 어떻게 되나요?", "answer": "인덱스의 JSON 표현은 다음과 같습니다: ```json { \"name\": string, \"queryScope\": enum (QueryScope), \"fields\": [ { object (IndexField) } ], \"state\": enum (State) } ```", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_hl=ko.txt"}
{"question": "인덱스의 `name` 필드는 어떤 정보를 담고 있나요?", "answer": "`name` 필드는 서버에서 정의된 인덱스의 이름을 담고 있으며, 복합 인덱스의 경우 형식은 `projects/{projectId}/databases/{databaseId}/collectionGroups/{collectionId}/indexes/{composite_index_id}`입니다. 단일 필드 인덱스의 경우 이 필드는 비어 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_hl=ko.txt"}
{"question": "`queryScope` 필드는 어떤 역할을 하나요?", "answer": "`queryScope` 필드는 인덱스가 특정 문서의 자식 컬렉션에 대한 쿼리를 허용하는지, 또는 특정 문서에서 파생된 모든 컬렉션에 대한 쿼리를 허용하는지를 지정합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_hl=ko.txt"}
{"question": "인덱스의 `fields` 배열은 어떤 정보를 포함하나요?", "answer": "`fields` 배열은 이 인덱스에서 지원하는 필드를 포함하며, 복합 인덱스의 경우 항상 2개 이상의 필드가 포함됩니다. 마지막 필드 항목은 항상 필드 경로 `__name__`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_hl=ko.txt"}
{"question": "인덱스의 `state` 필드는 어떤 정보를 제공하나요?", "answer": "`state` 필드는 인덱스의 서비스 상태를 나타내며, 출력 전용입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_hl=ko.txt"}
{"question": "Cloud Firestore에서 인덱스를 삭제하는 방법은 무엇인가요?", "answer": "Cloud Firestore에서 인덱스를 삭제하려면 `delete` 메서드를 사용해야 합니다. 이 메서드는 복합 인덱스를 삭제합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_hl=ko.txt"}
{"question": "인덱스를 조회하는 방법은 무엇인가요?", "answer": "인덱스를 조회하려면 `get` 메서드를 사용하여 특정 복합 인덱스를 가져올 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_hl=ko.txt"}
{"question": "Cloud Firestore에서 인덱스를 나열하는 방법은 무엇인가요?", "answer": "Cloud Firestore에서 인덱스를 나열하려면 `list` 메서드를 사용하여 복합 인덱스의 목록을 가져올 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_hl=ko.txt"}
{"question": "복합 인덱스의 마지막 필드가 방향성이 없는 경우 `__name__` 필드는 어떻게 처리되나요?", "answer": "복합 인덱스의 마지막 필드가 방향성이 없는 경우, `__name__` 필드는 기본적으로 오름차순(ASCENDING)으로 정렬됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_hl=ko.txt"}
{"question": "`projects.databases.collectionGroups.indexes.list` 메서드를 사용하여 무엇을 할 수 있나요?", "answer": "이 메서드는 복합 인덱스를 나열하는 기능을 제공합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_list_hl=ko.txt"}
{"question": "`GET https://firestore.googleapis.com/v1beta2/{parent=projects/*/databases/*/collectionGroups/*}/indexes` 요청에서 `parent` 파라미터는 무엇을 의미하나요?", "answer": "`parent` 파라미터는 `projects/{projectId}/databases/{databaseId}/collectionGroups/{collectionId}` 형식의 문자열로, 요청의 부모 이름을 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_list_hl=ko.txt"}
{"question": "`projects.databases.collectionGroups.indexes.list` 메서드의 쿼리 파라미터 중 `filter`는 어떤 용도로 사용되나요?", "answer": "`filter` 파라미터는 나열된 결과에 적용할 필터를 지정하는 데 사용됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_list_hl=ko.txt"}
{"question": "이 메서드에서 `pageSize` 파라미터는 어떤 역할을 하나요?", "answer": "`pageSize` 파라미터는 반환할 결과의 수를 지정하는 정수입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_list_hl=ko.txt"}
{"question": "`pageToken` 파라미터는 무엇이며, 어떻게 사용하나요?", "answer": "`pageToken` 파라미터는 이전 호출에서 반환된 페이지 토큰으로, 다음 페이지의 결과를 요청하는 데 사용됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_list_hl=ko.txt"}
{"question": "`projects.databases.collectionGroups.indexes.list` 메서드의 요청 본문은 어떻게 구성되나요?", "answer": "요청 본문은 비어 있어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_list_hl=ko.txt"}
{"question": "이 메서드의 성공적인 응답 본문은 어떤 구조를 가지고 있나요?", "answer": "성공적인 응답 본문은 `indexes` 배열과 `nextPageToken` 문자열을 포함하는 구조입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_list_hl=ko.txt"}
{"question": "`indexes` 필드는 어떤 정보를 포함하나요?", "answer": "`indexes` 필드는 요청된 인덱스의 객체를 포함합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_list_hl=ko.txt"}
{"question": "이 메서드를 사용하기 위해 필요한 인증 범위는 무엇인가요?", "answer": "필요한 인증 범위는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_list_hl=ko.txt"}
{"question": "이 메서드에 대한 더 많은 정보는 어디에서 찾을 수 있나요?", "answer": "더 많은 정보는 Firestore Admin API 문서에서 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.collectionGroups.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_list_hl=ko.txt"}
{"question": "Firestore에서 문서를 내보내기 위해 어떤 HTTP 요청을 사용해야 하나요?", "answer": "Firestore에서 문서를 내보내기 위해 POST 요청을 사용해야 하며, 요청 URL은 `https://firestore.googleapis.com/v1beta2/{name=projects/*/databases/*}:exportDocuments`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "문서를 내보낼 때 요청 본문은 어떤 구조를 가져야 하나요?", "answer": "요청 본문은 JSON 형식으로 다음과 같은 구조를 가져야 합니다: `{ \"collectionIds\": [ string ], \"outputUriPrefix\": string }`. 여기서 `collectionIds`는 내보낼 컬렉션 ID를 지정하며, `outputUriPrefix`는 출력 URI를 지정합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "`outputUriPrefix`는 어떤 형식이어야 하나요?", "answer": "`outputUriPrefix`는 Google Cloud Storage URI 형식이어야 하며, `gs://BUCKET_NAME[/NAMESPACE_PATH]` 형태를 지원합니다. 여기서 `BUCKET_NAME`은 Google Cloud Storage 버킷의 이름입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "내보내기 작업이 완료되기 전에 취소하면 어떤 일이 발생하나요?", "answer": "내보내기 작업이 완료되기 전에 취소하면 Google Cloud Storage에 부분적인 데이터가 남을 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "내보내기 작업의 진행 상황은 어떻게 모니터링하나요?", "answer": "내보내기 작업의 진행 상황은 생성된 Operation 리소스를 통해 모니터링하고 관리할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "내보내기 작업이 성공적으로 완료되면 어떤 응답을 받나요?", "answer": "내보내기 작업이 성공적으로 완료되면 응답 본문에 Operation 인스턴스가 포함됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "Firestore에서 문서를 내보내기 위해 필요한 OAuth 범위는 무엇인가요?", "answer": "Firestore에서 문서를 내보내기 위해 필요한 OAuth 범위는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "내보낼 컬렉션 ID를 지정하지 않으면 어떤 결과가 발생하나요?", "answer": "내보낼 컬렉션 ID를 지정하지 않으면 모든 컬렉션이 내보내집니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "Google Cloud Storage의 이름 지정 가이드라인은 어디에서 확인할 수 있나요?", "answer": "Google Cloud Storage의 이름 지정 가이드라인은 [여기](https://cloud.google.com/storage/docs/naming)에서 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "Firestore 내보내기 작업의 API 문서에서 추가적인 정보는 어디에서 찾을 수 있나요?", "answer": "Firestore 내보내기 작업의 API 문서에서 추가적인 정보는 [여기](https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.exportDocuments?hl=ko)에서 찾을 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "Firestore에 문서를 가져오기 위해 어떤 HTTP 요청을 사용해야 하나요?", "answer": "Firestore에 문서를 가져오기 위해서는 POST 요청을 사용해야 하며, 요청 URL은 `https://firestore.googleapis.com/v1beta2/{name=projects/*/databases/*}:importDocuments`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases_importDocuments_hl=ko.txt"}
{"question": "문서를 가져올 때 요청 본문은 어떤 구조를 가져야 하나요?", "answer": "요청 본문은 다음과 같은 구조를 가져야 합니다: ```json { \"collectionIds\": [string], \"inputUriPrefix\": string } ```", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases_importDocuments_hl=ko.txt"}
{"question": "`collectionIds` 필드는 무엇을 의미하나요?", "answer": "`collectionIds` 필드는 가져올 컬렉션의 ID를 지정합니다. 지정하지 않으면 가져오기 작업에 포함된 모든 컬렉션이 가져와집니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases_importDocuments_hl=ko.txt"}
{"question": "`inputUriPrefix` 필드는 어떤 값을 가져야 하나요?", "answer": "`inputUriPrefix` 필드는 가져올 파일의 위치를 지정해야 하며, 이는 성공적으로 완료된 ExportDocumentsResponse의 outputUriPrefix와 일치해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases_importDocuments_hl=ko.txt"}
{"question": "문서 가져오기 작업이 성공하면 어떤 응답을 받게 되나요?", "answer": "문서 가져오기 작업이 성공하면 응답 본문에 Operation 인스턴스가 포함됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases_importDocuments_hl=ko.txt"}
{"question": "문서 가져오기 작업 중에 기존 문서가 있을 경우 어떻게 되나요?", "answer": "문서 가져오기 작업 중에 기존 문서와 동일한 이름을 가진 문서가 있을 경우, 해당 문서는 덮어쓰여집니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases_importDocuments_hl=ko.txt"}
{"question": "문서 가져오기 작업의 진행 상황은 어떻게 모니터링하나요?", "answer": "문서 가져오기 작업의 진행 상황은 생성된 Operation 리소스를 통해 모니터링하고 관리할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases_importDocuments_hl=ko.txt"}
{"question": "문서 가져오기 작업이 취소되면 어떤 일이 발생하나요?", "answer": "문서 가져오기 작업이 취소되면, 이미 일부 데이터가 Cloud Firestore에 가져와졌을 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases_importDocuments_hl=ko.txt"}
{"question": "문서 가져오기 작업을 수행하기 위해 필요한 OAuth 범위는 무엇인가요?", "answer": "문서 가져오기 작업을 수행하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: - https://www.googleapis.com/auth/datastore - https://www.googleapis.com/auth/cloud-platform", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases_importDocuments_hl=ko.txt"}
{"question": "문서 가져오기 작업에 대한 인증 개요는 어디에서 확인할 수 있나요?", "answer": "문서 가져오기 작업에 대한 인증 개요는 [여기](https://cloud.google.com/docs/authentication#authorization-gcp)에서 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1beta2/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1beta2_projects.databases_importDocuments_hl=ko.txt"}
{"question": "Firestore에서 백업 일정을 생성하는 방법은 무엇인가요?", "answer": "Firestore에서 백업 일정을 생성하려면, HTTP POST 요청을 사용하여 `https://firestore.googleapis.com/v1/{parent=projects/*/databases/*}/backupSchedules` 엔드포인트에 요청을 보내야 합니다. 요청 본문에는 `BackupSchedule` 인스턴스가 포함되어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_create_hl=ko.txt"}
{"question": "백업 일정 생성 시 필요한 경로 매개변수는 무엇인가요?", "answer": "백업 일정 생성 시 필요한 경로 매개변수는 `parent`입니다. 이 매개변수는 데이터베이스의 부모를 나타내며, 형식은 `projects/{project}/databases/{database}`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_create_hl=ko.txt"}
{"question": "백업 일정 생성 요청의 본문에 포함해야 하는 내용은 무엇인가요?", "answer": "백업 일정 생성 요청의 본문에는 `BackupSchedule` 인스턴스가 포함되어야 합니다. 이 인스턴스는 백업 일정의 세부 정보를 정의합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_create_hl=ko.txt"}
{"question": "백업 일정 생성 요청이 성공하면 어떤 응답을 받게 되나요?", "answer": "백업 일정 생성 요청이 성공하면, 응답 본문에는 새로 생성된 `BackupSchedule` 인스턴스가 포함됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_create_hl=ko.txt"}
{"question": "Firestore 백업 일정 생성에 필요한 인증 범위는 무엇인가요?", "answer": "Firestore 백업 일정 생성에는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_create_hl=ko.txt"}
{"question": "Firestore에서 데이터베이스에 대해 설정할 수 있는 백업 일정의 최대 개수는 몇 개인가요?", "answer": "Firestore에서 데이터베이스에 대해 설정할 수 있는 백업 일정의 최대 개수는 두 개입니다. 하나는 일일 백업 일정이고, 다른 하나는 주간 백업 일정입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_create_hl=ko.txt"}
{"question": "백업 일정 생성 시 사용할 수 있는 HTTP 메서드는 무엇인가요?", "answer": "백업 일정 생성 시 사용할 수 있는 HTTP 메서드는 POST입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_create_hl=ko.txt"}
{"question": "백업 일정 생성 요청의 URL 형식은 어떤 규칙을 따르나요?", "answer": "백업 일정 생성 요청의 URL 형식은 gRPC Transcoding 구문을 따릅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_create_hl=ko.txt"}
{"question": "백업 일정 생성 요청을 보내기 전에 확인해야 할 사항은 무엇인가요?", "answer": "백업 일정 생성 요청을 보내기 전에, 데이터베이스에 이미 설정된 백업 일정이 있는지 확인해야 합니다. 최대 두 개의 백업 일정만 설정할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_create_hl=ko.txt"}
{"question": "Firestore 백업 일정 생성과 관련된 추가 정보는 어디에서 찾을 수 있나요?", "answer": "Firestore 백업 일정 생성과 관련된 추가 정보는 Firestore 문서의 인증 개요 섹션에서 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_create_hl=ko.txt"}
{"question": "`projects.databases.backupSchedules.get` 메서드는 어떤 정보를 제공하나요?", "answer": "`projects.databases.backupSchedules.get` 메서드는 백업 일정에 대한 정보를 가져옵니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_get_hl=ko.txt"}
{"question": "이 메서드를 호출하기 위한 HTTP 요청 형식은 무엇인가요?", "answer": "이 메서드는 GET 요청을 사용하며, 요청 URL 형식은 `https://firestore.googleapis.com/v1/{name=projects/*/databases/*/backupSchedules/*}`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_get_hl=ko.txt"}
{"question": "`name` 파라미터의 형식은 어떻게 되나요?", "answer": "`name` 파라미터는 필수이며, 형식은 `projects/{project}/databases/{database}/backupSchedules/{backupSchedule}`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_get_hl=ko.txt"}
{"question": "이 메서드를 호출할 때 요청 본문은 어떻게 되나요?", "answer": "요청 본문은 비어 있어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_get_hl=ko.txt"}
{"question": "이 메서드를 사용하기 위해 필요한 인증 범위는 무엇인가요?", "answer": "이 메서드를 사용하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_get_hl=ko.txt"}
{"question": "성공적인 응답의 본문에는 어떤 정보가 포함되나요?", "answer": "성공적인 응답의 본문에는 `BackupSchedule` 인스턴스가 포함됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_get_hl=ko.txt"}
{"question": "이 메서드의 사용 예시는 어디에서 찾을 수 있나요?", "answer": "문서에는 구체적인 사용 예시가 제공되지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_get_hl=ko.txt"}
{"question": "이 메서드와 관련된 인증 개요는 어디에서 확인할 수 있나요?", "answer": "인증 개요는 [Authentication Overview](https://cloud.google.com/docs/authentication#authorization-gcp)에서 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_get_hl=ko.txt"}
{"question": "gRPC Transcoding에 대한 정보는 어디에서 찾을 수 있나요?", "answer": "gRPC Transcoding에 대한 정보는 [여기](https://google.aip.dev/127)에서 찾을 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_get_hl=ko.txt"}
{"question": "이 메서드의 응답 형식에 대한 자세한 내용은 어디에서 확인할 수 있나요?", "answer": "응답 형식에 대한 자세한 내용은 `BackupSchedule` 문서에서 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_get_hl=ko.txt"}
{"question": "Cloud Firestore에서 백업 일정을 생성하는 방법은 무엇인가요?", "answer": "백업 일정을 생성하려면 `create` 메서드를 사용합니다. 이 메서드는 데이터베이스에 백업 일정을 생성합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_hl=ko.txt"}
{"question": "백업 일정의 고유 식별자는 어떻게 구성되나요?", "answer": "백업 일정의 고유 식별자는 `projects/{project}/databases/{database}/backupSchedules/{backupSchedule}` 형식으로 자동 할당됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_hl=ko.txt"}
{"question": "백업 일정의 생성 및 업데이트 시간은 어떤 형식으로 제공되나요?", "answer": "백업 일정의 생성 및 업데이트 시간은 RFC 3339 형식의 타임스탬프로 제공됩니다. 예를 들어, \"2014-10-02T15:01:23Z\"와 같은 형식입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_hl=ko.txt"}
{"question": "백업 일정의 보존 기간은 어떻게 설정하나요?", "answer": "백업 일정의 보존 기간은 생성 시간에 비해 상대적인 시간으로 설정되며, 최대 14주까지 지원됩니다. 예를 들어, \"7d\"와 같이 설정할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_hl=ko.txt"}
{"question": "매일 백업을 수행하는 일정을 설정하려면 어떤 객체를 사용해야 하나요?", "answer": "매일 백업을 수행하는 일정을 설정하려면 `dailyRecurrence` 객체를 사용해야 합니다. 이 객체는 추가 필드가 없습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_hl=ko.txt"}
{"question": "특정 요일에 백업을 수행하는 일정을 설정하려면 어떤 객체를 사용해야 하나요?", "answer": "특정 요일에 백업을 수행하는 일정을 설정하려면 `weeklyRecurrence` 객체를 사용해야 하며, 이 객체의 `day` 필드에 요일을 지정해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_hl=ko.txt"}
{"question": "백업 일정을 삭제하는 방법은 무엇인가요?", "answer": "백업 일정을 삭제하려면 `delete` 메서드를 사용합니다. 이 메서드는 지정된 백업 일정을 삭제합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_hl=ko.txt"}
{"question": "백업 일정의 정보를 조회하는 방법은 무엇인가요?", "answer": "백업 일정의 정보를 조회하려면 `get` 메서드를 사용합니다. 이 메서드는 특정 백업 일정에 대한 정보를 반환합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_hl=ko.txt"}
{"question": "모든 백업 일정을 나열하는 방법은 무엇인가요?", "answer": "모든 백업 일정을 나열하려면 `list` 메서드를 사용합니다. 이 메서드는 데이터베이스에 설정된 모든 백업 일정을 반환합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_hl=ko.txt"}
{"question": "백업 일정을 업데이트하는 방법은 무엇인가요?", "answer": "백업 일정을 업데이트하려면 `patch` 메서드를 사용합니다. 이 메서드는 지정된 백업 일정의 정보를 수정합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_hl=ko.txt"}
{"question": "`projects.databases.backupSchedules.patch` 메서드는 어떤 용도로 사용되나요?", "answer": "`projects.databases.backupSchedules.patch` 메서드는 백업 일정을 업데이트하는 데 사용됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_patch_hl=ko.txt"}
{"question": "이 메서드를 호출하기 위한 HTTP 요청 형식은 무엇인가요?", "answer": "이 메서드는 PATCH 요청을 사용하며, 요청 URL 형식은 `https://firestore.googleapis.com/v1/{backupSchedule.name=projects/*/databases/*/backupSchedules/*}`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_patch_hl=ko.txt"}
{"question": "요청 시 필요한 경로 매개변수는 무엇인가요?", "answer": "요청 시 필요한 경로 매개변수는 `backupSchedule.name`으로, 이는 프로젝트에 대한 고유한 백업 일정 식별자입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_patch_hl=ko.txt"}
{"question": "업데이트할 필드를 지정하기 위한 쿼리 매개변수는 무엇인가요?", "answer": "업데이트할 필드를 지정하기 위한 쿼리 매개변수는 `updateMask`이며, 필드의 완전한 이름을 쉼표로 구분하여 나열합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_patch_hl=ko.txt"}
{"question": "요청 본문에는 어떤 내용이 포함되어야 하나요?", "answer": "요청 본문에는 `BackupSchedule` 인스턴스가 포함되어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_patch_hl=ko.txt"}
{"question": "이 메서드 호출이 성공하면 어떤 응답을 받게 되나요?", "answer": "메서드 호출이 성공하면 응답 본문에는 `BackupSchedule` 인스턴스가 포함됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_patch_hl=ko.txt"}
{"question": "이 메서드를 사용하기 위해 필요한 인증 범위는 무엇인가요?", "answer": "이 메서드를 사용하기 위해 필요한 인증 범위는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_patch_hl=ko.txt"}
{"question": "`updateMask`의 예시는 어떻게 되나요?", "answer": "`updateMask`의 예시는 `\"user.displayName,photo\"`와 같이 필드의 완전한 이름을 쉼표로 구분하여 나열하는 형식입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_patch_hl=ko.txt"}
{"question": "`backupSchedule.name`의 형식은 어떻게 되나요?", "answer": "`backupSchedule.name`의 형식은 `projects/{project}/databases/{database}/backupSchedules/{backupSchedule}`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_patch_hl=ko.txt"}
{"question": "이 메서드에 대한 추가 정보는 어디에서 찾을 수 있나요?", "answer": "이 메서드에 대한 추가 정보는 Firebase 문서의 해당 섹션에서 찾을 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.backupSchedules/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.backupSchedules_patch_hl=ko.txt"}
{"question": "Firestore에서 필드의 이름 형식은 어떻게 되나요?", "answer": "필드 이름은 다음 형식이어야 합니다: projects/{projectId}/databases/{databaseId}/collectionGroups/{collectionId}/fields/{fieldPath}. 필드 경로는 간단한 필드 이름(예: address) 또는 mapValue 내의 필드 경로(예: address.city)일 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_hl=ko.txt"}
{"question": "필드의 인덱스 구성을 어떻게 설정하나요?", "answer": "필드의 인덱스 구성은 indexConfig 객체를 사용하여 설정합니다. indexConfig가 설정되지 않으면 필드 인덱싱은 ancestorField에 정의된 구성으로 되돌아갑니다. 모든 인덱스를 명시적으로 제거하려면 빈 인덱스 목록을 가진 인덱스 구성을 지정해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_hl=ko.txt"}
{"question": "TTL(시간 제한) 구성을 필드에 어떻게 적용하나요?", "answer": "TTL 구성을 필드에 적용하려면 ttlConfig 객체를 사용하여 설정합니다. 이 필드에 타임스탬프 값을 저장하면 문서의 절대 만료 시간으로 처리됩니다. 다른 데이터 유형을 사용하거나 필드를 비워두면 개별 문서의 만료가 비활성화됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_hl=ko.txt"}
{"question": "필드의 인덱스 구성이 조상 필드에서 설정된 경우 어떻게 확인하나요?", "answer": "usesAncestorConfig 필드를 확인하여 필드의 인덱스 구성이 조상 필드에서 설정되었는지 여부를 알 수 있습니다. true인 경우 조상 필드에서 설정된 구성으로 되어 있으며, false인 경우 필드의 인덱스 구성이 명시적으로 정의되어 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_hl=ko.txt"}
{"question": "TTL 구성의 상태는 어떻게 확인하나요?", "answer": "TTL 구성의 상태는 state 필드를 통해 확인할 수 있습니다. 이 필드는 TTL 구성이 모든 문서에 적용되는 상태를 나타냅니다. 상태는 STATE_UNSPECIFIED, CREATING, ACTIVE, NEEDS_REPAIR 중 하나입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_hl=ko.txt"}
{"question": "필드의 메타데이터와 구성을 가져오는 방법은 무엇인가요?", "answer": "필드의 메타데이터와 구성을 가져오려면 get 메서드를 사용합니다. 이 메서드는 특정 필드에 대한 정보를 반환합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_hl=ko.txt"}
{"question": "Firestore에서 필드 구성을 업데이트하는 방법은 무엇인가요?", "answer": "Firestore에서 필드 구성을 업데이트하려면 patch 메서드를 사용합니다. 이 메서드는 필드의 구성을 수정하는 데 사용됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_hl=ko.txt"}
{"question": "필드 구성을 나열하는 방법은 무엇인가요?", "answer": "필드 구성을 나열하려면 list 메서드를 사용합니다. 이 메서드는 데이터베이스의 필드 구성 및 메타데이터를 반환합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_hl=ko.txt"}
{"question": "필드 경로에서 사용할 수 있는 특수 문자는 무엇인가요?", "answer": "필드 경로에서 사용할 수 있는 특수 문자는 *, ., ` (백틱), [, ], 그리고 모든 ASCII 기호 문자입니다. 이러한 문자는 반드시 인용되어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_hl=ko.txt"}
{"question": "TTL이 활성화된 필드의 문서 만료는 어떻게 처리되나요?", "answer": "TTL이 활성화된 필드에 타임스탬프 값을 저장하면 해당 문서는 절대 만료 시간으로 처리됩니다. 과거의 타임스탬프 값은 문서가 즉시 만료될 수 있음을 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_hl=ko.txt"}
{"question": "FirestoreAdmin.ListFields 메서드를 호출할 때 어떤 필터를 사용해야 하나요?", "answer": "FirestoreAdmin.ListFields 메서드를 호출할 때는 indexConfig.usesAncestorConfig:false 또는 ttlConfig:* 필터를 사용해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "FirestoreAdmin.ListFields 메서드의 HTTP 요청 형식은 어떻게 되나요?", "answer": "FirestoreAdmin.ListFields 메서드의 HTTP 요청 형식은 GET이며, 요청 URL은 `https://firestore.googleapis.com/v1/{parent=projects/*/databases/*/collectionGroups/*}/fields`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "FirestoreAdmin.ListFields 메서드의 요청 본문은 어떻게 되나요?", "answer": "FirestoreAdmin.ListFields 메서드의 요청 본문은 비어 있어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "FirestoreAdmin.ListFields 메서드의 응답 구조는 어떻게 되나요?", "answer": "FirestoreAdmin.ListFields 메서드의 응답 구조는 `{\"fields\": [...], \"nextPageToken\": string}` 형식입니다. 여기서 fields는 요청된 필드의 배열이며, nextPageToken은 다음 페이지의 요청에 사용할 수 있는 페이지 토큰입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "FirestoreAdmin.ListFields 메서드를 호출할 때 필요한 권한은 무엇인가요?", "answer": "FirestoreAdmin.ListFields 메서드를 호출하기 위해서는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform` 중 하나의 OAuth 스코프가 필요합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "FirestoreAdmin.ListFields 메서드에서 pageSize 파라미터는 무엇을 의미하나요?", "answer": "pageSize 파라미터는 반환할 결과의 수를 지정하는 정수입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "FirestoreAdmin.ListFields 메서드에서 pageToken 파라미터는 어떤 역할을 하나요?", "answer": "pageToken 파라미터는 이전 호출에서 반환된 페이지 토큰으로, 다음 페이지의 결과를 요청하는 데 사용됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "FirestoreAdmin.ListFields 메서드를 사용하여 어떤 정보를 얻을 수 있나요?", "answer": "FirestoreAdmin.ListFields 메서드를 사용하면 데이터베이스의 필드 구성 및 메타데이터를 나열할 수 있습니다. 현재는 명시적으로 오버라이드된 필드만 나열할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "FirestoreAdmin.ListFields 메서드의 parent 파라미터는 어떤 형식이어야 하나요?", "answer": "parent 파라미터는 `projects/{projectId}/databases/{databaseId}/collectionGroups/{collectionId}` 형식의 문자열이어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "FirestoreAdmin.ListFields 메서드의 사용 예시는 무엇인가요?", "answer": "FirestoreAdmin.ListFields 메서드는 Firestore 데이터베이스의 필드 구성을 나열하는 데 사용되며, 예를 들어 특정 컬렉션 그룹의 필드 정보를 조회할 때 활용됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "Firestore에서 필드 구성을 업데이트하는 방법은 무엇인가요?", "answer": "Firestore에서 필드 구성을 업데이트하려면 `PATCH` 요청을 사용하여 특정 필드의 구성을 업데이트할 수 있습니다. 요청 URL은 `PATCH https://firestore.googleapis.com/v1/{field.name=projects/*/databases/*/collectionGroups/*/fields/*}` 형식입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "필드 업데이트 시 어떤 파라미터를 사용해야 하나요?", "answer": "필드 업데이트 시 `updateMask` 파라미터를 사용하여 업데이트할 필드의 구성을 지정할 수 있습니다. 이 파라미터는 필드의 상대 경로로, 업데이트할 필드의 이름을 쉼표로 구분하여 나열합니다. 예: `\"user.displayName,photo\"`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "필드 경로는 어떻게 지정하나요?", "answer": "필드 경로는 `projects/{projectId}/databases/{databaseId}/collectionGroups/{collectionId}/fields/{fieldPath}` 형식으로 지정합니다. 필드 경로는 간단한 필드 이름이나 맵 값 내의 필드 경로를 포함할 수 있습니다. 예를 들어, `address.city`는 `address` 필드 내의 `city`를 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "필드 업데이트 요청의 본문에는 어떤 내용이 포함되나요?", "answer": "필드 업데이트 요청의 본문에는 `Field` 인스턴스가 포함되어야 합니다. 이 인스턴스는 업데이트할 필드의 구성 정보를 담고 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "필드 업데이트 후 어떤 응답을 받을 수 있나요?", "answer": "필드 업데이트가 성공적으로 이루어지면 응답 본문에는 `Operation` 인스턴스가 포함됩니다. 이 인스턴스는 필드 업데이트의 상태를 추적하는 데 사용될 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "필드 마스크를 사용하는 이유는 무엇인가요?", "answer": "필드 마스크를 사용하면 호출자가 인지하지 못하는 구성을 변경하지 않도록 할 수 있습니다. 이를 통해 특정 필드의 구성만 업데이트하고 나머지는 그대로 유지할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "필드 경로에서 특수 문자는 어떻게 처리하나요?", "answer": "필드 경로에서 특수 문자는 백틱(`)으로 감싸서 처리해야 하며, 백틱 문자는 백슬래시(`\\`)로 이스케이프해야 합니다. 예를 들어, `address.city`는 필드 이름을 나타내고, `*`는 필드 이름이 됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "필드 업데이트를 위한 인증 범위는 무엇인가요?", "answer": "필드 업데이트를 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "기본 필드 설정을 구성하는 방법은 무엇인가요?", "answer": "기본 필드 설정을 구성하려면 특별한 필드 이름인 `projects/{projectId}/databases/{databaseId}/collectionGroups/__default__/fields/*`를 사용해야 합니다. 이 필드는 모든 필드에 대한 기본 인덱싱 설정을 포함합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "필드 업데이트의 메타데이터는 무엇인가요?", "answer": "필드 업데이트의 메타데이터는 `FieldOperationMetadata` 유형입니다. 이 메타데이터는 필드 업데이트 작업의 상태와 관련된 정보를 포함합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "`batchGet` 메서드를 사용하여 여러 문서를 가져오는 방법은 무엇인가요?", "answer": "`batchGet` 메서드는 POST 요청을 사용하여 여러 문서를 가져옵니다. 요청 URL은 `https://firestore.googleapis.com/v1/{database=projects/*/databases/*}/documents:batchGet` 형식입니다. 요청 본문에는 가져올 문서의 이름을 포함하는 `documents` 배열과 선택적으로 반환할 필드를 지정하는 `mask` 객체를 포함해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`batchGet` 요청의 요청 본문 구조는 어떻게 되나요?", "answer": "요청 본문은 다음과 같은 구조를 가집니다: ```json { \"documents\": [string], \"mask\": { object (DocumentMask) }, \"consistency_selector\": { \"transaction\": string, \"newTransaction\": { object (TransactionOptions) }, \"readTime\": string } } ``` 여기서 `documents`는 가져올 문서의 이름을 포함하고, `mask`는 반환할 필드를 지정합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`documents` 필드에 포함되는 문서 이름의 형식은 무엇인가요?", "answer": "`documents` 필드에 포함되는 문서 이름은 `projects/{projectId}/databases/{databaseId}/documents/{document_path}` 형식이어야 하며, 요청된 문서가 주어진 데이터베이스의 자식 리소스가 아닐 경우 요청이 실패합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`mask` 필드를 사용하여 반환할 필드를 제한하는 방법은 무엇인가요?", "answer": "`mask` 필드를 사용하여 반환할 필드를 지정할 수 있습니다. `mask`가 설정되지 않은 경우 모든 필드가 반환됩니다. 문서에 `mask`에 포함되지 않은 필드가 있을 경우 해당 필드는 응답에서 반환되지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`batchGet` 요청에서 `consistency_selector`의 역할은 무엇인가요?", "answer": "`consistency_selector`는 트랜잭션의 일관성 모드를 설정합니다. 설정하지 않으면 기본적으로 강한 일관성이 적용됩니다. `transaction` 또는 `newTransaction` 중 하나를 선택할 수 있으며, `readTime`을 사용하여 특정 시점의 문서를 읽을 수도 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`readTime` 필드는 어떤 형식으로 제공되어야 하나요?", "answer": "`readTime` 필드는 RFC 3339 형식의 타임스탬프 문자열로 제공되어야 하며, 마이크로초 정밀도를 가져야 합니다. 예를 들어, \"2014-10-02T15:01:23Z\" 또는 \"2014-10-02T15:01:23.045123456Z\"와 같은 형식이 가능합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`batchGet` 요청의 응답 본문 구조는 어떻게 되나요?", "answer": "응답 본문은 다음과 같은 구조를 가집니다: ```json { \"transaction\": string, \"readTime\": string, \"result\": { \"found\": { object (Document) }, \"missing\": string } } ``` 여기서 `transaction`은 요청의 일환으로 시작된 트랜잭션을 나타내며, `result`는 요청된 문서의 결과를 포함합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`found`와 `missing` 필드는 각각 무엇을 의미하나요?", "answer": "`found` 필드는 요청된 문서가 존재할 때 해당 문서의 정보를 포함하며, `missing` 필드는 요청된 문서가 존재하지 않을 때 그 문서의 이름을 포함합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`batchGet` 메서드를 사용하기 위한 인증 요구 사항은 무엇인가요?", "answer": "`batchGet` 메서드를 사용하기 위해서는 다음 OAuth 스코프 중 하나가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`batchGet` 메서드의 요청이 실패할 수 있는 경우는 어떤 경우인가요?", "answer": "요청이 실패할 수 있는 경우는 요청된 문서가 주어진 데이터베이스의 자식 리소스가 아닐 때입니다. 이 경우 요청이 실패하며 오류가 반환됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "Firestore의 `batchWrite` 메서드는 어떤 작업을 수행하나요?", "answer": "`batchWrite` 메서드는 여러 개의 쓰기 작업을 적용합니다. 그러나 이 메서드는 쓰기 작업을 원자적으로 적용하지 않으며, 순서에 관계없이 적용될 수 있습니다. 각 쓰기는 독립적으로 성공하거나 실패할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드의 HTTP 요청 형식은 어떻게 되나요?", "answer": "`batchWrite` 메서드는 POST 요청을 사용하며, 요청 URL은 `https://firestore.googleapis.com/v1/{database=projects/*/databases/*}/documents:batchWrite` 형식을 따릅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드의 요청 본문 구조는 어떻게 되나요?", "answer": "요청 본문은 다음과 같은 구조를 가집니다: ```json { \"writes\": [ { \"object (Write)\" } ], \"labels\": { \"string\": \"string\" } } ```", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드에서 `writes` 필드는 어떤 역할을 하나요?", "answer": "`writes` 필드는 적용할 쓰기 작업을 포함합니다. 이 메서드는 쓰기를 원자적으로 적용하지 않으며, 같은 문서에 대해 한 요청에서 두 번 쓰기를 할 수 없습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드의 응답 본문 구조는 어떻게 되나요?", "answer": "응답 본문은 다음과 같은 구조를 가집니다: ```json { \"writeResults\": [ { \"object (WriteResult)\" } ], \"status\": [ { \"object (Status)\" } ] } ```", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드의 `writeResults` 필드는 무엇을 나타내나요?", "answer": "`writeResults` 필드는 적용된 쓰기의 결과를 나타내며, 각 쓰기 결과는 요청의 i번째 쓰기와 대응됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드에서 `status` 필드는 어떤 정보를 제공하나요?", "answer": "`status` 필드는 쓰기 작업의 적용 상태를 나타내며, 각 쓰기 상태는 요청의 i번째 쓰기와 대응됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드를 사용할 때 필요한 인증 범위는 무엇인가요?", "answer": "`batchWrite` 메서드를 사용하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드와 관련하여 원자적으로 적용된 쓰기를 원할 경우 어떤 메서드를 사용해야 하나요?", "answer": "원자적으로 적용된 쓰기를 원할 경우 `documents.commit` 메서드를 사용해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드의 `labels` 필드는 어떤 용도로 사용되나요?", "answer": "`labels` 필드는 이 배치 쓰기와 관련된 레이블을 포함하며, \"key\": \"value\" 쌍의 목록으로 구성됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "Firestore에서 새로운 트랜잭션을 시작하는 방법은 무엇인가요?", "answer": "Firestore에서 새로운 트랜잭션을 시작하려면, HTTP POST 요청을 `https://firestore.googleapis.com/v1/{database=projects/*/databases/*}/documents:beginTransaction`에 보내야 합니다. 요청 본문에는 트랜잭션 옵션을 포함하는 JSON 구조가 필요합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "트랜잭션을 시작할 때 필요한 경로 매개변수는 무엇인가요?", "answer": "트랜잭션을 시작할 때 필요한 경로 매개변수는 `database`입니다. 이 매개변수는 `projects/{projectId}/databases/{databaseId}` 형식의 데이터베이스 이름을 포함해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "요청 본문에 포함해야 하는 JSON 구조는 어떻게 되나요?", "answer": "요청 본문에는 다음과 같은 JSON 구조가 포함되어야 합니다: `{ \"options\": { object (TransactionOptions) } }`. 여기서 `options`는 트랜잭션 옵션을 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "트랜잭션 시작 요청이 성공했을 때의 응답 구조는 어떻게 되나요?", "answer": "트랜잭션 시작 요청이 성공하면 응답 본문은 `{ \"transaction\": string }` 형식으로, `transaction` 필드는 시작된 트랜잭션을 나타내는 base64로 인코딩된 문자열입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "트랜잭션 옵션의 기본값은 무엇인가요?", "answer": "트랜잭션 옵션의 기본값은 읽기-쓰기 트랜잭션입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "트랜잭션을 시작하기 위해 필요한 인증 범위는 무엇인가요?", "answer": "트랜잭션을 시작하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "트랜잭션을 시작하는 API의 HTTP 메서드는 무엇인가요?", "answer": "트랜잭션을 시작하는 API의 HTTP 메서드는 POST입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "트랜잭션을 시작하기 위한 요청 URL의 형식은 어떻게 되나요?", "answer": "트랜잭션을 시작하기 위한 요청 URL의 형식은 `https://firestore.googleapis.com/v1/{database=projects/*/databases/*}/documents:beginTransaction`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "트랜잭션 시작 요청의 응답에서 `transaction` 필드는 어떤 형식인가요?", "answer": "`transaction` 필드는 bytes 형식으로, 시작된 트랜잭션을 나타내는 base64로 인코딩된 문자열입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "트랜잭션 시작 API에 대한 추가 정보는 어디에서 찾을 수 있나요?", "answer": "트랜잭션 시작 API에 대한 추가 정보는 Firestore BeginTransaction 문서에서 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "Firestore의 commit 메서드를 사용하여 트랜잭션을 커밋하는 방법은 무엇인가요?", "answer": "Firestore의 commit 메서드는 HTTP POST 요청을 사용하여 트랜잭션을 커밋합니다. 요청 URL은 `https://firestore.googleapis.com/v1/{database=projects/*/databases/*}/documents:commit` 형식을 따릅니다. 요청 본문에는 `writes` 배열과 선택적으로 `transaction` 필드를 포함해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "commit 메서드의 요청 본문 구조는 어떻게 되나요?", "answer": "요청 본문은 JSON 형식으로, `writes` 배열과 선택적으로 `transaction` 필드를 포함합니다. `writes` 배열은 적용할 쓰기 작업을 포함하며, `transaction` 필드는 base64로 인코딩된 문자열 형식입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "commit 메서드의 응답 본문 구조는 어떻게 되나요?", "answer": "응답 본문은 JSON 형식으로, `writeResults` 배열과 `commitTime` 필드를 포함합니다. `writeResults` 배열은 요청에서의 각 쓰기 작업에 대한 결과를 포함하며, `commitTime`은 커밋이 발생한 시간을 RFC 3339 형식으로 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "commit 메서드를 호출할 때 필요한 인증 범위는 무엇인가요?", "answer": "commit 메서드를 호출하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "Firestore의 commit 메서드에서 `writes` 배열의 역할은 무엇인가요?", "answer": "`writes` 배열은 Firestore에 적용할 쓰기 작업을 포함하며, 이 작업들은 항상 원자적으로 순서대로 실행됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "`transaction` 필드는 어떤 경우에 사용되며, 어떤 형식이어야 하나요?", "answer": "`transaction` 필드는 선택적으로 설정할 수 있으며, 모든 쓰기를 이 트랜잭션 내에서 적용하고 커밋할 때 사용됩니다. 이 필드는 base64로 인코딩된 문자열 형식이어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "커밋이 성공적으로 완료되었을 때, `commitTime` 필드는 어떤 정보를 제공하나요?", "answer": "`commitTime` 필드는 커밋이 발생한 시간을 나타내며, RFC 3339 형식으로 제공됩니다. 이 시간은 커밋의 효과를 보장하는 읽기 작업에 사용됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "Firestore의 commit 메서드를 사용할 때, 어떤 HTTP 메서드를 사용해야 하나요?", "answer": "Firestore의 commit 메서드를 사용할 때는 HTTP POST 메서드를 사용해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "Firestore의 commit 메서드에서 `writeResults` 배열의 의미는 무엇인가요?", "answer": "`writeResults` 배열은 요청에서 각 쓰기 작업의 결과를 포함하며, i번째 쓰기 결과는 요청의 i번째 쓰기 작업에 해당합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "Firestore의 commit 메서드에서 사용하는 URL의 형식은 무엇인가요?", "answer": "Firestore의 commit 메서드에서 사용하는 URL의 형식은 `https://firestore.googleapis.com/v1/{database=projects/*/databases/*}/documents:commit`입니다. 이 URL은 gRPC Transcoding 구문을 사용합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "`createDocument` 메서드를 사용하여 새 문서를 생성하는 HTTP 요청의 형식은 무엇인가요?", "answer": "`createDocument` 메서드는 POST 요청을 사용하며, 요청 URL 형식은 `https://firestore.googleapis.com/v1/{parent=projects/*/databases/*/documents/**}/{collectionId}`입니다. 여기서 `parent`는 필수로 지정해야 하는 리소스이며, `collectionId`는 생성할 문서가 속할 컬렉션의 ID입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "`createDocument` 메서드의 `parent` 파라미터는 무엇을 의미하나요?", "answer": "`parent` 파라미터는 문서의 부모 리소스를 나타내며, 예를 들어 `projects/{projectId}/databases/{databaseId}/documents` 또는 `projects/{projectId}/databases/{databaseId}/documents/chatrooms/{chatroom_id}`와 같은 형식으로 지정해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "`createDocument` 메서드에서 `documentId` 파라미터는 어떤 역할을 하나요?", "answer": "`documentId` 파라미터는 클라이언트가 지정할 수 있는 문서 ID로, 선택 사항입니다. 이 파라미터가 지정되지 않으면 서비스에서 자동으로 ID가 할당됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "요청 본문에 포함해야 하는 내용은 무엇인가요?", "answer": "요청 본문에는 `Document` 인스턴스가 포함되어야 합니다. 이 인스턴스는 생성할 문서의 필드와 값을 정의합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "`createDocument` 메서드의 응답 본문에는 어떤 정보가 포함되나요?", "answer": "성공적인 요청의 경우 응답 본문에는 생성된 문서의 `Document` 인스턴스가 포함됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "`createDocument` 메서드를 호출하기 위해 필요한 OAuth 스코프는 무엇인가요?", "answer": "`createDocument` 메서드를 호출하기 위해서는 다음 중 하나의 OAuth 스코프가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "`mask` 파라미터는 어떤 용도로 사용되나요?", "answer": "`mask` 파라미터는 응답에서 반환할 필드를 지정하는 데 사용됩니다. 이 파라미터가 설정되지 않으면 모든 필드가 반환됩니다. 만약 문서에 `mask`에 포함되지 않은 필드가 있다면, 해당 필드는 응답에서 제외됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "`createDocument` 메서드의 요청 URL에서 `{collectionId}`는 무엇을 의미하나요?", "answer": "`{collectionId}`는 생성할 문서가 속할 컬렉션의 ID를 의미합니다. 예를 들어, `chatrooms`와 같은 값이 될 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "`createDocument` 메서드의 요청을 성공적으로 수행했을 때의 응답 형식은 어떻게 되나요?", "answer": "요청이 성공적으로 수행되면 응답 형식은 `Document` 인스턴스이며, 생성된 문서의 데이터가 포함됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "`createDocument` 메서드의 사용 예시는 어디에서 찾을 수 있나요?", "answer": "문서 내에 구체적인 사용 예시는 제공되지 않지만, 메서드의 요청 형식과 파라미터에 대한 설명을 통해 사용 방법을 이해할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "Firestore에서 문서를 삭제하는 HTTP 요청은 어떻게 구성되나요?", "answer": "문서를 삭제하기 위한 HTTP 요청은 다음과 같이 구성됩니다: `DELETE https://firestore.googleapis.com/v1/{name=projects/*/databases/*/documents/*/**}`. 여기서 `{name}`은 삭제할 문서의 리소스 이름을 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "문서를 삭제할 때 필요한 경로 매개변수는 무엇인가요?", "answer": "문서를 삭제할 때 필요한 경로 매개변수는 `name`입니다. 이 매개변수는 삭제할 문서의 리소스 이름을 포함해야 하며, 형식은 `projects/{projectId}/databases/{databaseId}/documents/{document_path}`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "문서를 삭제할 때 사용할 수 있는 쿼리 매개변수는 무엇인가요?", "answer": "문서를 삭제할 때 사용할 수 있는 쿼리 매개변수는 `currentDocument`입니다. 이는 문서에 대한 선택적 전제 조건으로, 설정된 경우 대상 문서가 이 조건을 충족하지 않으면 요청이 실패합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "문서를 삭제하기 위한 요청 본문은 어떻게 구성되나요?", "answer": "문서를 삭제하기 위한 요청 본문은 비어 있어야 합니다. 즉, 요청 본문은 필요하지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "문서 삭제 요청이 성공했을 때의 응답 본문은 어떻게 되나요?", "answer": "문서 삭제 요청이 성공하면 응답 본문은 빈 JSON 객체입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "문서를 삭제하기 위해 필요한 인증 범위는 무엇인가요?", "answer": "문서를 삭제하기 위해 필요한 인증 범위는 다음 중 하나입니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "문서를 삭제할 때 전제 조건을 설정하는 방법은 무엇인가요?", "answer": "문서를 삭제할 때 전제 조건을 설정하려면 `currentDocument` 쿼리 매개변수를 사용하여 요청을 구성하면 됩니다. 이 매개변수는 문서가 특정 조건을 충족해야 함을 지정합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "Firestore에서 문서를 삭제할 때 발생할 수 있는 오류는 무엇인가요?", "answer": "문서를 삭제할 때 전제 조건이 설정되었으나 해당 문서가 조건을 충족하지 않으면 요청이 실패합니다. 이 경우 오류가 발생할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "Firestore 문서 삭제 API를 호출하기 위한 예제 코드는 무엇인가요?", "answer": "문서 삭제 API를 호출하기 위한 예제 코드는 문서의 리소스 이름을 포함한 DELETE 요청을 보내는 것입니다. 예를 들어, `DELETE https://firestore.googleapis.com/v1/projects/my-project/databases/(default)/documents/my-collection/my-document`와 같이 요청을 보낼 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "Firestore 문서 삭제 API에 대한 추가 정보는 어디에서 찾을 수 있나요?", "answer": "Firestore 문서 삭제 API에 대한 추가 정보는 [Authentication Overview](https://cloud.google.com/docs/authentication#authorization-gcp)에서 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "Firestore에서 특정 문서를 가져오는 HTTP 요청은 어떻게 구성하나요?", "answer": "특정 문서를 가져오기 위해서는 다음과 같은 HTTP GET 요청을 사용합니다: `GET https://firestore.googleapis.com/v1/{name=projects/*/databases/*/documents/*/**}`. 여기서 `{name}`은 문서의 리소스 이름을 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_get_hl=ko.txt"}
{"question": "문서의 리소스 이름은 어떤 형식이어야 하나요?", "answer": "문서의 리소스 이름은 다음 형식을 따라야 합니다: `projects/{projectId}/databases/{databaseId}/documents/{document_path}`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_get_hl=ko.txt"}
{"question": "요청 시 특정 필드만 반환받고 싶다면 어떻게 해야 하나요?", "answer": "요청 시 `mask` 쿼리 파라미터를 사용하여 반환받고 싶은 필드를 지정할 수 있습니다. `mask`가 설정되지 않으면 모든 필드가 반환됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_get_hl=ko.txt"}
{"question": "문서를 트랜잭션 내에서 읽으려면 어떤 파라미터를 사용해야 하나요?", "answer": "문서를 트랜잭션 내에서 읽으려면 `consistency_selector` 파라미터로 `transaction`을 사용하고, 해당 트랜잭션의 ID를 base64로 인코딩하여 제공해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_get_hl=ko.txt"}
{"question": "특정 시점의 문서 버전을 읽으려면 어떤 형식의 타임스탬프를 사용해야 하나요?", "answer": "특정 시점의 문서 버전을 읽기 위해서는 `readTime` 쿼리 파라미터를 사용해야 하며, RFC 3339 형식의 마이크로초 정밀 타임스탬프를 제공해야 합니다. 예: `\"2014-10-02T15:01:23Z\"`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_get_hl=ko.txt"}
{"question": "요청 본문은 어떻게 구성해야 하나요?", "answer": "요청 본문은 비어 있어야 하며, 추가적인 데이터는 포함하지 않아야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_get_hl=ko.txt"}
{"question": "이 API를 사용하기 위해 필요한 인증 범위는 무엇인가요?", "answer": "이 API를 사용하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_get_hl=ko.txt"}
{"question": "문서 요청이 성공적으로 이루어지면 어떤 응답을 받게 되나요?", "answer": "요청이 성공적으로 이루어지면 응답 본문에는 `Document` 인스턴스가 포함됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_get_hl=ko.txt"}
{"question": "문서의 특정 필드를 반환받기 위해 `mask` 파라미터를 어떻게 설정하나요?", "answer": "`mask` 파라미터는 반환받고자 하는 필드의 이름을 포함하는 객체로 설정해야 합니다. 예를 들어, `{ \"fieldPaths\": [\"field1\", \"field2\"] }`와 같이 설정할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_get_hl=ko.txt"}
{"question": "문서의 일관성 모드를 설정하지 않으면 어떻게 되나요?", "answer": "문서의 일관성 모드를 설정하지 않으면 기본적으로 강한 일관성이 적용됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_get_hl=ko.txt"}
{"question": "Firestore 문서의 JSON 표현은 어떻게 되나요?", "answer": "Firestore 문서의 JSON 표현은 다음과 같습니다: ```json { \"name\": string, \"fields\": { string: { object (Value) }, ... }, \"createTime\": string, \"updateTime\": string } ```", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore 문서의 필드 이름에 대한 제약사항은 무엇인가요?", "answer": "Firestore 문서의 필드 이름은 UTF-8로 인코딩되어야 하며, 1,500 바이트를 초과할 수 없고 비어있어서는 안 됩니다. 또한, 필드 이름은 정규 표현식 __.*__와 일치하는 경우 예약되어 있으며, 특정 문서화된 맥락을 제외하고는 예약된 필드 이름을 사용할 수 없습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore 문서의 생성 시간(createTime)과 업데이트 시간(updateTime)의 형식은 무엇인가요?", "answer": "Firestore 문서의 생성 시간(createTime)과 업데이트 시간(updateTime)은 RFC 3339 형식의 문자열로 표현됩니다. 예를 들어, \"2014-10-02T15:01:23Z\" 또는 \"2014-10-02T15:01:23.045123456Z\"와 같은 형식입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 문서를 삭제하는 방법은 무엇인가요?", "answer": "Firestore에서 문서를 삭제하려면 `delete` 메서드를 사용합니다. 이 메서드는 특정 문서를 삭제하는 기능을 제공합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 여러 문서를 가져오는 방법은 무엇인가요?", "answer": "Firestore에서 여러 문서를 가져오려면 `batchGet` 메서드를 사용합니다. 이 메서드는 여러 문서를 동시에 가져오는 기능을 제공합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 문서를 생성하는 방법은 무엇인가요?", "answer": "Firestore에서 문서를 생성하려면 `createDocument` 메서드를 사용합니다. 이 메서드는 새로운 문서를 생성하는 기능을 제공합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 문서를 업데이트하거나 삽입하는 방법은 무엇인가요?", "answer": "Firestore에서 문서를 업데이트하거나 삽입하려면 `patch` 메서드를 사용합니다. 이 메서드는 문서를 업데이트하거나 새로운 문서를 삽입하는 기능을 제공합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 트랜잭션을 시작하는 방법은 무엇인가요?", "answer": "Firestore에서 트랜잭션을 시작하려면 `beginTransaction` 메서드를 사용합니다. 이 메서드는 새로운 트랜잭션을 시작하는 기능을 제공합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 문서를 나열하는 방법은 무엇인가요?", "answer": "Firestore에서 문서를 나열하려면 `listDocuments` 메서드를 사용합니다. 이 메서드는 특정 경로 아래의 문서들을 나열하는 기능을 제공합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 쿼리를 실행하는 방법은 무엇인가요?", "answer": "Firestore에서 쿼리를 실행하려면 `runQuery` 메서드를 사용합니다. 이 메서드는 쿼리를 실행하는 기능을 제공합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_hl=ko.txt"}
{"question": "`listCollectionIds` 메서드는 어떤 HTTP 요청을 사용하나요?", "answer": "`listCollectionIds` 메서드는 POST 요청을 사용하며, 요청 URL은 `https://firestore.googleapis.com/v1/{parent=projects/*/databases/*/documents}:listCollectionIds`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/listCollectionIds?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_listCollectionIds_hl=ko.txt"}
{"question": "`listCollectionIds` 메서드의 `parent` 파라미터는 어떤 형식을 가져야 하나요?", "answer": "`parent` 파라미터는 필수이며, 형식은 `projects/{projectId}/databases/{databaseId}/documents/{document_path}`입니다. 예를 들어, `projects/my-project/databases/my-database/documents/chatrooms/my-chatroom`와 같은 형식을 가집니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/listCollectionIds?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_listCollectionIds_hl=ko.txt"}
{"question": "요청 본문에서 `pageSize`와 `pageToken`의 역할은 무엇인가요?", "answer": "`pageSize`는 반환할 최대 결과 수를 지정하며, `pageToken`은 `ListCollectionIdsResponse`에서 가져온 값으로, 페이지를 계속하기 위해 사용됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/listCollectionIds?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_listCollectionIds_hl=ko.txt"}
{"question": "`listCollectionIds` 메서드의 `consistency_selector`는 무엇인가요?", "answer": "`consistency_selector`는 요청의 일관성 모드를 설정하는 필드로, 기본값은 강한 일관성입니다. 이 필드는 `readTime`을 사용하여 특정 시점의 문서를 읽을 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/listCollectionIds?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_listCollectionIds_hl=ko.txt"}
{"question": "`readTime` 필드의 형식은 어떻게 되나요?", "answer": "`readTime` 필드는 RFC 3339 형식의 타임스탬프를 사용하며, 마이크로초 정밀도로 지난 한 시간 이내의 값을 가져야 합니다. 예시로는 `\"2014-10-02T15:01:23Z\"`와 같은 형식이 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/listCollectionIds?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_listCollectionIds_hl=ko.txt"}
{"question": "`listCollectionIds` 메서드의 성공적인 응답 본문은 어떤 구조를 가지나요?", "answer": "성공적인 응답 본문은 `collectionIds` 배열과 `nextPageToken`을 포함하는 구조를 가집니다. 예를 들어, `{ \"collectionIds\": [ \"collection1\", \"collection2\" ], \"nextPageToken\": \"token\" }`와 같은 형식입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/listCollectionIds?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_listCollectionIds_hl=ko.txt"}
{"question": "`listCollectionIds` 메서드를 호출하기 위한 인증 스코프는 무엇인가요?", "answer": "이 메서드를 호출하기 위해서는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform` 중 하나의 OAuth 스코프가 필요합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/listCollectionIds?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_listCollectionIds_hl=ko.txt"}
{"question": "`listCollectionIds` 메서드의 요청 본문에서 `pageSize`의 데이터 타입은 무엇인가요?", "answer": "`pageSize`의 데이터 타입은 정수(integer)입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/listCollectionIds?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_listCollectionIds_hl=ko.txt"}
{"question": "`nextPageToken`은 어떤 용도로 사용되나요?", "answer": "`nextPageToken`은 결과 목록을 계속하기 위해 사용되는 페이지 토큰입니다. 이를 통해 다음 페이지의 데이터를 요청할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/listCollectionIds?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_listCollectionIds_hl=ko.txt"}
{"question": "`listCollectionIds` 메서드의 요청 본문에서 `consistency_selector`는 어떤 값을 가질 수 있나요?", "answer": "`consistency_selector`는 `readTime`만을 가질 수 있으며, 이는 특정 시점의 문서를 읽기 위해 사용됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/listCollectionIds?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_listCollectionIds_hl=ko.txt"}
{"question": "`listDocuments` 메서드를 호출하기 위한 HTTP 요청 형식은 무엇인가요?", "answer": "`listDocuments` 메서드는 GET 요청을 사용하며, 요청 URL 형식은 `https://firestore.googleapis.com/v1/{parent=projects/*/databases/*/documents}/{collectionId}`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "`listDocuments` 메서드의 `parent` 파라미터는 어떤 형식을 가져야 하나요?", "answer": "`parent` 파라미터는 필수이며, 형식은 `projects/{projectId}/databases/{databaseId}/documents` 또는 `projects/{projectId}/databases/{databaseId}/documents/{document_path}`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "`listDocuments` 메서드에서 `collectionId` 파라미터는 무엇을 의미하나요?", "answer": "`collectionId` 파라미터는 선택 사항으로, 부모에 대한 상대적인 컬렉션 ID를 나타냅니다. 제공하지 않으면 Firestore는 제공된 부모 아래의 모든 컬렉션에서 문서를 나열합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "`listDocuments` 메서드의 `pageSize` 파라미터는 어떤 역할을 하나요?", "answer": "`pageSize` 파라미터는 단일 응답에서 반환할 최대 문서 수를 지정하는 선택적 파라미터입니다. Firestore는 이 값보다 적은 수의 문서를 반환할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "`listDocuments` 메서드에서 `showMissing` 파라미터는 어떤 기능을 하나요?", "answer": "`showMissing` 파라미터는 누락된 문서를 표시할지를 결정합니다. 누락된 문서는 존재하지 않지만 그 아래에 하위 문서가 있는 경우를 의미합니다. true로 설정하면 이러한 문서가 키와 함께 반환되지만 필드, createTime 또는 updateTime은 설정되지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "`listDocuments` 메서드의 응답 본문은 어떤 형식을 가지나요?", "answer": "성공적인 응답 본문은 `ListDocumentsResponse` 인스턴스를 포함합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "`listDocuments` 메서드를 사용할 때 필요한 인증 범위는 무엇인가요?", "answer": "`listDocuments` 메서드를 사용하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "`listDocuments` 메서드에서 `orderBy` 파라미터는 어떤 형식으로 사용되나요?", "answer": "`orderBy` 파라미터는 선택 사항으로, 반환할 문서의 정렬 방식을 지정합니다. 예를 들어, `priority desc` 또는 `__name__ desc`와 같은 형식으로 사용됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "`listDocuments` 메서드의 `mask` 파라미터는 어떤 용도로 사용되나요?", "answer": "`mask` 파라미터는 반환할 필드를 지정하는 선택적 객체입니다. 설정하지 않으면 모든 필드가 반환됩니다. 문서에 이 마스크에 없는 필드가 있으면 해당 필드는 응답에 포함되지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "`listDocuments` 메서드에서 `transaction` 파라미터는 어떤 경우에 사용되나요?", "answer": "`transaction` 파라미터는 이미 활성화된 트랜잭션의 일환으로 읽기를 수행할 때 사용됩니다. 이 값은 base64로 인코딩된 문자열 형식이어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "Firestore에서 문서를 나열하기 위한 HTTP 요청 형식은 무엇인가요?", "answer": "Firestore에서 문서를 나열하기 위한 HTTP 요청 형식은 다음과 같습니다: `GET https://firestore.googleapis.com/v1/{parent=projects/*/databases/*/documents/*/**}/{collectionId}`. 이 URL은 gRPC Transcoding 구문을 사용합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_list_hl=ko.txt"}
{"question": "`parent` 파라미터의 형식은 어떻게 되나요?", "answer": "`parent` 파라미터는 필수이며, 형식은 `projects/{projectId}/databases/{databaseId}/documents` 또는 `projects/{projectId}/databases/{databaseId}/documents/{document_path}`입니다. 예를 들어: `projects/my-project/databases/my-database/documents` 또는 `projects/my-project/databases/my-database/documents/chatrooms/my-chatroom`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_list_hl=ko.txt"}
{"question": "`collectionId` 파라미터는 무엇이며, 어떻게 사용하나요?", "answer": "`collectionId` 파라미터는 선택 사항으로, 부모에 대한 상대적인 컬렉션 ID를 나열하는 데 사용됩니다. 예를 들어: `chatrooms` 또는 `messages`입니다. 제공하지 않으면 Firestore는 제공된 부모 아래의 모든 컬렉션에서 문서를 나열합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_list_hl=ko.txt"}
{"question": "`pageSize` 파라미터는 어떤 역할을 하나요?", "answer": "`pageSize` 파라미터는 단일 응답에서 반환할 최대 문서 수를 지정하는 선택적 파라미터입니다. Firestore는 이 값보다 적은 수의 문서를 반환할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_list_hl=ko.txt"}
{"question": "`showMissing` 파라미터는 무엇을 의미하나요?", "answer": "`showMissing` 파라미터는 누락된 문서를 표시할지를 결정합니다. 누락된 문서는 존재하지 않지만 그 아래에 하위 문서가 있는 경우를 의미합니다. true로 설정하면 이러한 누락된 문서가 키와 함께 반환되지만 필드, createTime 또는 updateTime은 설정되지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_list_hl=ko.txt"}
{"question": "`transaction` 파라미터는 어떤 경우에 사용하나요?", "answer": "`transaction` 파라미터는 이미 활성화된 트랜잭션의 일환으로 읽기를 수행할 때 사용됩니다. 이 값은 base64로 인코딩된 문자열이어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_list_hl=ko.txt"}
{"question": "`readTime` 파라미터는 어떤 형식이어야 하나요?", "answer": "`readTime` 파라미터는 제공된 시간에 읽기를 수행할 때 사용되며, 마이크로초 정밀 타임스탬프여야 합니다. 이 값은 RFC 3339 형식을 사용하며, 예를 들어 \"2014-10-02T15:01:23Z\" 또는 \"2014-10-02T15:01:23.045123456Z\"와 같은 형식이어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_list_hl=ko.txt"}
{"question": "요청 본문은 어떻게 구성되나요?", "answer": "요청 본문은 비어 있어야 합니다. 즉, 요청을 보낼 때 본문에 아무 내용도 포함하지 않아야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_list_hl=ko.txt"}
{"question": "이 API를 사용하기 위해 필요한 인증 범위는 무엇인가요?", "answer": "이 API를 사용하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_list_hl=ko.txt"}
{"question": "성공적인 응답의 형식은 무엇인가요?", "answer": "성공적인 응답의 형식은 `ListDocumentsResponse`의 인스턴스를 포함합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_list_hl=ko.txt"}
{"question": "`partitionQuery` 메서드는 어떤 기능을 제공하나요?", "answer": "`partitionQuery` 메서드는 쿼리를 파티셔닝하여 쿼리를 병렬로 실행할 수 있는 파티션 커서를 반환합니다. 반환된 파티션 커서는 쿼리 결과의 시작/종료 지점으로 사용될 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`partitionQuery` 메서드의 HTTP 요청 형식은 어떻게 되나요?", "answer": "`partitionQuery` 메서드는 POST 요청을 사용하며, 요청 URL은 `https://firestore.googleapis.com/v1/{parent=projects/*/databases/*/documents}:partitionQuery` 형식을 따릅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`partitionQuery` 요청의 `parent` 파라미터는 어떤 형식을 가져야 하나요?", "answer": "`parent` 파라미터는 필수이며, 형식은 `projects/{projectId}/databases/{databaseId}/documents`입니다. 문서 리소스 이름은 지원되지 않으며, 오직 데이터베이스 리소스 이름만 지정할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`partitionQuery` 요청 본문에서 `partitionCount` 필드는 어떤 역할을 하나요?", "answer": "`partitionCount` 필드는 원하는 최대 파티션 포인트 수를 지정합니다. 이 값은 양수여야 하며, 실제 반환되는 파티션 수는 이보다 적을 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`partitionQuery` 요청에서 `pageSize` 필드는 무엇을 의미하나요?", "answer": "`pageSize` 필드는 이 호출에서 반환할 최대 파티션 수를 지정합니다. 예를 들어, `partitionCount`가 10이고 `pageSize`가 8인 경우, 첫 번째 호출은 최대 8개의 파티션을 반환하고, 추가 결과가 있을 경우 `nextPageToken`을 반환합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`structuredQuery`는 `partitionQuery` 요청에서 어떻게 사용되나요?", "answer": "`structuredQuery`는 파티셔닝할 쿼리를 지정하는 데 사용됩니다. 쿼리는 모든 하위 항목을 포함하는 컬렉션을 지정해야 하며, 이름 오름차순으로 정렬되어야 합니다. 다른 필터, 정렬, 제한, 오프셋 및 시작/종료 커서는 지원되지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`partitionQuery` 요청에서 `readTime` 필드는 어떤 역할을 하나요?", "answer": "`readTime` 필드는 요청의 일관성 모드를 지정합니다. 설정하지 않으면 기본적으로 강한 일관성이 적용됩니다. 이 필드는 주어진 시간에 문서를 읽도록 하며, 마이크로초 정밀도의 타임스탬프여야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`partitionQuery`의 응답 본문은 어떤 구조를 가지고 있나요?", "answer": "`partitionQuery`의 응답 본문은 `partitions` 배열과 `nextPageToken`을 포함합니다. `partitions`는 각 파티션의 커서를 포함하며, `nextPageToken`은 추가 결과를 요청하는 데 사용될 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`partitionQuery` 요청이 성공적으로 수행되었을 때, 반환되는 `partitions`의 의미는 무엇인가요?", "answer": "반환된 `partitions`는 쿼리 결과의 시작 또는 종료 지점으로 사용될 수 있는 파티션 결과입니다. 각 파티션은 `documents.runQuery` 요청에서 사용될 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`partitionQuery` 요청에서 빈 결과가 반환될 수 있는 경우는 어떤 경우인가요?", "answer": "빈 결과는 쿼리에 파티셔닝할 수 있는 결과가 너무 적거나, 쿼리가 파티셔닝을 지원하지 않는 경우에 발생할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`PATCH` 메서드를 사용하여 Firestore에서 문서를 업데이트하는 방법은 무엇인가요?", "answer": "Firestore에서 문서를 업데이트하려면 `PATCH` HTTP 요청을 사용하여 다음과 같은 URL 형식으로 요청을 보냅니다: `PATCH https://firestore.googleapis.com/v1/{document.name=projects/*/databases/*/documents/*/**}`. 요청 본문에는 업데이트할 문서의 인스턴스를 포함해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "`PATCH` 요청에서 `updateMask` 파라미터의 역할은 무엇인가요?", "answer": "`updateMask` 파라미터는 업데이트할 필드를 지정하는 객체입니다. 마스크에 포함되지 않은 필드는 서버에서 변경되지 않으며, 마스크에 포함되지만 입력 문서에 없는 필드는 서버의 문서에서 삭제됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "`mask` 파라미터는 어떤 용도로 사용되나요?", "answer": "`mask` 파라미터는 응답에서 반환할 필드를 지정하는 객체입니다. 이 파라미터가 설정되지 않으면 모든 필드가 반환되며, 마스크에 포함되지 않은 필드는 응답에서 제외됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "`currentDocument` 파라미터는 어떤 경우에 사용되며, 그 기능은 무엇인가요?", "answer": "`currentDocument` 파라미터는 문서에 대한 선택적 전제 조건을 설정하는 데 사용됩니다. 이 파라미터가 설정되면, 요청이 실패할 경우 해당 문서가 이 조건을 충족하지 않을 때 발생합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "`PATCH` 요청의 성공적인 응답 본문에는 어떤 정보가 포함되나요?", "answer": "성공적인 `PATCH` 요청의 응답 본문에는 업데이트된 문서의 인스턴스가 포함됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "Firestore의 `PATCH` 메서드를 사용하기 위해 필요한 OAuth 스코프는 무엇인가요?", "answer": "`PATCH` 메서드를 사용하기 위해서는 다음 중 하나의 OAuth 스코프가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "`PATCH` 요청을 보낼 때 문서의 리소스 이름 형식은 어떻게 되나요?", "answer": "문서의 리소스 이름 형식은 `projects/{projectId}/databases/{databaseId}/documents/{document_path}`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "`PATCH` 요청을 통해 문서를 업데이트할 때, 필드 경로에 예약어를 포함할 수 있나요?", "answer": "아니요, `updateMask`에 포함된 필드 경로는 예약어를 포함할 수 없습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "Firestore에서 문서를 업데이트할 때, 요청 본문에 포함해야 하는 데이터 형식은 무엇인가요?", "answer": "요청 본문에는 `Document` 인스턴스가 포함되어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "`PATCH` 메서드의 HTTP 요청 형식은 무엇인가요?", "answer": "`PATCH` 메서드의 HTTP 요청 형식은 `PATCH https://firestore.googleapis.com/v1/{document.name=projects/*/databases/*/documents/*/**}`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "Firestore에서 트랜잭션을 롤백하는 방법은 무엇인가요?", "answer": "Firestore에서 트랜잭션을 롤백하려면 HTTP POST 요청을 사용하여 `https://firestore.googleapis.com/v1/{database=projects/*/databases/*}/documents:rollback` 엔드포인트에 요청을 보내야 합니다. 요청 본문에는 롤백할 트랜잭션의 base64 인코딩된 문자열을 포함해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/rollback?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_rollback_hl=ko.txt"}
{"question": "롤백 요청을 보낼 때 필요한 경로 매개변수는 무엇인가요?", "answer": "롤백 요청을 보낼 때 필요한 경로 매개변수는 `database`입니다. 이 매개변수는 `projects/{projectId}/databases/{databaseId}` 형식으로 되어 있어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/rollback?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_rollback_hl=ko.txt"}
{"question": "롤백 요청의 본문 구조는 어떻게 되나요?", "answer": "롤백 요청의 본문 구조는 JSON 형식으로, `transaction` 필드를 포함해야 합니다. 이 필드는 롤백할 트랜잭션의 base64 인코딩된 문자열입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/rollback?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_rollback_hl=ko.txt"}
{"question": "롤백 요청이 성공했을 때의 응답은 어떻게 되나요?", "answer": "롤백 요청이 성공하면 응답 본문은 빈 JSON 객체입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/rollback?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_rollback_hl=ko.txt"}
{"question": "롤백 요청을 수행하기 위해 필요한 인증 범위는 무엇인가요?", "answer": "롤백 요청을 수행하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/rollback?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_rollback_hl=ko.txt"}
{"question": "gRPC Transcoding이란 무엇인가요?", "answer": "gRPC Transcoding은 RESTful API 요청을 gRPC 요청으로 변환하는 방법을 설명하는 것으로, 이 문서에서는 URL이 gRPC Transcoding 구문을 사용한다고 명시하고 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/rollback?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_rollback_hl=ko.txt"}
{"question": "트랜잭션 롤백을 위한 요청을 어떻게 구성하나요?", "answer": "트랜잭션 롤백 요청을 구성하려면, HTTP POST 요청을 만들고, URL에 데이터베이스 경로를 포함시키고, 요청 본문에 롤백할 트랜잭션의 base64 인코딩된 문자열을 포함해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/rollback?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_rollback_hl=ko.txt"}
{"question": "Firestore에서 트랜잭션 롤백을 사용할 때 주의해야 할 점은 무엇인가요?", "answer": "트랜잭션 롤백을 사용할 때는 요청 본문에 올바른 base64 인코딩된 트랜잭션 문자열을 포함해야 하며, 인증 범위가 적절히 설정되어 있어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/rollback?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_rollback_hl=ko.txt"}
{"question": "Firestore의 트랜잭션 롤백 기능은 어떤 상황에서 유용한가요?", "answer": "Firestore의 트랜잭션 롤백 기능은 데이터베이스 작업 중 오류가 발생했을 때, 이전 상태로 되돌리기 위해 유용합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/rollback?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_rollback_hl=ko.txt"}
{"question": "Firestore API를 사용하여 트랜잭션 롤백을 구현하는 예시는 무엇인가요?", "answer": "Firestore API를 사용하여 트랜잭션 롤백을 구현하는 예시는 다음과 같습니다: HTTP POST 요청을 `https://firestore.googleapis.com/v1/projects/{projectId}/databases/{databaseId}/documents:rollback`에 보내고, 요청 본문에 `{ \"transaction\": \"base64_encoded_transaction_string\" }` 형식으로 트랜잭션을 포함합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/rollback?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_rollback_hl=ko.txt"}
{"question": "`runAggregationQuery` 메서드는 어떤 기능을 수행하나요?", "answer": "`runAggregationQuery` 메서드는 집계 쿼리를 실행하여 문서 결과를 생성하는 대신 AggregationResult 시리즈를 서버 측에서 생성합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`runAggregationQuery`를 호출하기 위한 HTTP 요청 형식은 무엇인가요?", "answer": "`runAggregationQuery`를 호출하기 위한 HTTP 요청 형식은 POST이며, URL은 `https://firestore.googleapis.com/v1/{parent=projects/*/databases/*/documents}:runAggregationQuery`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`runAggregationQuery`의 요청 본문 구조는 어떻게 되나요?", "answer": "요청 본문은 `explainOptions`, `query_type`, 및 `consistency_selector`를 포함하는 JSON 구조를 가집니다. `query_type`은 `structuredAggregationQuery` 객체를 포함해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`structuredAggregationQuery`의 필드는 무엇이 있나요?", "answer": "`structuredAggregationQuery`는 `aggregations` 배열을 포함하며, 각 요소는 집계를 정의하는 Aggregation 객체입니다. 최소 1개에서 최대 5개의 집계를 포함할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`Count` 집계의 `upTo` 필드는 어떤 용도로 사용되나요?", "answer": "`Count` 집계의 `upTo` 필드는 집계할 문서의 최대 수를 제한하는 선택적 제약 조건으로 사용됩니다. 이 값은 0보다 커야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`Sum` 집계는 어떤 값을 집계하나요?", "answer": "`Sum` 집계는 요청된 필드의 값들을 집계하며, 숫자 값만 집계됩니다. 비숫자 값이나 NULL은 건너뜁니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`Avg` 집계는 어떤 결과를 반환하나요?", "answer": "`Avg` 집계는 요청된 필드의 값들의 평균을 계산하여 항상 결과를 double 형식으로 반환합니다. 비숫자 값이나 NULL은 건너뜁니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`runAggregationQuery`의 응답 본문 구조는 어떻게 되나요?", "answer": "응답 본문은 `result`, `transaction`, `readTime`, 및 `explainMetrics`를 포함하는 JSON 구조를 가집니다. `result`는 AggregationResult 객체입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`runAggregationQuery`를 사용할 때 필요한 OAuth 범위는 무엇인가요?", "answer": "`runAggregationQuery`를 사용할 때 필요한 OAuth 범위는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`runAggregationQuery`의 `explainOptions` 필드는 어떤 역할을 하나요?", "answer": "`explainOptions` 필드는 쿼리에 대한 추가 통계 정보를 반환하도록 설정할 수 있는 선택적 객체입니다. 설정하지 않으면 쿼리 결과만 반환됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드를 호출하기 위한 HTTP 요청 형식은 무엇인가요?", "answer": "`runQuery` 메서드는 POST 요청을 사용하며, 요청 URL은 `https://firestore.googleapis.com/v1/{parent=projects/*/databases/*/documents}:runQuery` 형식을 따릅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드의 `parent` 파라미터는 어떤 형식을 가져야 하나요?", "answer": "`parent` 파라미터는 `projects/{projectId}/databases/{databaseId}/documents` 또는 `projects/{projectId}/databases/{databaseId}/documents/{document_path}` 형식을 가져야 하며, 예를 들어 `projects/my-project/databases/my-database/documents`와 같은 형식입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 요청의 본문에 포함되어야 하는 JSON 구조는 어떻게 되나요?", "answer": "요청 본문은 `explainOptions`, `query_type`, `consistency_selector`를 포함하는 JSON 구조를 가져야 하며, `query_type`은 `structuredQuery` 객체를 포함해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드에서 `explainOptions`의 역할은 무엇인가요?", "answer": "`explainOptions`는 쿼리에 대한 설명 옵션으로, 설정할 경우 추가적인 쿼리 통계가 반환됩니다. 설정하지 않으면 쿼리 결과만 반환됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드에서 `transaction` 파라미터는 어떤 용도로 사용되나요?", "answer": "`transaction` 파라미터는 이미 활성화된 트랜잭션 내에서 쿼리를 실행할 때 사용되며, 값은 실행할 쿼리의 불투명한 트랜잭션 ID를 base64로 인코딩한 문자열입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드의 응답 본문에는 어떤 정보가 포함되나요?", "answer": "응답 본문에는 `transaction`, `document`, `readTime`, `skippedResults`, `explainMetrics` 등의 정보가 포함됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드의 응답에서 `readTime` 필드는 어떤 정보를 나타내나요?", "answer": "`readTime` 필드는 문서가 읽힌 시간을 나타내며, 이 시간은 쿼리가 실행된 시점을 기준으로 하며 RFC 3339 형식을 따릅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드에서 `newTransaction` 파라미터는 어떤 기능을 제공하나요?", "answer": "`newTransaction` 파라미터는 새로운 트랜잭션을 시작하고 문서를 읽을 때 사용되며, 기본적으로 읽기 전용 트랜잭션으로 설정됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드의 응답에서 `skippedResults` 필드는 무엇을 의미하나요?", "answer": "`skippedResults` 필드는 마지막 응답과 현재 응답 사이의 오프셋으로 인해 건너뛴 결과의 수를 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드를 사용하기 위해 필요한 OAuth 스코프는 무엇인가요?", "answer": "`runQuery` 메서드를 사용하기 위해서는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform` 중 하나의 OAuth 스코프가 필요합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`projects.databases.operations.cancel` 메서드는 어떤 기능을 수행하나요?", "answer": "`projects.databases.operations.cancel` 메서드는 장기 실행 작업의 비동기 취소를 시작합니다. 서버는 작업을 취소하기 위해 최선을 다하지만, 성공이 보장되지는 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations/cancel?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_cancel_hl=ko.txt"}
{"question": "이 메서드를 사용하여 작업을 취소한 후, 작업이 성공적으로 취소되었는지 어떻게 확인할 수 있나요?", "answer": "클라이언트는 `Operations.GetOperation` 메서드나 다른 방법을 사용하여 취소가 성공했는지 또는 취소에도 불구하고 작업이 완료되었는지 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations/cancel?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_cancel_hl=ko.txt"}
{"question": "`projects.databases.operations.cancel` 메서드의 HTTP 요청 형식은 어떻게 되나요?", "answer": "HTTP 요청 형식은 POST이며, URL은 `https://firestore.googleapis.com/v1/{name=projects/*/databases/*/operations/*}:cancel`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations/cancel?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_cancel_hl=ko.txt"}
{"question": "이 메서드의 요청 본문은 어떤 형식을 가져야 하나요?", "answer": "요청 본문은 비어 있어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations/cancel?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_cancel_hl=ko.txt"}
{"question": "`projects.databases.operations.cancel` 메서드를 호출하기 위해 필요한 권한 범위는 무엇인가요?", "answer": "이 메서드를 호출하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations/cancel?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_cancel_hl=ko.txt"}
{"question": "작업이 성공적으로 취소되면 어떤 응답을 받게 되나요?", "answer": "작업이 성공적으로 취소되면 응답 본문은 빈 JSON 객체입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations/cancel?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_cancel_hl=ko.txt"}
{"question": "서버가 `projects.databases.operations.cancel` 메서드를 지원하지 않는 경우 어떤 응답을 받게 되나요?", "answer": "서버가 이 메서드를 지원하지 않는 경우, `google.rpc.Code.UNIMPLEMENTED`를 반환합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations/cancel?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_cancel_hl=ko.txt"}
{"question": "취소된 작업은 어떻게 처리되나요?", "answer": "취소된 작업은 삭제되지 않고, 대신 `Operation.error` 값이 있는 작업으로 남아 있으며, 이 값의 `google.rpc.Status.code`는 1로 설정되어 `Code.CANCELLED`를 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations/cancel?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_cancel_hl=ko.txt"}
{"question": "`projects.databases.operations.cancel` 메서드의 경로 매개변수는 무엇인가요?", "answer": "경로 매개변수는 `name`으로, 취소할 작업 리소스의 이름을 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations/cancel?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_cancel_hl=ko.txt"}
{"question": "이 메서드의 gRPC 전송 구문은 무엇인가요?", "answer": "이 메서드는 gRPC 전송 구문을 사용하며, 자세한 내용은 Google AIP 문서에서 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations/cancel?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_cancel_hl=ko.txt"}
{"question": "Firestore에서 긴 실행 작업의 상태를 확인하려면 어떤 메서드를 사용해야 하나요?", "answer": "긴 실행 작업의 상태를 확인하려면 `get` 메서드를 사용해야 합니다. 이 메서드는 긴 실행 작업의 최신 상태를 가져옵니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations#get"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_hl=ko.txt"}
{"question": "긴 실행 작업을 취소하려면 어떤 메서드를 사용해야 하나요?", "answer": "긴 실행 작업을 취소하려면 `cancel` 메서드를 사용해야 합니다. 이 메서드는 긴 실행 작업에 대한 비동기 취소를 시작합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations#cancel"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_hl=ko.txt"}
{"question": "긴 실행 작업을 삭제하려면 어떤 메서드를 사용해야 하나요?", "answer": "긴 실행 작업을 삭제하려면 `delete` 메서드를 사용해야 합니다. 이 메서드는 긴 실행 작업을 삭제합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations#delete"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_hl=ko.txt"}
{"question": "긴 실행 작업의 결과는 어떻게 확인하나요?", "answer": "긴 실행 작업의 결과는 `done` 필드를 통해 확인할 수 있습니다. `done`이 true이면 작업이 완료된 것이며, 이 경우 `error` 또는 `response` 필드 중 하나가 설정됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations#resource:-operation"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_hl=ko.txt"}
{"question": "긴 실행 작업의 메타데이터는 어떤 정보를 포함하나요?", "answer": "긴 실행 작업의 메타데이터는 서비스별 메타데이터를 포함하며, 일반적으로 진행 정보와 생성 시간과 같은 공통 메타데이터를 포함합니다. 메타데이터는 `metadata` 필드에 객체 형태로 저장됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations#resource:-operation"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_hl=ko.txt"}
{"question": "긴 실행 작업의 JSON 표현은 어떻게 되나요?", "answer": "긴 실행 작업의 JSON 표현은 다음과 같습니다: ```json { \"name\": \"string\", \"metadata\": { \"@type\": \"string\", \"field1\": ... }, \"done\": boolean, \"error\": { \"object (Status)\" }, \"response\": { \"@type\": \"string\", \"field1\": ... } } ```", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations#resource:-operation"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_hl=ko.txt"}
{"question": "긴 실행 작업의 `name` 필드는 어떤 정보를 담고 있나요?", "answer": "`name` 필드는 서버에서 할당된 이름으로, 원래 반환된 서비스 내에서만 고유합니다. 기본 HTTP 매핑을 사용하는 경우, 이름은 `operations/{unique_id}`로 끝나는 리소스 이름이어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations#resource:-operation"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_hl=ko.txt"}
{"question": "긴 실행 작업의 `result` 필드는 어떤 값을 가질 수 있나요?", "answer": "`result` 필드는 `error` 또는 `response` 중 하나의 값을 가질 수 있습니다. `done`이 false인 경우에는 둘 다 설정되지 않으며, `done`이 true인 경우에는 정확히 하나의 값이 설정됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations#resource:-operation"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_hl=ko.txt"}
{"question": "긴 실행 작업의 `error` 필드는 어떤 정보를 포함하나요?", "answer": "`error` 필드는 작업이 실패하거나 취소된 경우의 오류 결과를 포함합니다. 이 필드는 `object (Status)` 형태로 정의됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations#resource:-operation"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_hl=ko.txt"}
{"question": "긴 실행 작업을 나열하려면 어떤 메서드를 사용해야 하나요?", "answer": "긴 실행 작업을 나열하려면 `list` 메서드를 사용해야 합니다. 이 메서드는 요청에서 지정한 필터와 일치하는 작업을 나열합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations#list"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_hl=ko.txt"}
{"question": "`projects.databases.operations.list` 메서드는 어떤 기능을 수행하나요?", "answer": "`projects.databases.operations.list` 메서드는 요청에서 지정된 필터와 일치하는 작업을 나열합니다. 서버가 이 메서드를 지원하지 않는 경우, UNIMPLEMENTED 오류를 반환합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_list_hl=ko.txt"}
{"question": "`projects.databases.operations.list` 메서드의 HTTP 요청 형식은 무엇인가요?", "answer": "HTTP 요청 형식은 GET이며, URL은 `https://firestore.googleapis.com/v1/{name=projects/*/databases/*}/operations`입니다. 이 URL은 gRPC Transcoding 구문을 사용합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_list_hl=ko.txt"}
{"question": "`projects.databases.operations.list` 메서드에서 사용되는 경로 매개변수는 무엇인가요?", "answer": "경로 매개변수는 `name`이며, 이는 작업의 부모 리소스의 이름을 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_list_hl=ko.txt"}
{"question": "이 메서드에서 사용할 수 있는 쿼리 매개변수는 무엇이 있나요?", "answer": "사용할 수 있는 쿼리 매개변수는 `filter` (표준 목록 필터), `pageSize` (표준 목록 페이지 크기), `pageToken` (표준 목록 페이지 토큰)입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_list_hl=ko.txt"}
{"question": "`projects.databases.operations.list` 메서드의 요청 본문은 어떻게 되나요?", "answer": "요청 본문은 비어 있어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_list_hl=ko.txt"}
{"question": "이 메서드의 성공적인 응답 본문 구조는 어떻게 되나요?", "answer": "성공적인 응답 본문은 `operations` 배열과 `nextPageToken` 문자열을 포함하는 구조입니다. `operations` 배열은 요청에서 지정된 필터와 일치하는 작업 목록을 포함합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_list_hl=ko.txt"}
{"question": "`operations` 필드의 데이터 타입은 무엇인가요?", "answer": "`operations` 필드는 `object (Operation)` 타입의 객체 배열입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_list_hl=ko.txt"}
{"question": "이 메서드를 사용하기 위한 인증 범위는 무엇인가요?", "answer": "이 메서드를 사용하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_list_hl=ko.txt"}
{"question": "`nextPageToken` 필드는 어떤 용도로 사용되나요?", "answer": "`nextPageToken` 필드는 표준 목록 다음 페이지 토큰으로 사용되며, 페이지네이션을 지원합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_list_hl=ko.txt"}
{"question": "이 메서드의 응답 메시지에 대한 자세한 정보는 어디에서 확인할 수 있나요?", "answer": "응답 메시지에 대한 자세한 정보는 [Operations.ListOperations](https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations/list#google.longrunning.Operations.ListOperations) 문서에서 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.operations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.operations_list_hl=ko.txt"}
{"question": "`projects.databases.userCreds.create` 메서드를 호출하기 위한 HTTP 요청 형식은 무엇인가요?", "answer": "`projects.databases.userCreds.create` 메서드를 호출하기 위한 HTTP 요청 형식은 POST이며, URL은 `https://firestore.googleapis.com/v1/{parent=projects/*/databases/*}/userCreds`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.userCreds/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.userCreds_create_hl=ko.txt"}
{"question": "`parent` 파라미터는 무엇이며, 어떤 형식을 가져야 하나요?", "answer": "`parent` 파라미터는 필수이며, 형식은 `projects/{projectId}/databases/{databaseId}`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.userCreds/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.userCreds_create_hl=ko.txt"}
{"question": "`userCredsId` 파라미터의 요구 사항은 무엇인가요?", "answer": "`userCredsId` 파라미터는 필수이며, 4-63자 길이의 문자열이어야 하고, 유효한 문자는 `/[a-z][0-9]-/`입니다. 첫 문자는 문자여야 하고, 마지막 문자는 문자 또는 숫자여야 하며, UUID 형식이 아니어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.userCreds/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.userCreds_create_hl=ko.txt"}
{"question": "요청 본문에 포함해야 하는 내용은 무엇인가요?", "answer": "요청 본문에는 `UserCreds` 인스턴스가 포함되어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.userCreds/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.userCreds_create_hl=ko.txt"}
{"question": "메서드 호출이 성공했을 때의 응답 본문은 어떤 내용을 포함하나요?", "answer": "메서드 호출이 성공하면 응답 본문에는 새로 생성된 `UserCreds` 인스턴스가 포함됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.userCreds/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.userCreds_create_hl=ko.txt"}
{"question": "이 메서드를 호출하기 위해 필요한 OAuth 스코프는 무엇인가요?", "answer": "이 메서드를 호출하기 위해 필요한 OAuth 스코프는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.userCreds/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.userCreds_create_hl=ko.txt"}
{"question": "`UserCreds` 인스턴스의 구조에 대한 정보는 어디에서 찾을 수 있나요?", "answer": "`UserCreds` 인스턴스의 구조에 대한 정보는 [UserCreds 문서](https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.userCreds#UserCreds)에서 찾을 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.userCreds/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.userCreds_create_hl=ko.txt"}
{"question": "`parent` 파라미터의 예시는 무엇인가요?", "answer": "`parent` 파라미터의 예시는 `projects/my-project/databases/(default)`와 같은 형식입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.userCreds/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.userCreds_create_hl=ko.txt"}
{"question": "`userCredsId`의 유효한 문자 범위는 무엇인가요?", "answer": "`userCredsId`의 유효한 문자 범위는 소문자 알파벳(a-z), 숫자(0-9), 하이픈(-)입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.userCreds/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.userCreds_create_hl=ko.txt"}
{"question": "이 메서드에 대한 인증 개요는 어디에서 확인할 수 있나요?", "answer": "이 메서드에 대한 인증 개요는 [인증 개요 문서](https://cloud.google.com/docs/authentication#authorization-gcp)에서 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.userCreds/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.userCreds_create_hl=ko.txt"}
{"question": "`projects.databases.userCreds.get` 메서드는 어떤 HTTP 요청을 사용하나요?", "answer": "`projects.databases.userCreds.get` 메서드는 GET 요청을 사용합니다. 요청 URL은 `https://firestore.googleapis.com/v1/{name=projects/*/databases/*/userCreds/*}` 형식을 따릅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.userCreds/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.userCreds_get_hl=ko.txt"}
{"question": "`projects.databases.userCreds.get` 메서드의 경로 매개변수는 무엇인가요?", "answer": "경로 매개변수는 `name`이며, 형식은 `projects/{projectId}/databases/{databaseId}/userCreds/{userCredsId}`입니다. 이 매개변수는 필수입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.userCreds/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.userCreds_get_hl=ko.txt"}
{"question": "`projects.databases.userCreds.get` 메서드의 요청 본문은 어떻게 되나요?", "answer": "`projects.databases.userCreds.get` 메서드의 요청 본문은 비어 있어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.userCreds/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.userCreds_get_hl=ko.txt"}
{"question": "`projects.databases.userCreds.get` 메서드의 성공적인 응답 본문은 어떤 내용을 포함하나요?", "answer": "성공적인 응답 본문은 `UserCreds` 인스턴스를 포함합니다. 그러나 반환된 리소스는 비밀 값 자체를 포함하지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.userCreds/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.userCreds_get_hl=ko.txt"}
{"question": "`projects.databases.userCreds.get` 메서드를 사용하기 위한 인증 범위는 무엇인가요?", "answer": "이 메서드를 사용하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.userCreds/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.userCreds_get_hl=ko.txt"}
{"question": "`projects.databases.userCreds.get` 메서드의 사용 예시는 무엇인가요?", "answer": "사용 예시는 문서에 명시되어 있지 않지만, 메서드를 호출할 때는 위에서 설명한 HTTP GET 요청을 사용하여 특정 사용자 자격 증명을 가져올 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.userCreds/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.userCreds_get_hl=ko.txt"}
{"question": "`projects.databases.userCreds.get` 메서드의 오류 처리 방법은 무엇인가요?", "answer": "문서에는 오류 처리 방법에 대한 구체적인 내용이 포함되어 있지 않습니다. 일반적으로 API 호출 시 발생할 수 있는 오류는 HTTP 상태 코드로 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.userCreds/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.userCreds_get_hl=ko.txt"}
{"question": "`projects.databases.userCreds.get` 메서드의 응답 형식은 무엇인가요?", "answer": "응답 형식은 JSON이며, 성공적인 경우 `UserCreds` 인스턴스가 포함됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.userCreds/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.userCreds_get_hl=ko.txt"}
{"question": "`projects.databases.userCreds.get` 메서드의 API 버전은 무엇인가요?", "answer": "이 메서드는 Firestore REST API의 v1 버전에서 사용됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.userCreds/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.userCreds_get_hl=ko.txt"}
{"question": "`projects.databases.userCreds.get` 메서드의 gRPC Transcoding에 대한 정보는 어디에서 찾을 수 있나요?", "answer": "gRPC Transcoding에 대한 정보는 [여기](https://google.aip.dev/127)에서 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.userCreds/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases.userCreds_get_hl=ko.txt"}
{"question": "Firestore에서 문서를 대량으로 삭제하는 방법은 무엇인가요?", "answer": "Firestore에서 문서를 대량으로 삭제하려면 `POST https://firestore.googleapis.com/v1/{name=projects/*/databases/*}:bulkDeleteDocuments` 요청을 사용합니다. 요청 본문에는 삭제할 컬렉션 ID와 네임스페이스 ID를 포함할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/bulkDeleteDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_bulkDeleteDocuments_hl=ko.txt"}
{"question": "bulkDeleteDocuments 메서드의 요청 본문 구조는 어떻게 되나요?", "answer": "요청 본문은 다음과 같은 JSON 구조를 가집니다: ```json { \"collectionIds\": [string], \"namespaceIds\": [string] } ``` 여기서 `collectionIds`는 삭제할 컬렉션 그룹의 ID를 포함하며, `namespaceIds`는 삭제할 네임스페이스를 포함합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/bulkDeleteDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_bulkDeleteDocuments_hl=ko.txt"}
{"question": "bulkDeleteDocuments 메서드에서 `collectionIds`와 `namespaceIds`의 역할은 무엇인가요?", "answer": "`collectionIds`는 삭제할 컬렉션 그룹의 ID를 지정하며, 지정하지 않으면 모든 컬렉션 그룹이 삭제됩니다. `namespaceIds`는 삭제할 네임스페이스를 지정하며, 빈 리스트를 사용하면 모든 네임스페이스가 삭제됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/bulkDeleteDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_bulkDeleteDocuments_hl=ko.txt"}
{"question": "bulkDeleteDocuments 요청의 경로 매개변수는 무엇인가요?", "answer": "요청의 경로 매개변수 `name`은 데이터베이스를 지정하며, 형식은 `projects/{projectId}/databases/{databaseId}`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/bulkDeleteDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_bulkDeleteDocuments_hl=ko.txt"}
{"question": "bulkDeleteDocuments 메서드의 성공적인 응답은 어떤 형태인가요?", "answer": "성공적인 응답은 `Operation` 인스턴스를 포함하는 응답 본체를 반환합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/bulkDeleteDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_bulkDeleteDocuments_hl=ko.txt"}
{"question": "bulkDeleteDocuments 메서드를 사용하기 위한 인증 범위는 무엇인가요?", "answer": "이 메서드를 사용하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/bulkDeleteDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_bulkDeleteDocuments_hl=ko.txt"}
{"question": "bulkDeleteDocuments 메서드의 요청이 처리되는 방식은 어떻게 되나요?", "answer": "bulkDeleteDocuments 메서드는 백그라운드에서 처리되며, 요청을 처리하는 동안 생성된 Operation 리소스를 통해 진행 상황을 모니터링하고 관리할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/bulkDeleteDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_bulkDeleteDocuments_hl=ko.txt"}
{"question": "Firestore에서 대량 삭제를 수행할 때 주의해야 할 점은 무엇인가요?", "answer": "대량 삭제 요청이 처리되는 동안, 요청 이후에 생성되거나 업데이트된 문서는 삭제되지 않으므로 이 점을 유의해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/bulkDeleteDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_bulkDeleteDocuments_hl=ko.txt"}
{"question": "Firestore에서 대량 삭제를 수행할 때, 네임스페이스를 지정하지 않으면 어떻게 되나요?", "answer": "네임스페이스를 지정하지 않으면 빈 리스트가 사용되며, 이 경우 모든 네임스페이스에서 문서가 삭제됩니다. 기본 네임스페이스의 경우 빈 문자열 요소를 사용하여 삭제할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/bulkDeleteDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_bulkDeleteDocuments_hl=ko.txt"}
{"question": "bulkDeleteDocuments 메서드의 진행 상황을 어떻게 모니터링하나요?", "answer": "bulkDeleteDocuments 메서드의 진행 상황은 요청을 처리하는 동안 생성된 Operation 리소스를 통해 모니터링할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/bulkDeleteDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_bulkDeleteDocuments_hl=ko.txt"}
{"question": "Firestore에서 데이터베이스를 클론하는 방법은 무엇인가요?", "answer": "Firestore에서 데이터베이스를 클론하려면 `POST https://firestore.googleapis.com/v1/{parent=projects/*}/databases:clone` 요청을 사용합니다. 요청 본문에는 클론할 데이터베이스의 ID, PITR 스냅샷, 선택적 암호화 구성 및 태그를 포함해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/clone?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_clone_hl=ko.txt"}
{"question": "클론할 데이터베이스의 ID는 어떻게 설정하나요?", "answer": "클론할 데이터베이스의 ID는 4-63자여야 하며, 유효한 문자는 /[a-z][0-9]-/입니다. 첫 번째 문자는 문자여야 하고 마지막 문자는 문자 또는 숫자여야 합니다. UUID 형식은 사용할 수 없습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/clone?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_clone_hl=ko.txt"}
{"question": "PITR 스냅샷은 무엇이며 어떻게 사용하나요?", "answer": "PITR 스냅샷은 클론할 데이터베이스의 소스 데이터베이스에서 복제할 데이터를 지정하는 객체입니다. 클론할 데이터베이스는 소스 데이터베이스와 동일한 위치에 생성됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/clone?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_clone_hl=ko.txt"}
{"question": "클론된 데이터베이스의 암호화 구성은 어떻게 설정하나요?", "answer": "클론된 데이터베이스의 암호화 구성은 선택적이며, 지정하지 않으면 클론된 데이터베이스는 소스 데이터베이스와 동일한 암호화 구성을 사용합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/clone?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_clone_hl=ko.txt"}
{"question": "클론된 데이터베이스에 태그를 추가하는 방법은 무엇인가요?", "answer": "클론된 데이터베이스에 태그를 추가하려면 요청 본문에 태그를 키-값 쌍으로 포함해야 합니다. 예를 들어, `{ \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }` 형식으로 제공할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/clone?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_clone_hl=ko.txt"}
{"question": "클론 작업의 진행 상황을 어떻게 추적하나요?", "answer": "클론 작업의 진행 상황은 장기 실행 작업( LRO)을 사용하여 추적할 수 있습니다. LRO의 메타데이터 필드는 `CloneDatabaseMetadata` 형식입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/clone?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_clone_hl=ko.txt"}
{"question": "클론된 데이터베이스는 언제 읽거나 쓸 수 있나요?", "answer": "클론된 데이터베이스는 장기 실행 작업이 완료될 때까지 읽거나 쓸 수 없습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/clone?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_clone_hl=ko.txt"}
{"question": "클론 요청을 보내기 위해 필요한 OAuth 범위는 무엇인가요?", "answer": "클론 요청을 보내기 위해서는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform` 중 하나의 OAuth 범위가 필요합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/clone?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_clone_hl=ko.txt"}
{"question": "클론 요청의 HTTP 메서드는 무엇인가요?", "answer": "클론 요청의 HTTP 메서드는 `POST`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/clone?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_clone_hl=ko.txt"}
{"question": "클론 요청의 응답 본문은 어떤 형식인가요?", "answer": "클론 요청이 성공하면 응답 본문은 `Operation` 인스턴스를 포함합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/clone?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_clone_hl=ko.txt"}
{"question": "Firestore 데이터베이스를 생성하기 위한 HTTP 요청은 어떻게 구성되나요?", "answer": "Firestore 데이터베이스를 생성하기 위한 HTTP 요청은 POST 메서드를 사용하여 다음과 같은 URL로 구성됩니다: `https://firestore.googleapis.com/v1/{parent=projects/*}/databases`. 여기서 `{parent=projects/*}`는 프로젝트 ID를 포함해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_create_hl=ko.txt"}
{"question": "데이터베이스 ID는 어떤 형식이어야 하나요?", "answer": "데이터베이스 ID는 4-63자 길이여야 하며, 유효한 문자는 /[a-z][0-9]-/입니다. 첫 번째 문자는 문자여야 하고, 마지막 문자는 문자 또는 숫자여야 합니다. UUID 형식은 허용되지 않으며, \"(default)\" 데이터베이스 ID도 유효합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_create_hl=ko.txt"}
{"question": "데이터베이스 생성 요청의 본문에는 어떤 정보가 포함되어야 하나요?", "answer": "데이터베이스 생성 요청의 본문에는 Database 인스턴스가 포함되어야 합니다. 이 인스턴스는 Firestore 데이터베이스의 설정을 정의합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_create_hl=ko.txt"}
{"question": "데이터베이스 생성 요청에 필요한 인증 범위는 무엇인가요?", "answer": "데이터베이스 생성 요청을 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_create_hl=ko.txt"}
{"question": "데이터베이스 생성 요청이 성공하면 어떤 응답을 받게 되나요?", "answer": "데이터베이스 생성 요청이 성공하면 응답 본문에는 새로 생성된 Operation 인스턴스가 포함됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_create_hl=ko.txt"}
{"question": "데이터베이스 생성 시 부모 경로는 어떻게 설정하나요?", "answer": "데이터베이스 생성 시 부모 경로는 `projects/{projectId}` 형식으로 설정해야 하며, `{projectId}`는 실제 프로젝트 ID로 대체되어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_create_hl=ko.txt"}
{"question": "데이터베이스 ID에 사용할 수 없는 형식은 무엇인가요?", "answer": "데이터베이스 ID는 UUID 형식인 `/[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}/`와 같은 형식은 사용할 수 없습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_create_hl=ko.txt"}
{"question": "데이터베이스 생성 요청을 위한 HTTP 메서드는 무엇인가요?", "answer": "데이터베이스 생성 요청을 위한 HTTP 메서드는 POST입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_create_hl=ko.txt"}
{"question": "Firestore 데이터베이스를 생성하기 위한 요청의 경로 매개변수는 무엇인가요?", "answer": "Firestore 데이터베이스를 생성하기 위한 요청의 경로 매개변수는 `parent`입니다. 이 매개변수는 필수이며, `projects/{projectId}` 형식이어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_create_hl=ko.txt"}
{"question": "데이터베이스 생성 요청의 응답 본문에 포함된 정보는 무엇인가요?", "answer": "데이터베이스 생성 요청의 응답 본문에는 새로 생성된 Operation 인스턴스가 포함되어 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_create_hl=ko.txt"}
{"question": "Firestore 데이터베이스를 삭제하는 HTTP 요청은 어떻게 구성되나요?", "answer": "Firestore 데이터베이스를 삭제하기 위한 HTTP 요청은 다음과 같이 구성됩니다: `DELETE https://firestore.googleapis.com/v1/{name=projects/*/databases/*}`. 여기서 `{name}`은 `projects/{projectId}/databases/{databaseId}` 형식의 문자열입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_delete_hl=ko.txt"}
{"question": "데이터베이스 삭제 요청 시 필요한 경로 매개변수는 무엇인가요?", "answer": "데이터베이스 삭제 요청 시 필요한 경로 매개변수는 `name`입니다. 이 매개변수는 `projects/{projectId}/databases/{databaseId}` 형식의 문자열로, 필수입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_delete_hl=ko.txt"}
{"question": "데이터베이스 삭제 요청에 사용할 수 있는 쿼리 매개변수는 무엇인가요?", "answer": "데이터베이스 삭제 요청에 사용할 수 있는 쿼리 매개변수는 `etag`입니다. 이 매개변수는 데이터베이스의 현재 etag를 나타내며, 제공된 etag가 현재 데이터베이스의 etag와 일치하지 않으면 삭제가 차단되고 FAILED_PRECONDITION 오류가 반환됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_delete_hl=ko.txt"}
{"question": "데이터베이스 삭제 요청의 본문은 어떻게 구성되나요?", "answer": "데이터베이스 삭제 요청의 본문은 비어 있어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_delete_hl=ko.txt"}
{"question": "데이터베이스 삭제 요청이 성공하면 어떤 응답을 받게 되나요?", "answer": "데이터베이스 삭제 요청이 성공하면 응답 본문에 `Operation` 인스턴스가 포함됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_delete_hl=ko.txt"}
{"question": "데이터베이스 삭제를 위해 필요한 인증 범위는 무엇인가요?", "answer": "데이터베이스 삭제를 위해 필요한 인증 범위는 다음 중 하나입니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_delete_hl=ko.txt"}
{"question": "데이터베이스 삭제 요청에서 etag를 사용하는 이유는 무엇인가요?", "answer": "etag는 데이터베이스의 현재 상태를 확인하는 데 사용됩니다. 제공된 etag가 현재 데이터베이스의 etag와 일치하지 않으면 삭제가 차단되고 FAILED_PRECONDITION 오류가 발생합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_delete_hl=ko.txt"}
{"question": "데이터베이스 삭제 요청을 보내기 전에 확인해야 할 사항은 무엇인가요?", "answer": "데이터베이스 삭제 요청을 보내기 전에 현재 etag를 확인하고, 삭제할 데이터베이스의 이름이 올바른지 확인해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_delete_hl=ko.txt"}
{"question": "데이터베이스 삭제 요청을 위한 인증 방법은 무엇인가요?", "answer": "데이터베이스 삭제 요청을 위한 인증 방법은 OAuth 2.0을 사용하여 필요한 인증 범위를 설정하는 것입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_delete_hl=ko.txt"}
{"question": "Firestore 데이터베이스 삭제와 관련된 추가 정보는 어디에서 찾을 수 있나요?", "answer": "Firestore 데이터베이스 삭제와 관련된 추가 정보는 Firestore REST API 문서에서 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_delete_hl=ko.txt"}
{"question": "Firestore에서 문서를 내보내기 위해 어떤 HTTP 요청을 사용해야 하나요?", "answer": "Firestore에서 문서를 내보내기 위해서는 POST 요청을 사용해야 하며, 요청 URL은 `https://firestore.googleapis.com/v1/{name=projects/*/databases/*}:exportDocuments`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "exportDocuments 메서드의 요청 본문은 어떤 구조를 가져야 하나요?", "answer": "요청 본문은 다음과 같은 JSON 구조를 가져야 합니다: ```json { \"collectionIds\": [string], \"outputUriPrefix\": string, \"namespaceIds\": [string], \"snapshotTime\": string } ```", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "exportDocuments 메서드에서 collectionIds 필드는 어떤 역할을 하나요?", "answer": "`collectionIds` 필드는 내보낼 컬렉션 ID를 지정합니다. 지정하지 않으면 모든 컬렉션이 내보내집니다. 이 리스트의 각 컬렉션 ID는 고유해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "outputUriPrefix 필드는 무엇을 의미하나요?", "answer": "`outputUriPrefix` 필드는 내보낸 데이터의 출력 URI를 의미합니다. 현재는 Google Cloud Storage URI 형식만 지원하며, 형식은 `gs://BUCKET_NAME[/NAMESPACE_PATH]`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "snapshotTime 필드는 어떤 형식으로 제공되어야 하나요?", "answer": "`snapshotTime` 필드는 RFC 3339 형식의 타임스탬프여야 하며, 과거의 시간을 나타내야 합니다. 예를 들어, \"2014-10-02T15:01:23Z\"와 같은 형식입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "exportDocuments 메서드의 응답 본문은 어떤 내용을 포함하나요?", "answer": "exportDocuments 메서드가 성공적으로 실행되면 응답 본문은 Operation 인스턴스를 포함합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "exportDocuments 메서드를 사용할 때 필요한 인증 범위는 무엇인가요?", "answer": "exportDocuments 메서드를 사용하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "exportDocuments 메서드의 진행 상황은 어떻게 모니터링하나요?", "answer": "exportDocuments 메서드는 백그라운드에서 실행되며, 생성된 Operation 리소스를 통해 진행 상황을 모니터링하고 관리할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "exportDocuments 메서드가 완료되기 전에 작업이 취소되면 어떤 일이 발생하나요?", "answer": "exportDocuments 메서드가 완료되기 전에 작업이 취소되면 Google Cloud Storage에 부분적인 데이터가 남을 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "exportDocuments 메서드에서 namespaceIds 필드는 어떤 역할을 하나요?", "answer": "`namespaceIds` 필드는 내보낼 네임스페이스 ID를 지정합니다. 빈 리스트는 모든 네임스페이스를 나타내며, 빈 문자열 요소는 기본 네임스페이스를 나타냅니다. 이 리스트의 각 네임스페이스는 고유해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "Firestore 데이터베이스를 생성하는 방법은 무엇인가요?", "answer": "Firestore 데이터베이스를 생성하려면 `create` 메서드를 사용해야 합니다. 이 메서드는 새로운 데이터베이스를 생성합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases#methods"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_hl=ko.txt"}
{"question": "Firestore 데이터베이스의 정보를 가져오는 방법은 무엇인가요?", "answer": "Firestore 데이터베이스의 정보를 가져오려면 `get` 메서드를 사용해야 합니다. 이 메서드는 특정 데이터베이스에 대한 정보를 반환합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases#methods"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_hl=ko.txt"}
{"question": "Firestore 데이터베이스를 삭제하는 방법은 무엇인가요?", "answer": "Firestore 데이터베이스를 삭제하려면 `delete` 메서드를 사용해야 합니다. 이 메서드는 지정된 데이터베이스를 삭제합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases#methods"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_hl=ko.txt"}
{"question": "Firestore 데이터베이스에서 문서를 대량으로 삭제하는 방법은 무엇인가요?", "answer": "Firestore 데이터베이스에서 문서를 대량으로 삭제하려면 `bulkDeleteDocuments` 메서드를 사용해야 합니다. 이 메서드는 Google Cloud Firestore에서 문서의 하위 집합을 대량으로 삭제합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases#methods"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_hl=ko.txt"}
{"question": "Firestore 데이터베이스의 백업에서 복원하는 방법은 무엇인가요?", "answer": "Firestore 데이터베이스를 백업에서 복원하려면 `restore` 메서드를 사용해야 합니다. 이 메서드는 기존 백업에서 복원하여 새로운 데이터베이스를 생성합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases#methods"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_hl=ko.txt"}
{"question": "Firestore 데이터베이스의 버전 보존 기간은 어떻게 설정되나요?", "answer": "Firestore 데이터베이스의 버전 보존 기간은 `versionRetentionPeriod` 필드에 의해 결정됩니다. PITR(지점 복구) 기능이 활성화된 경우 보존 기간은 7일이며, 그렇지 않은 경우 1시간입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases#resource:-database"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_hl=ko.txt"}
{"question": "Firestore 데이터베이스의 위치는 어떻게 설정하나요?", "answer": "Firestore 데이터베이스의 위치는 `locationId` 필드에 의해 설정됩니다. 사용 가능한 위치는 [여기](https://cloud.google.com/firestore/docs/locations)에서 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases#resource:-database"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_hl=ko.txt"}
{"question": "Firestore 데이터베이스의 동시성 제어 모드는 어떻게 설정하나요?", "answer": "Firestore 데이터베이스의 동시성 제어 모드는 `concurrencyMode` 필드에 의해 설정됩니다. 사용 가능한 모드로는 `OPTIMISTIC`과 `PESSIMISTIC`이 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases#resource:-database"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_hl=ko.txt"}
{"question": "Firestore 데이터베이스에서 문서를 가져오는 방법은 무엇인가요?", "answer": "Firestore 데이터베이스에서 문서를 가져오려면 `importDocuments` 메서드를 사용해야 합니다. 이 메서드는 문서를 Firestore로 가져옵니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases#methods"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_hl=ko.txt"}
{"question": "Firestore 데이터베이스의 태그는 어떻게 설정하나요?", "answer": "Firestore 데이터베이스의 태그는 `tags` 필드를 사용하여 설정할 수 있습니다. 이 필드는 키-값 쌍으로 구성된 객체입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases#resource:-database"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_hl=ko.txt"}
{"question": "Firestore에 문서를 가져오는 방법은 무엇인가요?", "answer": "Firestore에 문서를 가져오려면 `POST` 요청을 사용하여 `https://firestore.googleapis.com/v1/{name=projects/*/databases/*}:importDocuments` 엔드포인트에 요청을 보내야 합니다. 요청 본문에는 `collectionIds`, `inputUriPrefix`, `namespaceIds` 필드를 포함해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "`importDocuments` 메서드의 요청 본문 구조는 어떻게 되나요?", "answer": "요청 본문은 다음과 같은 JSON 구조를 가져야 합니다: ```json { \"collectionIds\": [string], \"inputUriPrefix\": string, \"namespaceIds\": [string] } ```", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "`collectionIds` 필드는 어떤 역할을 하나요?", "answer": "`collectionIds` 필드는 가져올 컬렉션 ID를 지정합니다. 이 필드가 지정되지 않으면 모든 컬렉션이 가져와집니다. 각 컬렉션 ID는 고유해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "`inputUriPrefix` 필드는 무엇을 나타내나요?", "answer": "`inputUriPrefix` 필드는 가져올 파일의 위치를 나타내며, 이는 성공적으로 완료된 `ExportDocumentsResponse`의 `outputUriPrefix`와 일치해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "`namespaceIds` 필드는 어떻게 사용하나요?", "answer": "`namespaceIds` 필드는 가져올 네임스페이스를 지정합니다. 빈 리스트는 모든 네임스페이스를 나타내며, 빈 문자열 요소는 기본 네임스페이스를 나타냅니다. 각 네임스페이스는 고유해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "`importDocuments` 요청이 성공하면 어떤 응답을 받나요?", "answer": "요청이 성공하면 응답 본문에는 `Operation` 인스턴스가 포함됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "`importDocuments` 메서드를 사용할 때 필요한 인증 범위는 무엇인가요?", "answer": "`importDocuments` 메서드를 사용하려면 다음 OAuth 범위 중 하나가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "`importDocuments` 작업의 진행 상황은 어떻게 모니터링하나요?", "answer": "`importDocuments` 작업은 백그라운드에서 진행되며, 생성된 Operation 리소스를 통해 진행 상황을 모니터링하고 관리할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "이미 존재하는 문서가 있을 경우 `importDocuments` 메서드는 어떻게 처리하나요?", "answer": "`importDocuments` 메서드를 사용하면 동일한 이름을 가진 기존 문서가 덮어쓰여집니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "`importDocuments` 작업이 취소되면 어떤 일이 발생하나요?", "answer": "`importDocuments` 작업이 취소되면 일부 데이터가 이미 Cloud Firestore에 가져와졌을 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "Firestore에서 프로젝트의 모든 데이터베이스를 나열하는 방법은 무엇인가요?", "answer": "Firestore에서 프로젝트의 모든 데이터베이스를 나열하려면 HTTP GET 요청을 사용하여 `https://firestore.googleapis.com/v1/{parent=projects/*}/databases` URL에 요청을 보내야 합니다. 여기서 `{parent=projects/*}`는 프로젝트 ID를 포함해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_list_hl=ko.txt"}
{"question": "`projects.databases.list` 메서드의 요청 본문은 어떻게 구성되나요?", "answer": "`projects.databases.list` 메서드의 요청 본문은 비어 있어야 합니다. 즉, 요청 본문을 포함할 필요가 없습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_list_hl=ko.txt"}
{"question": "`showDeleted` 쿼리 매개변수는 어떤 역할을 하나요?", "answer": "`showDeleted` 쿼리 매개변수는 boolean 값으로, true로 설정하면 삭제된 리소스도 반환됩니다. 기본값은 false입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_list_hl=ko.txt"}
{"question": "요청이 성공적으로 처리되었을 때의 응답 구조는 어떻게 되나요?", "answer": "요청이 성공적으로 처리되면 응답 본문은 `{\"databases\": [...], \"unreachable\": [...]}` 형식으로 반환됩니다. `databases` 배열에는 프로젝트의 데이터베이스 객체가 포함되고, `unreachable` 배열에는 개별 데이터베이스에 대한 정보가 나열됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_list_hl=ko.txt"}
{"question": "`unreachable` 필드는 어떤 경우에 사용되나요?", "answer": "`unreachable` 필드는 개별 데이터베이스에 대한 정보를 나열할 수 없는 경우에 사용됩니다. 예를 들어, 데이터베이스가 위치한 클라우드 지역이 현재 사용할 수 없는 경우 이 필드에 해당 정보가 기록됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_list_hl=ko.txt"}
{"question": "이 메서드를 사용하기 위해 필요한 인증 범위는 무엇인가요?", "answer": "`projects.databases.list` 메서드를 사용하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_list_hl=ko.txt"}
{"question": "데이터베이스 정보를 가져오지 못할 경우 어떻게 해야 하나요?", "answer": "데이터베이스 정보를 가져오지 못할 경우, 'Get' 요청을 통해 해당 리소스에 대한 더 자세한 오류 메시지를 얻거나 특정 위치에 대한 'List' 요청을 통해 리소스를 가져올 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_list_hl=ko.txt"}
{"question": "`parent` 경로 매개변수의 형식은 어떻게 되나요?", "answer": "`parent` 경로 매개변수는 `projects/{projectId}` 형식이어야 하며, 여기서 `{projectId}`는 Firebase 프로젝트의 ID를 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_list_hl=ko.txt"}
{"question": "이 API를 호출할 때 어떤 HTTP 메서드를 사용해야 하나요?", "answer": "이 API를 호출할 때는 HTTP GET 메서드를 사용해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_list_hl=ko.txt"}
{"question": "Firestore API의 gRPC Transcoding에 대한 정보는 어디에서 찾을 수 있나요?", "answer": "Firestore API의 gRPC Transcoding에 대한 정보는 [여기](https://google.aip.dev/127)에서 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.list?hl=ko,", "https://google.aip.dev/127"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_list_hl=ko.txt"}
{"question": "`projects.databases.patch` 메서드는 어떤 HTTP 요청을 사용하나요?", "answer": "`projects.databases.patch` 메서드는 PATCH HTTP 요청을 사용합니다. 요청 URL은 `https://firestore.googleapis.com/v1/{database.name=projects/*/databases/*}`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_patch_hl=ko.txt"}
{"question": "`database.name` 파라미터의 형식은 무엇인가요?", "answer": "`database.name` 파라미터는 문자열 형식이며, 리소스 이름은 `projects/{project}/databases/{database}` 형식을 따릅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_patch_hl=ko.txt"}
{"question": "`updateMask` 쿼리 파라미터는 어떤 형식을 사용하나요?", "answer": "`updateMask` 쿼리 파라미터는 FieldMask 형식을 사용하며, 업데이트할 필드의 목록을 포함합니다. 이 목록은 필드의 완전한 이름을 쉼표로 구분하여 나열합니다. 예: `\"user.displayName,photo\"`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_patch_hl=ko.txt"}
{"question": "요청 본문에는 어떤 내용이 포함되어야 하나요?", "answer": "요청 본문에는 `Database` 인스턴스가 포함되어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_patch_hl=ko.txt"}
{"question": "`projects.databases.patch` 메서드가 성공적으로 실행되면 어떤 응답을 받게 되나요?", "answer": "성공적으로 실행되면 응답 본문에는 `Operation` 인스턴스가 포함됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_patch_hl=ko.txt"}
{"question": "이 메서드를 사용하기 위해 필요한 OAuth 스코프는 무엇인가요?", "answer": "이 메서드를 사용하기 위해 필요한 OAuth 스코프는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_patch_hl=ko.txt"}
{"question": "`projects.databases.patch` 메서드의 인증 개요에 대한 정보는 어디에서 찾을 수 있나요?", "answer": "인증 개요에 대한 정보는 [Authentication Overview](https://cloud.google.com/docs/authentication#authorization-gcp)에서 찾을 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_patch_hl=ko.txt"}
{"question": "`projects.databases.patch` 메서드의 요청 URL에서 gRPC Transcoding이란 무엇인가요?", "answer": "요청 URL은 gRPC Transcoding 구문을 사용하며, 자세한 내용은 [gRPC Transcoding](https://google.aip.dev/127)에서 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_patch_hl=ko.txt"}
{"question": "`Database` 인스턴스의 구조에 대한 정보는 어디에서 확인할 수 있나요?", "answer": "`Database` 인스턴스의 구조에 대한 정보는 [Database](https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases#Database) 문서에서 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_patch_hl=ko.txt"}
{"question": "`Operation` 인스턴스의 구조에 대한 정보는 어디에서 확인할 수 있나요?", "answer": "`Operation` 인스턴스의 구조에 대한 정보는 [Operation](https://cloud.google.com/firestore/docs/reference/rest/Shared.Types/Operation) 문서에서 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_patch_hl=ko.txt"}
{"question": "Firestore에서 데이터베이스를 복원하는 방법은 무엇인가요?", "answer": "Firestore에서 데이터베이스를 복원하려면 `projects.databases.restore` 메서드를 사용하여 기존 백업에서 새로운 데이터베이스를 생성해야 합니다. 이 새로운 데이터베이스는 기존 백업과 동일한 클라우드 지역 또는 다중 지역 위치에 있어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/restore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_restore_hl=ko.txt"}
{"question": "`projects.databases.restore` 메서드의 HTTP 요청 형식은 어떻게 되나요?", "answer": "`projects.databases.restore` 메서드는 POST 요청을 사용하며, 요청 URL 형식은 `https://firestore.googleapis.com/v1/{parent=projects/*}/databases:restore`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/restore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_restore_hl=ko.txt"}
{"question": "복원 요청의 필수 파라미터는 무엇인가요?", "answer": "복원 요청의 필수 파라미터는 `databaseId`와 `backup`입니다. `databaseId`는 데이터베이스의 ID로, 4-63자 사이의 문자로 구성되어야 하며, `backup`은 복원할 백업의 경로를 지정해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/restore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_restore_hl=ko.txt"}
{"question": "복원 요청의 JSON 구조는 어떻게 되나요?", "answer": "복원 요청의 JSON 구조는 다음과 같습니다: ```json { \"databaseId\": \"string\", \"backup\": \"string\", \"encryptionConfig\": { \"object (EncryptionConfig)\" }, \"tags\": { \"string\": \"string\", ... } } ```", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/restore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_restore_hl=ko.txt"}
{"question": "`databaseId`의 유효한 형식은 무엇인가요?", "answer": "`databaseId`는 4-63자 사이의 문자로 구성되어야 하며, 유효한 문자는 `/[a-z][0-9]-/`입니다. 첫 문자는 문자여야 하고 마지막 문자는 문자 또는 숫자여야 하며, UUID 형식이 아니어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/restore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_restore_hl=ko.txt"}
{"question": "복원 요청에서 `encryptionConfig`는 무엇을 의미하나요?", "answer": "`encryptionConfig`는 복원된 데이터베이스의 암호화 구성을 지정하는 선택적 필드입니다. 이 필드가 지정되지 않으면 복원된 데이터베이스는 백업과 동일한 암호화 구성을 사용합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/restore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_restore_hl=ko.txt"}
{"question": "복원 요청의 응답 형식은 무엇인가요?", "answer": "복원 요청이 성공하면 응답 본문은 `Operation` 인스턴스를 포함합니다. 이 인스턴스는 복원 작업의 진행 상황을 추적하는 데 사용됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/restore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_restore_hl=ko.txt"}
{"question": "복원 작업의 진행 상황을 추적하는 방법은 무엇인가요?", "answer": "복원 작업의 진행 상황은 `Operation`의 메타데이터 필드를 사용하여 추적할 수 있습니다. 이 메타데이터는 `RestoreDatabaseMetadata` 형식을 가집니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/restore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_restore_hl=ko.txt"}
{"question": "복원된 데이터베이스는 언제 읽거나 쓸 수 있나요?", "answer": "복원된 데이터베이스는 장기 실행 작업(LRO)이 완료될 때까지 읽거나 쓸 수 없습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/restore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_restore_hl=ko.txt"}
{"question": "복원 요청을 수행하기 위한 권한은 무엇인가요?", "answer": "복원 요청을 수행하기 위해서는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform` 중 하나의 OAuth 범위가 필요합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases/restore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.databases_restore_hl=ko.txt"}
{"question": "Firestore에서 백업을 삭제하는 HTTP 요청은 어떻게 구성하나요?", "answer": "Firestore에서 백업을 삭제하기 위해서는 DELETE 요청을 사용하며, 요청 URL은 `https://firestore.googleapis.com/v1/{name=projects/*/locations/*/backups/*}` 형식입니다. 여기서 `{name}`은 삭제할 백업의 이름을 포함해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_delete_hl=ko.txt"}
{"question": "백업 삭제 요청에서 필요한 경로 매개변수는 무엇인가요?", "answer": "백업 삭제 요청에서 필요한 경로 매개변수는 `name`입니다. 이 매개변수는 삭제할 백업의 이름을 포함하며, 형식은 `projects/{project}/locations/{location}/backups/{backup}`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_delete_hl=ko.txt"}
{"question": "백업 삭제 요청의 본문은 어떻게 구성해야 하나요?", "answer": "백업 삭제 요청의 본문은 비어 있어야 합니다. 즉, 요청 본문은 필요하지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_delete_hl=ko.txt"}
{"question": "백업 삭제 요청이 성공했을 때의 응답은 어떤 형식인가요?", "answer": "백업 삭제 요청이 성공하면 응답 본문은 빈 JSON 객체입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_delete_hl=ko.txt"}
{"question": "백업 삭제를 위한 인증 범위는 무엇인가요?", "answer": "백업 삭제를 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_delete_hl=ko.txt"}
{"question": "Firestore 백업 삭제 요청을 보내기 위해 필요한 인증 방법은 무엇인가요?", "answer": "Firestore 백업 삭제 요청을 보내기 위해서는 Google Cloud Platform의 인증 개요에 따라 적절한 인증 방법을 사용해야 합니다. 자세한 내용은 인증 개요 문서를 참조하세요.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_delete_hl=ko.txt"}
{"question": "Firestore에서 백업을 삭제할 때 발생할 수 있는 오류는 무엇인가요?", "answer": "문서에 명시된 오류에 대한 구체적인 내용은 없지만, 일반적으로 인증 오류나 잘못된 백업 이름으로 인한 오류가 발생할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_delete_hl=ko.txt"}
{"question": "백업 삭제 요청을 위한 예제 코드는 어디에서 찾을 수 있나요?", "answer": "문서에는 특정 코드 예시가 제공되지 않으므로, 예제 코드를 찾을 수 없습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_delete_hl=ko.txt"}
{"question": "Firestore 백업 삭제 요청을 위한 클라이언트 라이브러리는 어떤 것이 있나요?", "answer": "문서에는 특정 클라이언트 라이브러리에 대한 정보가 제공되지 않으므로, 관련 정보를 찾을 수 없습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_delete_hl=ko.txt"}
{"question": "Firestore 백업 삭제와 관련된 추가 정보는 어디에서 확인할 수 있나요?", "answer": "Firestore 백업 삭제와 관련된 추가 정보는 Google Cloud Firestore 문서에서 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_delete_hl=ko.txt"}
{"question": "`projects.locations.backups.get` 메서드는 어떤 정보를 가져오나요?", "answer": "`projects.locations.backups.get` 메서드는 백업에 대한 정보를 가져옵니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_get_hl=ko.txt"}
{"question": "`projects.locations.backups.get` 메서드를 호출하기 위한 HTTP 요청 형식은 무엇인가요?", "answer": "HTTP 요청 형식은 GET이며, URL은 `https://firestore.googleapis.com/v1/{name=projects/*/locations/*/backups/*}`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_get_hl=ko.txt"}
{"question": "`projects.locations.backups.get` 메서드의 경로 매개변수는 무엇인가요?", "answer": "경로 매개변수는 `name`이며, 백업을 가져오기 위한 필수 매개변수입니다. 형식은 `projects/{project}/locations/{location}/backups/{backup}`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_get_hl=ko.txt"}
{"question": "`projects.locations.backups.get` 메서드의 요청 본문은 어떻게 되나요?", "answer": "요청 본문은 비어 있어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_get_hl=ko.txt"}
{"question": "`projects.locations.backups.get` 메서드를 호출하기 위한 권한 범위는 무엇인가요?", "answer": "필요한 OAuth 권한 범위는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_get_hl=ko.txt"}
{"question": "`projects.locations.backups.get` 메서드의 성공적인 응답 본문에는 어떤 정보가 포함되나요?", "answer": "성공적인 응답 본문에는 `Backup` 인스턴스가 포함됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_get_hl=ko.txt"}
{"question": "`projects.locations.backups.get` 메서드의 사용 예시는 무엇인가요?", "answer": "사용 예시는 `GET https://firestore.googleapis.com/v1/projects/my-project/locations/us-central1/backups/my-backup`와 같이 요청을 보내는 것입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_get_hl=ko.txt"}
{"question": "`projects.locations.backups.get` 메서드의 응답 형식은 무엇인가요?", "answer": "응답 형식은 JSON이며, `Backup` 객체의 속성을 포함합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_get_hl=ko.txt"}
{"question": "`projects.locations.backups.get` 메서드를 사용하기 위한 인증 방법은 무엇인가요?", "answer": "인증 방법은 Google Cloud의 인증 개요를 참조하여 OAuth 2.0을 사용해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_get_hl=ko.txt"}
{"question": "`projects.locations.backups.get` 메서드의 gRPC Transcoding에 대한 정보는 어디에서 확인할 수 있나요?", "answer": "gRPC Transcoding에 대한 정보는 [여기](https://google.aip.dev/127)에서 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_get_hl=ko.txt"}
{"question": "`projects.locations.backups.list` 메서드를 사용하여 백업을 나열하는 방법은 무엇인가요?", "answer": "`projects.locations.backups.list` 메서드를 사용하려면 HTTP GET 요청을 다음 URL로 전송해야 합니다: `https://firestore.googleapis.com/v1/{parent=projects/*/locations/*}/backups`. 여기서 `parent`는 필수 매개변수로, 백업을 나열할 위치를 지정합니다. 형식은 `projects/{project}/locations/{location}`입니다. `{location}`에 `'-'`를 사용하면 주어진 프로젝트의 모든 위치에서 백업을 나열할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_list_hl=ko.txt"}
{"question": "`projects.locations.backups.list` 메서드의 요청 본문은 어떻게 구성되나요?", "answer": "`projects.locations.backups.list` 메서드의 요청 본문은 비어 있어야 합니다. 요청 본문에 데이터가 포함될 필요는 없습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_list_hl=ko.txt"}
{"question": "백업 목록을 필터링하는 방법은 무엇인가요?", "answer": "백업 목록을 필터링하려면 `filter` 쿼리 매개변수를 사용할 수 있습니다. 필터 표현식은 필드 이름, 비교 연산자, 필터링할 값을 포함해야 하며, 지원되는 비교 연산자는 `<`, `>`, `<=`, `>=`, `!=`, `=` 또는 `:`입니다. 필터링할 수 있는 필드는 `databaseUid`입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_list_hl=ko.txt"}
{"question": "`projects.locations.backups.list` 메서드의 응답 본문 구조는 어떻게 되나요?", "answer": "성공적인 응답 본문은 다음과 같은 구조를 가집니다: `{ \"backups\": [ { object (Backup) } ], \"unreachable\": [ string ] }`. 여기서 `backups`는 프로젝트의 모든 백업 목록을 포함하고, `unreachable`은 백업을 가져올 수 없는 위치의 목록을 포함합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_list_hl=ko.txt"}
{"question": "요청이 실패했을 때의 응답은 어떻게 처리되나요?", "answer": "요청이 실패하더라도 일부 결과 세트를 반환하며, `unreachable` 필드에 접근할 수 없는 위치의 목록이 포함됩니다. 이를 통해 요청을 특정 위치에 대해 다시 시도하여 구체적인 오류를 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_list_hl=ko.txt"}
{"question": "`projects.locations.backups.list` 메서드를 호출하기 위한 인증 범위는 무엇인가요?", "answer": "이 메서드를 호출하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_list_hl=ko.txt"}
{"question": "`filter` 쿼리 매개변수에서 지원되는 비교 연산자는 무엇인가요?", "answer": "`filter` 쿼리 매개변수에서 지원되는 비교 연산자는 `<`, `>`, `<=`, `>=`, `!=`, `=` 및 `:`입니다. 이 중 `:`는 포함 연산자입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_list_hl=ko.txt"}
{"question": "백업 목록을 특정 위치에서만 나열하려면 어떻게 해야 하나요?", "answer": "특정 위치에서만 백업 목록을 나열하려면 `parent` 매개변수에 해당 위치를 지정하여 요청을 보내면 됩니다. 예를 들어, `projects/{project}/locations/{specific-location}` 형식으로 지정합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_list_hl=ko.txt"}
{"question": "`projects.locations.backups.list` 메서드의 응답에서 `backups` 필드는 어떤 정보를 포함하나요?", "answer": "`backups` 필드는 프로젝트의 모든 백업에 대한 정보를 포함하는 객체 배열입니다. 각 객체는 백업에 대한 세부 정보를 담고 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_list_hl=ko.txt"}
{"question": "`projects.locations.backups.list` 메서드를 사용하여 모든 위치의 백업을 나열하려면 어떻게 해야 하나요?", "answer": "모든 위치의 백업을 나열하려면 `parent` 매개변수에 `projects/{project}/locations/-` 형식으로 요청을 보내면 됩니다. 이렇게 하면 주어진 프로젝트의 모든 위치에서 백업을 나열할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations.backups/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations.backups_list_hl=ko.txt"}
{"question": "`projects.locations.list` 메서드를 호출하기 위한 HTTP 요청 형식은 무엇인가요?", "answer": "`projects.locations.list` 메서드를 호출하기 위한 HTTP 요청 형식은 다음과 같습니다: `GET https://firestore.googleapis.com/v1/{name=projects/*}/locations`. 이 URL은 gRPC Transcoding 구문을 사용합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations_list_hl=ko.txt"}
{"question": "`projects.locations.list` 메서드에서 사용할 수 있는 경로 매개변수는 무엇인가요?", "answer": "`projects.locations.list` 메서드에서 사용할 수 있는 경로 매개변수는 `name`입니다. 이 매개변수는 위치 컬렉션을 소유하는 리소스를 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations_list_hl=ko.txt"}
{"question": "`projects.locations.list` 메서드에서 사용할 수 있는 쿼리 매개변수는 어떤 것들이 있나요?", "answer": "`projects.locations.list` 메서드에서 사용할 수 있는 쿼리 매개변수는 다음과 같습니다: `filter`, `pageSize`, `pageToken`, `extraLocationTypes[]`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations_list_hl=ko.txt"}
{"question": "`filter` 쿼리 매개변수의 사용 예시는 무엇인가요?", "answer": "`filter` 쿼리 매개변수는 결과를 선호하는 하위 집합으로 좁히기 위해 사용됩니다. 예를 들어, \"displayName=tokyo\"와 같은 문자열을 사용할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations_list_hl=ko.txt"}
{"question": "`pageSize` 쿼리 매개변수의 역할은 무엇인가요?", "answer": "`pageSize` 쿼리 매개변수는 반환할 최대 결과 수를 설정하는 역할을 합니다. 설정하지 않으면 서비스가 기본값을 선택합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations_list_hl=ko.txt"}
{"question": "`nextPageToken`의 용도는 무엇인가요?", "answer": "`nextPageToken`은 응답의 `nextPageToken` 필드에서 받은 페이지 토큰을 전송하여 다음 페이지를 수신하는 데 사용됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations_list_hl=ko.txt"}
{"question": "`projects.locations.list` 메서드의 요청 본문은 어떻게 되나요?", "answer": "`projects.locations.list` 메서드의 요청 본문은 비어 있어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations_list_hl=ko.txt"}
{"question": "`projects.locations.list` 메서드의 성공적인 응답 구조는 어떻게 되나요?", "answer": "성공적인 응답 구조는 다음과 같습니다: `{ \"locations\": [ { object (Location) } ], \"nextPageToken\": string }`. 여기서 `locations`는 요청에서 지정한 필터와 일치하는 위치 목록입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations_list_hl=ko.txt"}
{"question": "`projects.locations.list` 메서드를 호출하기 위한 인증 범위는 무엇인가요?", "answer": "`projects.locations.list` 메서드를 호출하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations_list_hl=ko.txt"}
{"question": "`projects.locations.list` 메서드의 응답에서 `locations` 필드는 어떤 정보를 포함하나요?", "answer": "`locations` 필드는 요청에서 지정한 필터와 일치하는 위치 목록을 포함합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/projects.locations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_projects.locations_list_hl=ko.txt"}
{"question": "Firestore에서 StructuredQuery를 사용하여 특정 필드만 반환하려면 어떻게 해야 하나요?", "answer": "StructuredQuery에서 `select` 필드를 사용하여 반환할 필드의 하위 집합을 지정할 수 있습니다. 예를 들어, 특정 필드만 반환하려면 `select` 객체를 사용하여 `fields` 배열에 원하는 필드를 추가하면 됩니다. 만약 필드를 지정하지 않으면 모든 필드가 반환됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/StructuredQuery#projection"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_StructuredQuery_hl=ko.txt"}
{"question": "Firestore에서 쿼리를 수행할 때 필터를 어떻게 설정하나요?", "answer": "Firestore에서 쿼리를 수행할 때 `where` 필드를 사용하여 필터를 설정할 수 있습니다. `where` 필드는 `Filter` 객체를 포함하며, 이 객체는 `compositeFilter`, `fieldFilter`, 또는 `unaryFilter` 중 하나를 사용할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/StructuredQuery#filter"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_StructuredQuery_hl=ko.txt"}
{"question": "Firestore 쿼리에서 결과를 정렬하려면 어떻게 해야 하나요?", "answer": "Firestore 쿼리에서 결과를 정렬하려면 `orderBy` 필드를 사용하여 정렬할 필드를 지정할 수 있습니다. `orderBy`는 정렬할 필드와 방향(오름차순 또는 내림차순)을 포함하는 객체 배열입니다. 기본적으로 방향은 오름차순입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/StructuredQuery#order"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_StructuredQuery_hl=ko.txt"}
{"question": "Firestore 쿼리에서 특정 문서 수를 건너뛰려면 어떻게 하나요?", "answer": "Firestore 쿼리에서 특정 문서 수를 건너뛰려면 `offset` 필드를 사용하여 건너뛸 문서 수를 지정할 수 있습니다. `offset` 값은 0 이상이어야 하며, 쿼리 결과에서 첫 번째 결과를 반환하기 전에 지정된 수만큼의 문서를 건너뜁니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/StructuredQuery#offset"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_StructuredQuery_hl=ko.txt"}
{"question": "Firestore에서 쿼리 결과의 최대 수를 제한하려면 어떻게 하나요?", "answer": "Firestore에서 쿼리 결과의 최대 수를 제한하려면 `limit` 필드를 사용하여 반환할 최대 문서 수를 지정할 수 있습니다. `limit` 값은 0 이상이어야 하며, 모든 다른 제약 조건이 적용된 후에 결과에 적용됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/StructuredQuery#limit"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_StructuredQuery_hl=ko.txt"}
{"question": "Firestore에서 다중 필터를 결합하려면 어떻게 해야 하나요?", "answer": "Firestore에서 다중 필터를 결합하려면 `CompositeFilter`를 사용하여 여러 필터를 결합할 수 있습니다. `CompositeFilter`는 `op` 필드로 결합할 연산자(예: AND, OR)를 지정하고, `filters` 배열에 결합할 필터를 추가합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/StructuredQuery#compositefilter"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_StructuredQuery_hl=ko.txt"}
{"question": "Firestore에서 특정 필드의 값이 특정 값과 같지 않은 문서를 필터링하려면 어떻게 하나요?", "answer": "Firestore에서 특정 필드의 값이 특정 값과 같지 않은 문서를 필터링하려면 `FieldFilter`를 사용하여 `op` 필드에 `NOT_EQUAL` 연산자를 지정하고, `value` 필드에 비교할 값을 설정하면 됩니다. 이 필드는 `orderBy`에서 먼저 나와야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/StructuredQuery#fieldfilter"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_StructuredQuery_hl=ko.txt"}
{"question": "Firestore에서 쿼리의 시작 위치를 지정하려면 어떻게 하나요?", "answer": "Firestore에서 쿼리의 시작 위치를 지정하려면 `startAt` 필드를 사용하여 쿼리 결과의 시작 위치를 설정할 수 있습니다. `startAt`은 `Cursor` 객체를 포함하며, 이 객체는 쿼리의 `ORDER BY` 절에 기반하여 위치를 지정합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/StructuredQuery#startat"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_StructuredQuery_hl=ko.txt"}
{"question": "Firestore에서 쿼리의 종료 위치를 지정하려면 어떻게 하나요?", "answer": "Firestore에서 쿼리의 종료 위치를 지정하려면 `endAt` 필드를 사용하여 쿼리 결과의 종료 위치를 설정할 수 있습니다. `endAt`은 `Cursor` 객체를 포함하며, 이 객체는 쿼리의 `ORDER BY` 절에 기반하여 위치를 지정합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/StructuredQuery#endat"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_StructuredQuery_hl=ko.txt"}
{"question": "Firestore에서 최근접 이웃 검색을 수행하려면 어떻게 해야 하나요?", "answer": "Firestore에서 최근접 이웃 검색을 수행하려면 `findNearest` 필드를 사용하여 검색할 벡터 필드, 쿼리 벡터, 거리 측정 방법 등을 설정할 수 있습니다. `findNearest`는 최근접 이웃 검색을 위한 구성 옵션을 포함합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/StructuredQuery#findnearest"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_StructuredQuery_hl=ko.txt"}
{"question": "Firestore에서 트랜잭션을 생성할 때 사용할 수 있는 모드는 무엇인가요?", "answer": "Firestore에서 트랜잭션을 생성할 때 사용할 수 있는 모드는 \"readOnly\"와 \"readWrite\"입니다. \"readOnly\"는 오직 읽기 작업만 수행할 수 있는 트랜잭션을 의미하고, \"readWrite\"는 읽기와 쓰기 작업 모두 수행할 수 있는 트랜잭션을 의미합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/TransactionOptions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_TransactionOptions_hl=ko.txt"}
{"question": "\"readOnly\" 트랜잭션의 일관성 모드는 어떻게 설정하나요?", "answer": "\"readOnly\" 트랜잭션의 일관성 모드는 \"consistency_selector\" 필드를 통해 설정할 수 있습니다. 기본값은 강한 일관성이며, \"readTime\"을 사용하여 특정 시간에 문서를 읽을 수 있습니다. 이 시간은 최근 1시간 이내의 마이크로초 정밀 타임스탬프여야 하며, Point-in-Time Recovery가 활성화된 경우 최근 7일 이내의 정각 타임스탬프도 사용할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/TransactionOptions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_TransactionOptions_hl=ko.txt"}
{"question": "\"readTime\" 필드의 타임스탬프 형식은 어떻게 되나요?", "answer": "\"readTime\" 필드의 타임스탬프 형식은 RFC 3339를 따르며, 항상 Z-normalized로 생성됩니다. 예를 들어 \"2014-10-02T15:01:23Z\", \"2014-10-02T15:01:23.045123456Z\" 또는 \"2014-10-02T15:01:23+05:30\"와 같은 형식을 사용할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/TransactionOptions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_TransactionOptions_hl=ko.txt"}
{"question": "\"readWrite\" 트랜잭션에서 사용할 수 있는 추가 필드는 무엇인가요?", "answer": "\"readWrite\" 트랜잭션에서 사용할 수 있는 추가 필드는 \"retryTransaction\"입니다. 이 필드는 선택적이며, 재시도할 트랜잭션을 나타내는 base64로 인코딩된 문자열입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/TransactionOptions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_TransactionOptions_hl=ko.txt"}
{"question": "Firestore에서 \"readWrite\" 트랜잭션을 생성할 때 주의해야 할 점은 무엇인가요?", "answer": "Firestore에서는 3rd party 인증 요청이 \"readWrite\" 트랜잭션을 생성하는 것을 허용하지 않습니다. 따라서 이러한 트랜잭션을 생성할 때는 인증 요청이 3rd party가 아닌지 확인해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/TransactionOptions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_TransactionOptions_hl=ko.txt"}
{"question": "\"readOnly\" 트랜잭션의 JSON 표현은 어떻게 되나요?", "answer": "\"readOnly\" 트랜잭션의 JSON 표현은 다음과 같습니다: ```json { \"readOnly\": {} } ```", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/TransactionOptions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_TransactionOptions_hl=ko.txt"}
{"question": "\"readWrite\" 트랜잭션의 JSON 표현은 어떻게 되나요?", "answer": "\"readWrite\" 트랜잭션의 JSON 표현은 다음과 같습니다: ```json { \"readWrite\": { \"retryTransaction\": \"base64-encoded-string\" } } ```", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/TransactionOptions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_TransactionOptions_hl=ko.txt"}
{"question": "\"readOnly\" 트랜잭션의 기본 일관성 모드는 무엇인가요?", "answer": "\"readOnly\" 트랜잭션의 기본 일관성 모드는 강한 일관성(strong consistency)입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/TransactionOptions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_TransactionOptions_hl=ko.txt"}
{"question": "\"retryTransaction\" 필드는 어떤 형식을 가져야 하나요?", "answer": "\"retryTransaction\" 필드는 base64로 인코딩된 문자열 형식을 가져야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/TransactionOptions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_TransactionOptions_hl=ko.txt"}
{"question": "Firestore에서 트랜잭션을 사용할 때의 주요 목적은 무엇인가요?", "answer": "Firestore에서 트랜잭션을 사용할 때의 주요 목적은 여러 문서에 대한 읽기 및 쓰기 작업을 원자적으로 수행하여 데이터의 일관성을 보장하는 것입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/TransactionOptions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_TransactionOptions_hl=ko.txt"}
{"question": "Firestore에서 문서를 업데이트할 때 `updateMask`는 무엇인가요?", "answer": "`updateMask`는 이 쓰기 작업에서 업데이트할 필드를 지정하는 객체입니다. 이 필드는 업데이트 작업일 때만 설정할 수 있으며, 마스크가 설정되지 않으면 기존 데이터가 덮어씌워집니다. 마스크가 설정된 경우 서버의 문서에 마스크에 포함되지 않은 필드는 변경되지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_Write_hl=ko.txt"}
{"question": "Firestore에서 문서를 삭제하는 방법은 무엇인가요?", "answer": "문서를 삭제하려면 `delete` 필드를 사용하여 삭제할 문서의 이름을 지정합니다. 문서 이름은 `projects/{projectId}/databases/{databaseId}/documents/{document_path}` 형식이어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_Write_hl=ko.txt"}
{"question": "`updateTransforms` 필드는 어떤 역할을 하나요?", "answer": "`updateTransforms` 필드는 업데이트 후에 수행할 변환을 지정하는 객체 배열입니다. 이 필드는 업데이트 작업일 때만 설정할 수 있으며, 이 쓰기는 문서에 대한 업데이트와 변환을 원자적으로 순서대로 수행하는 것과 같습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_Write_hl=ko.txt"}
{"question": "`currentDocument` 필드는 어떤 용도로 사용되나요?", "answer": "`currentDocument` 필드는 문서에 대한 선택적 전제 조건을 설정하는 데 사용됩니다. 이 필드가 설정되면, 해당 조건이 충족되지 않으면 쓰기 작업이 실패합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_Write_hl=ko.txt"}
{"question": "`FieldTransform`의 `increment` 변환은 어떻게 작동하나요?", "answer": "`increment` 변환은 주어진 값을 필드의 현재 값에 더합니다. 이 값은 정수 또는 실수여야 하며, 필드가 존재하지 않거나 정수 또는 실수가 아닐 경우, 필드는 주어진 값으로 설정됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_Write_hl=ko.txt"}
{"question": "`DocumentTransform`의 구조는 어떻게 되나요?", "answer": "`DocumentTransform`은 변환할 문서의 이름과 적용할 필드 변환의 목록을 포함하는 객체입니다. 이 목록은 비어 있지 않아야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_Write_hl=ko.txt"}
{"question": "`appendMissingElements` 변환은 어떤 기능을 하나요?", "answer": "`appendMissingElements` 변환은 현재 필드 값에 없는 요소를 순서대로 추가합니다. 필드가 배열이 아니거나 존재하지 않을 경우, 필드는 먼저 빈 배열로 설정됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_Write_hl=ko.txt"}
{"question": "`removeAllFromArray` 변환의 작동 방식은 무엇인가요?", "answer": "`removeAllFromArray` 변환은 필드의 배열에서 주어진 모든 요소를 제거합니다. 필드가 배열이 아니거나 존재하지 않을 경우, 필드는 빈 배열로 설정됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_Write_hl=ko.txt"}
{"question": "`setToServerValue` 변환은 무엇을 의미하나요?", "answer": "`setToServerValue` 변환은 필드를 주어진 서버 값으로 설정합니다. 이 값은 서버에서 계산된 값으로, 예를 들어 요청이 처리된 시간과 같은 값을 사용할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_Write_hl=ko.txt"}
{"question": "Firestore에서 문서의 최대값을 설정하는 방법은 무엇인가요?", "answer": "`maximum` 변환을 사용하여 필드를 현재 값과 주어진 값 중 최대값으로 설정할 수 있습니다. 이 값은 정수 또는 실수여야 하며, 필드가 존재하지 않거나 정수 또는 실수가 아닐 경우, 필드는 주어진 값으로 설정됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rest/v1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rest_v1_Write_hl=ko.txt"}
{"question": "Firestore에서 인덱스를 생성하는 방법은 무엇인가요?", "answer": "Firestore에서 인덱스를 생성하려면 `CreateIndex` 메서드를 사용합니다. 이 메서드는 `CreateIndexRequest`를 인자로 받아들이며, 인덱스의 초기 상태는 CREATING입니다. 인덱스가 성공적으로 생성되면 상태가 READY로 변경됩니다. 이미 존재하는 인덱스를 생성하려고 하면 ALREADY_EXISTS 상태가 반환됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1beta1#google.firestore.admin.v1beta1.FirestoreAdmin.CreateIndex"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1beta1_hl=ko.txt"}
{"question": "Firestore에서 인덱스를 삭제하는 방법은 무엇인가요?", "answer": "Firestore에서 인덱스를 삭제하려면 `DeleteIndex` 메서드를 사용합니다. 이 메서드는 `DeleteIndexRequest`를 인자로 받아들이며, 삭제할 인덱스의 이름을 포함해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1beta1#google.firestore.admin.v1beta1.FirestoreAdmin.DeleteIndex"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1beta1_hl=ko.txt"}
{"question": "Firestore에서 문서를 내보내는 방법은 무엇인가요?", "answer": "Firestore에서 문서를 내보내려면 `ExportDocuments` 메서드를 사용합니다. 이 메서드는 `ExportDocumentsRequest`를 인자로 받아들이며, 내보낼 데이터베이스와 컬렉션 ID, 출력 URI를 지정해야 합니다. 내보내기 작업은 백그라운드에서 진행되며, 진행 상황은 생성된 Operation 리소스를 통해 모니터링할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1beta1#google.firestore.admin.v1beta1.FirestoreAdmin.ExportDocuments"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1beta1_hl=ko.txt"}
{"question": "Firestore에서 문서를 가져오는 방법은 무엇인가요?", "answer": "Firestore에서 문서를 가져오려면 `ImportDocuments` 메서드를 사용합니다. 이 메서드는 `ImportDocumentsRequest`를 인자로 받아들이며, 가져올 데이터베이스와 컬렉션 ID, 입력 URI를 지정해야 합니다. 가져오기 작업은 백그라운드에서 진행되며, 진행 상황은 생성된 Operation 리소스를 통해 모니터링할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1beta1#google.firestore.admin.v1beta1.FirestoreAdmin.ImportDocuments"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1beta1_hl=ko.txt"}
{"question": "Firestore에서 인덱스의 상태를 확인하는 방법은 무엇인가요?", "answer": "Firestore에서 인덱스의 상태를 확인하려면 `GetIndex` 메서드를 사용합니다. 이 메서드는 `GetIndexRequest`를 인자로 받아들이며, 확인할 인덱스의 이름을 포함해야 합니다. 이 메서드는 인덱스의 현재 상태를 반환합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1beta1#google.firestore.admin.v1beta1.FirestoreAdmin.GetIndex"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1beta1_hl=ko.txt"}
{"question": "Firestore에서 인덱스 목록을 가져오는 방법은 무엇인가요?", "answer": "Firestore에서 인덱스 목록을 가져오려면 `ListIndexes` 메서드를 사용합니다. 이 메서드는 `ListIndexesRequest`를 인자로 받아들이며, 데이터베이스 이름과 필터, 페이지 크기 등을 지정할 수 있습니다. 이 메서드는 인덱스 목록을 포함하는 `ListIndexesResponse`를 반환합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1beta1#google.firestore.admin.v1beta1.FirestoreAdmin.ListIndexes"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1beta1_hl=ko.txt"}
{"question": "Firestore에서 인덱스 생성 중 오류가 발생했을 때 어떻게 해결하나요?", "answer": "인덱스 생성 중 오류가 발생하면 인덱스는 ERROR 상태로 전환됩니다. 이 경우, 오류를 유발한 데이터를 수정한 후 인덱스를 삭제하고 다시 생성해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1beta1#google.firestore.admin.v1beta1.FirestoreAdmin.CreateIndex"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1beta1_hl=ko.txt"}
{"question": "Firestore에서 내보내기 작업의 진행 상황을 확인하는 방법은 무엇인가요?", "answer": "Firestore에서 내보내기 작업의 진행 상황은 `ExportDocumentsMetadata`를 통해 확인할 수 있습니다. 이 메타데이터는 작업의 시작 시간, 종료 시간, 진행 상태, 처리된 문서 수 등의 정보를 포함합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1beta1#google.firestore.admin.v1beta1.ExportDocumentsMetadata"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1beta1_hl=ko.txt"}
{"question": "Firestore에서 가져오기 작업의 진행 상황을 확인하는 방법은 무엇인가요?", "answer": "Firestore에서 가져오기 작업의 진행 상황은 `ImportDocumentsMetadata`를 통해 확인할 수 있습니다. 이 메타데이터는 작업의 시작 시간, 종료 시간, 진행 상태, 처리된 문서 수 등의 정보를 포함합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1beta1#google.firestore.admin.v1beta1.ImportDocumentsMetadata"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1beta1_hl=ko.txt"}
{"question": "Firestore에서 인덱스 필드의 모드는 무엇인가요?", "answer": "Firestore에서 인덱스 필드의 모드는 인덱스가 어떻게 구성되는지를 정의합니다. 모드는 ASCENDING, DESCENDING, ARRAY_CONTAINS로 설정할 수 있으며, 각각의 모드는 필드 값의 순서 및 쿼리 지원 방식에 영향을 미칩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1beta1#google.firestore.admin.v1beta1.IndexField.Mode"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1beta1_hl=ko.txt"}
{"question": "Firestore에서 복합 인덱스를 생성하는 방법은 무엇인가요?", "answer": "복합 인덱스를 생성하려면 `CreateIndex` 메서드를 사용합니다. 이 메서드는 `CreateIndexRequest`를 인자로 받아들이며, 성공적으로 호출되면 `google.longrunning.Operation`을 반환합니다. 이 작업의 메타데이터는 `IndexOperationMetadata` 타입입니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1beta2#google.firestore.admin.v1beta2.FirestoreAdmin.CreateIndex"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1beta2_hl=ko.txt"}
{"question": "Firestore에서 인덱스를 삭제하는 방법은 무엇인가요?", "answer": "인덱스를 삭제하려면 `DeleteIndex` 메서드를 사용합니다. 이 메서드는 `DeleteIndexRequest`를 인자로 받아들이며, 성공적으로 호출되면 빈 응답을 반환합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1beta2#google.firestore.admin.v1beta2.FirestoreAdmin.DeleteIndex"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1beta2_hl=ko.txt"}
{"question": "Firestore에서 문서를 내보내는 방법은 무엇인가요?", "answer": "문서를 내보내려면 `ExportDocuments` 메서드를 사용합니다. 이 메서드는 `ExportDocumentsRequest`를 인자로 받아들이며, 성공적으로 호출되면 `google.longrunning.Operation`을 반환합니다. 내보내기 작업의 진행 상황은 생성된 Operation 리소스를 통해 모니터링할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1beta2#google.firestore.admin.v1beta2.FirestoreAdmin.ExportDocuments"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1beta2_hl=ko.txt"}
{"question": "Firestore에서 필드의 메타데이터를 가져오는 방법은 무엇인가요?", "answer": "필드의 메타데이터를 가져오려면 `GetField` 메서드를 사용합니다. 이 메서드는 `GetFieldRequest`를 인자로 받아들이며, 성공적으로 호출되면 `Field` 객체를 반환합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1beta2#google.firestore.admin.v1beta2.FirestoreAdmin.GetField"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1beta2_hl=ko.txt"}
{"question": "Firestore에서 문서를 가져오는 방법은 무엇인가요?", "answer": "문서를 가져오려면 `ImportDocuments` 메서드를 사용합니다. 이 메서드는 `ImportDocumentsRequest`를 인자로 받아들이며, 성공적으로 호출되면 `google.longrunning.Operation`을 반환합니다. 이 작업의 진행 상황은 생성된 Operation 리소스를 통해 모니터링할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1beta2#google.firestore.admin.v1beta2.FirestoreAdmin.ImportDocuments"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1beta2_hl=ko.txt"}
{"question": "Firestore에서 필드 구성을 업데이트하는 방법은 무엇인가요?", "answer": "필드 구성을 업데이트하려면 `UpdateField` 메서드를 사용합니다. 이 메서드는 `UpdateFieldRequest`를 인자로 받아들이며, 성공적으로 호출되면 `google.longrunning.Operation`을 반환합니다. 업데이트할 필드의 마스크를 지정하여 변경할 구성만 업데이트할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1beta2#google.firestore.admin.v1beta2.FirestoreAdmin.UpdateField"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1beta2_hl=ko.txt"}
{"question": "Firestore에서 필드 목록을 가져오는 방법은 무엇인가요?", "answer": "필드 목록을 가져오려면 `ListFields` 메서드를 사용합니다. 이 메서드는 `ListFieldsRequest`를 인자로 받아들이며, 성공적으로 호출되면 `ListFieldsResponse`를 반환합니다. 이 응답에는 요청된 필드 목록이 포함됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1beta2#google.firestore.admin.v1beta2.FirestoreAdmin.ListFields"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1beta2_hl=ko.txt"}
{"question": "Firestore에서 인덱스 목록을 가져오는 방법은 무엇인가요?", "answer": "인덱스 목록을 가져오려면 `ListIndexes` 메서드를 사용합니다. 이 메서드는 `ListIndexesRequest`를 인자로 받아들이며, 성공적으로 호출되면 `ListIndexesResponse`를 반환합니다. 이 응답에는 요청된 인덱스 목록이 포함됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1beta2#google.firestore.admin.v1beta2.FirestoreAdmin.ListIndexes"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1beta2_hl=ko.txt"}
{"question": "Firestore에서 인덱스의 상태를 확인하는 방법은 무엇인가요?", "answer": "인덱스의 상태를 확인하려면 `GetIndex` 메서드를 사용합니다. 이 메서드는 `GetIndexRequest`를 인자로 받아들이며, 성공적으로 호출되면 `Index` 객체를 반환합니다. 이 객체에는 인덱스의 현재 상태가 포함되어 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1beta2#google.firestore.admin.v1beta2.FirestoreAdmin.GetIndex"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1beta2_hl=ko.txt"}
{"question": "Firestore에서 작업의 진행 상태를 확인하는 방법은 무엇인가요?", "answer": "작업의 진행 상태를 확인하려면 `google.longrunning.Operations` API를 사용하여 작업의 상태를 조회할 수 있습니다. 각 작업은 상태, 시작 시간, 완료 시간 및 진행 상황을 포함하는 메타데이터를 제공합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.longrunning#google.longrunning.Operation"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1beta2_hl=ko.txt"}
{"question": "FirestoreAdmin.BulkDeleteDocuments를 사용하여 문서를 대량으로 삭제하는 방법은 무엇인가요?", "answer": "FirestoreAdmin.BulkDeleteDocuments는 BulkDeleteDocumentsRequest를 사용하여 문서를 대량으로 삭제합니다. 이 요청은 삭제할 데이터베이스와 선택적으로 삭제할 컬렉션 ID 및 네임스페이스 ID를 포함해야 합니다. 삭제는 백그라운드에서 진행되며, 진행 상황은 생성된 Operation 리소스를 통해 모니터링할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1#google.firestore.admin.v1.FirestoreAdmin.BulkDeleteDocuments"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1_hl=ko.txt"}
{"question": "FirestoreAdmin.CloneDatabase를 사용하여 데이터베이스를 복제하는 방법은 무엇인가요?", "answer": "FirestoreAdmin.CloneDatabase는 CloneDatabaseRequest를 사용하여 기존 데이터베이스를 복제합니다. 요청에는 복제할 데이터베이스의 ID와 PITR(지점 복구) 스냅샷이 포함되어야 하며, 복제된 데이터베이스는 기존 데이터베이스와 동일한 클라우드 지역에 있어야 합니다. 복제 작업의 진행 상황은 생성된 Operation 리소스를 통해 추적할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1#google.firestore.admin.v1.FirestoreAdmin.CloneDatabase"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1_hl=ko.txt"}
{"question": "FirestoreAdmin.CreateBackupSchedule를 사용하여 백업 일정을 생성하는 방법은 무엇인가요?", "answer": "FirestoreAdmin.CreateBackupSchedule는 CreateBackupScheduleRequest를 사용하여 데이터베이스에 백업 일정을 생성합니다. 데이터베이스에는 최대 두 개의 백업 일정(하나는 일일, 하나는 주간)을 설정할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1#google.firestore.admin.v1.FirestoreAdmin.CreateBackupSchedule"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1_hl=ko.txt"}
{"question": "FirestoreAdmin.CreateDatabase를 사용하여 데이터베이스를 생성하는 방법은 무엇인가요?", "answer": "FirestoreAdmin.CreateDatabase는 CreateDatabaseRequest를 사용하여 데이터베이스를 생성합니다. 요청에는 부모 프로젝트와 생성할 데이터베이스의 정보가 포함되어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1#google.firestore.admin.v1.FirestoreAdmin.CreateDatabase"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1_hl=ko.txt"}
{"question": "FirestoreAdmin.CreateIndex를 사용하여 복합 인덱스를 생성하는 방법은 무엇인가요?", "answer": "FirestoreAdmin.CreateIndex는 CreateIndexRequest를 사용하여 복합 인덱스를 생성합니다. 요청에는 인덱스를 생성할 컬렉션 그룹의 부모 이름과 생성할 인덱스의 정보가 포함되어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1#google.firestore.admin.v1.FirestoreAdmin.CreateIndex"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1_hl=ko.txt"}
{"question": "FirestoreAdmin.ExportDocuments를 사용하여 문서를 내보내는 방법은 무엇인가요?", "answer": "FirestoreAdmin.ExportDocuments는 ExportDocumentsRequest를 사용하여 Google Cloud Firestore의 모든 문서 또는 하위 집합을 다른 저장 시스템(예: Google Cloud Storage)으로 내보냅니다. 요청에는 내보낼 데이터베이스와 컬렉션 ID, 출력 URI가 포함되어야 하며, 내보내기 작업은 백그라운드에서 진행됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1#google.firestore.admin.v1.FirestoreAdmin.ExportDocuments"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1_hl=ko.txt"}
{"question": "FirestoreAdmin.ImportDocuments를 사용하여 문서를 가져오는 방법은 무엇인가요?", "answer": "FirestoreAdmin.ImportDocuments는 ImportDocumentsRequest를 사용하여 Google Cloud Firestore로 문서를 가져옵니다. 요청에는 가져올 데이터베이스와 컬렉션 ID, 가져올 문서의 위치가 포함되어야 하며, 가져오기 작업은 백그라운드에서 진행됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1#google.firestore.admin.v1.FirestoreAdmin.ImportDocuments"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1_hl=ko.txt"}
{"question": "FirestoreAdmin.ListDatabases를 사용하여 프로젝트의 모든 데이터베이스를 나열하는 방법은 무엇인가요?", "answer": "FirestoreAdmin.ListDatabases는 ListDatabasesRequest를 사용하여 프로젝트의 모든 데이터베이스를 나열합니다. 요청에는 부모 프로젝트의 이름이 포함되어야 하며, 삭제된 리소스를 포함할지 여부를 지정할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1#google.firestore.admin.v1.FirestoreAdmin.ListDatabases"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1_hl=ko.txt"}
{"question": "FirestoreAdmin.GetDatabase를 사용하여 데이터베이스 정보를 가져오는 방법은 무엇인가요?", "answer": "FirestoreAdmin.GetDatabase는 GetDatabaseRequest를 사용하여 데이터베이스의 정보를 가져옵니다. 요청에는 가져올 데이터베이스의 이름이 포함되어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1#google.firestore.admin.v1.FirestoreAdmin.GetDatabase"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1_hl=ko.txt"}
{"question": "FirestoreAdmin.DeleteDatabase를 사용하여 데이터베이스를 삭제하는 방법은 무엇인가요?", "answer": "FirestoreAdmin.DeleteDatabase는 DeleteDatabaseRequest를 사용하여 데이터베이스를 삭제합니다. 요청에는 삭제할 데이터베이스의 이름과 현재 etag가 포함되어야 하며, etag가 일치하지 않으면 삭제가 차단됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1#google.firestore.admin.v1.FirestoreAdmin.DeleteDatabase"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.admin.v1_hl=ko.txt"}
{"question": "Firestore에서 여러 문서를 한 번에 가져오는 방법은 무엇인가요?", "answer": "Firestore에서는 `BatchGetDocuments` 메서드를 사용하여 여러 문서를 가져올 수 있습니다. 이 메서드는 요청된 문서가 요청한 순서와 동일한 순서로 반환되지 않을 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore.BatchGetDocuments"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.v1_hl=ko.txt"}
{"question": "Firestore에서 문서를 생성하는 방법은 무엇인가요?", "answer": "Firestore에서는 `CreateDocument` 메서드를 사용하여 새 문서를 생성할 수 있습니다. 이 메서드는 부모 리소스와 컬렉션 ID, 문서 ID, 생성할 문서의 내용을 포함하는 요청을 필요로 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore.CreateDocument"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.v1_hl=ko.txt"}
{"question": "Firestore에서 문서를 업데이트하는 방법은 무엇인가요?", "answer": "Firestore에서는 `UpdateDocument` 메서드를 사용하여 문서를 업데이트할 수 있습니다. 이 메서드는 업데이트할 문서와 업데이트할 필드를 지정하는 마스크를 포함하는 요청을 필요로 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore.UpdateDocument"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.v1_hl=ko.txt"}
{"question": "Firestore에서 문서를 삭제하는 방법은 무엇인가요?", "answer": "Firestore에서는 `DeleteDocument` 메서드를 사용하여 문서를 삭제할 수 있습니다. 이 메서드는 삭제할 문서의 리소스 이름을 포함하는 요청을 필요로 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore.DeleteDocument"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.v1_hl=ko.txt"}
{"question": "Firestore에서 트랜잭션을 시작하는 방법은 무엇인가요?", "answer": "Firestore에서는 `BeginTransaction` 메서드를 사용하여 새 트랜잭션을 시작할 수 있습니다. 이 메서드는 데이터베이스 이름과 트랜잭션 옵션을 포함하는 요청을 필요로 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore.BeginTransaction"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.v1_hl=ko.txt"}
{"question": "Firestore에서 트랜잭션을 커밋하는 방법은 무엇인가요?", "answer": "Firestore에서는 `Commit` 메서드를 사용하여 트랜잭션을 커밋할 수 있습니다. 이 메서드는 커밋할 문서의 쓰기 작업을 포함하는 요청을 필요로 하며, 모든 쓰기 작업은 원자적으로 실행됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore.Commit"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.v1_hl=ko.txt"}
{"question": "Firestore에서 문서를 가져오는 방법은 무엇인가요?", "answer": "Firestore에서는 `GetDocument` 메서드를 사용하여 단일 문서를 가져올 수 있습니다. 이 메서드는 가져올 문서의 리소스 이름을 포함하는 요청을 필요로 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore.GetDocument"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.v1_hl=ko.txt"}
{"question": "Firestore에서 문서 목록을 가져오는 방법은 무엇인가요?", "answer": "Firestore에서는 `ListDocuments` 메서드를 사용하여 문서 목록을 가져올 수 있습니다. 이 메서드는 부모 리소스와 선택적으로 컬렉션 ID, 페이지 크기, 페이지 토큰 등을 포함하는 요청을 필요로 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore.ListDocuments"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.v1_hl=ko.txt"}
{"question": "Firestore에서 쿼리를 실행하는 방법은 무엇인가요?", "answer": "Firestore에서는 `RunQuery` 메서드를 사용하여 쿼리를 실행할 수 있습니다. 이 메서드는 쿼리를 실행할 부모 리소스와 쿼리 내용을 포함하는 요청을 필요로 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore.RunQuery"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.v1_hl=ko.txt"}
{"question": "Firestore에서 집계 쿼리를 실행하는 방법은 무엇인가요?", "answer": "Firestore에서는 `RunAggregationQuery` 메서드를 사용하여 집계 쿼리를 실행할 수 있습니다. 이 메서드는 집계 쿼리와 부모 리소스를 포함하는 요청을 필요로 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore.RunAggregationQuery"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_google.firestore.v1_hl=ko.txt"}
{"question": "Cloud Firestore API에서 문서를 생성하는 방법은 무엇인가요?", "answer": "문서를 생성하려면 `CreateDocument` 메서드를 사용합니다. 이 메서드는 새로운 문서를 생성합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_hl=ko.txt"}
{"question": "Firestore에서 여러 문서를 한 번에 가져오는 방법은 무엇인가요?", "answer": "여러 문서를 한 번에 가져오려면 `BatchGetDocuments` 메서드를 사용합니다. 이 메서드는 여러 문서를 가져오는 기능을 제공합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_hl=ko.txt"}
{"question": "Firestore에서 문서를 삭제하는 방법은 무엇인가요?", "answer": "문서를 삭제하려면 `DeleteDocument` 메서드를 사용합니다. 이 메서드는 특정 문서를 삭제합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_hl=ko.txt"}
{"question": "Firestore에서 트랜잭션을 시작하는 방법은 무엇인가요?", "answer": "트랜잭션을 시작하려면 `BeginTransaction` 메서드를 사용합니다. 이 메서드는 새로운 트랜잭션을 시작합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_hl=ko.txt"}
{"question": "Firestore에서 문서를 업데이트하는 방법은 무엇인가요?", "answer": "문서를 업데이트하려면 `UpdateDocument` 메서드를 사용합니다. 이 메서드는 문서를 업데이트하거나 삽입합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_hl=ko.txt"}
{"question": "Firestore에서 문서의 변경 사항을 실시간으로 듣는 방법은 무엇인가요?", "answer": "문서의 변경 사항을 듣기 위해 `Listen` 메서드를 사용합니다. 이 메서드는 문서의 변경 사항을 실시간으로 수신합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_hl=ko.txt"}
{"question": "Firestore에서 문서의 배치 쓰기를 수행하는 방법은 무엇인가요?", "answer": "문서의 배치 쓰기를 수행하려면 `BatchWrite` 메서드를 사용합니다. 이 메서드는 여러 쓰기 작업을 한 번에 적용합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_hl=ko.txt"}
{"question": "Firestore에서 문서의 쿼리를 실행하는 방법은 무엇인가요?", "answer": "문서의 쿼리를 실행하려면 `RunQuery` 메서드를 사용합니다. 이 메서드는 쿼리를 실행하여 결과를 반환합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_hl=ko.txt"}
{"question": "Firestore에서 문서의 변경 사항을 롤백하는 방법은 무엇인가요?", "answer": "문서의 변경 사항을 롤백하려면 `Rollback` 메서드를 사용합니다. 이 메서드는 트랜잭션을 롤백합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_hl=ko.txt"}
{"question": "Firestore에서 문서의 파티션 쿼리를 수행하는 방법은 무엇인가요?", "answer": "문서의 파티션 쿼리를 수행하려면 `PartitionQuery` 메서드를 사용합니다. 이 메서드는 쿼리를 파티션하여 병렬로 실행할 수 있는 커서를 반환합니다.", "sources": ["https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reference_rpc_hl=ko.txt"}
{"question": "Firestore 클라이언트 라이브러리에서 위치 엔드포인트를 설정하는 방법은 무엇인가요?", "answer": "Firestore 클라이언트를 초기화할 때 위치 엔드포인트를 설정하려면, FirestoreOptions를 사용하여 프로젝트 ID와 인증 정보를 설정한 후, regionalEndpoint 메서드를 호출하여 엔드포인트를 지정합니다.", "sources": ["https://cloud.google.com/firestore/docs/regional-endpoints?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_regional-endpoints_hl=ko.txt"}
{"question": "Java에서 Firestore 클라이언트를 위치 엔드포인트로 초기화하는 코드 예시는 무엇인가요?", "answer": "다음은 Java에서 Firestore 클라이언트를 위치 엔드포인트로 초기화하는 코드 예시입니다: ```java FirestoreOptions firestoreOptions = FirestoreOptions.newBuilder() .setProjectId(projectId) .setCredentials(GoogleCredentials.getApplicationDefault()) .setApiEndpoint(\"nam5-firestore.googleapis.com:443\") .build(); Firestore dbWithEndpoint = firestoreOptions.getService(); ```", "sources": ["https://cloud.google.com/firestore/docs/regional-endpoints?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_regional-endpoints_hl=ko.txt"}
{"question": "Python에서 Firestore 클라이언트를 위치 엔드포인트로 설정하는 방법은 무엇인가요?", "answer": "Python에서 Firestore 클라이언트를 위치 엔드포인트로 설정하려면 ClientOptions를 사용하여 api_endpoint를 지정합니다. 예시는 다음과 같습니다: ```python client_options = ClientOptions(api_endpoint=\"nam5-firestore.googleapis.com\") db = firestore.Client(client_options=client_options) ```", "sources": ["https://cloud.google.com/firestore/docs/regional-endpoints?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_regional-endpoints_hl=ko.txt"}
{"question": "위치 엔드포인트를 설정하지 않으면 어떤 오류가 발생할 수 있나요?", "answer": "위치 엔드포인트를 설정하지 않거나 데이터가 있는 위치와 다른 위치 엔드포인트를 설정하면 PermissionDeniedError 오류가 발생할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/regional-endpoints?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_regional-endpoints_hl=ko.txt"}
{"question": "Firestore의 위치 엔드포인트 형식은 어떻게 되나요?", "answer": "위치 엔드포인트는 다음 형식을 사용합니다: REGION_NAME-firestore.googleapis.com:443. 포트 번호가 엔드포인트와 함께 정의되어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/regional-endpoints?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_regional-endpoints_hl=ko.txt"}
{"question": "Firestore의 멀티 리전 및 리전 호스트 이름의 예시는 무엇인가요?", "answer": "Firestore의 멀티 리전 및 리전 호스트 이름 예시는 다음과 같습니다: eur3-firestore.googleapis.com, nam5-firestore.googleapis.com, europe-west6-firestore.googleapis.com, asia-northeast2-firestore.googleapis.com.", "sources": ["https://cloud.google.com/firestore/docs/regional-endpoints?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_regional-endpoints_hl=ko.txt"}
{"question": "전역 API 엔드포인트 사용을 제한하는 방법은 무엇인가요?", "answer": "전역 API 엔드포인트 사용을 강제하려면 constraints/gcp.restrictEndpointUsage 조직 정책 제약조건을 사용하여 전역 API 엔드포인트에 대한 요청을 차단해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/regional-endpoints?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_regional-endpoints_hl=ko.txt"}
{"question": "Firestore 클라이언트 라이브러리에서 지원되지 않는 플랫폼은 무엇인가요?", "answer": "모바일 및 웹 SDK, 즉 Android, iOS, 웹은 Firestore 클라이언트 라이브러리에서 위치 엔드포인트 설정을 지원하지 않습니다.", "sources": ["https://cloud.google.com/firestore/docs/regional-endpoints?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_regional-endpoints_hl=ko.txt"}
{"question": "Firestore에 인증하기 위해 필요한 설정은 무엇인가요?", "answer": "Firestore에 인증하기 위해서는 애플리케이션 기본 사용자 인증 정보를 설정해야 하며, 자세한 내용은 로컬 개발 환경의 인증 설정을 참조해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/regional-endpoints?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_regional-endpoints_hl=ko.txt"}
{"question": "Firestore의 데이터 모델에 대한 정보를 어디서 찾을 수 있나요?", "answer": "Firestore의 데이터 모델에 대한 정보는 Firestore 데이터 모델 문서에서 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/data-model?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_regional-endpoints_hl=ko.txt"}
{"question": "Firestore 안정성 추천자를 사용하기 위해 필요한 API 설정 방법은 무엇인가요?", "answer": "Firestore 안정성 추천자를 사용하기 위해서는 먼저 Recommender API를 사용 설정해야 하며, 충분한 권한이 있는지 확인해야 합니다. 필요한 권한을 제공하는 역할은 roles/recommender.firestoredatabasereliabilityViewer 또는 roles/recommender.firestoredatabasereliabilityAdmin 중 하나입니다.", "sources": ["https://cloud.google.com/firestore/docs/reliability-recommender?hl=ko,", "https://cloud.google.com/recommender/docs/enabling?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reliability-recommender_hl=ko.txt"}
{"question": "안정성 추천자를 통해 권장사항을 보려면 어떤 조건이 필요한가요?", "answer": "안정성 추천사항을 보려면 비어 있지 않고 사용 중인 데이터베이스에 예약된 백업 또는 PITR이 사용 설정되지 않아야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/reliability-recommender?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reliability-recommender_hl=ko.txt"}
{"question": "gcloud CLI를 사용하여 안정성 권장사항을 나열하는 명령어는 무엇인가요?", "answer": "gcloud CLI를 사용하여 안정성 권장사항을 나열하려면 다음 명령어를 실행합니다: ``` gcloud recommender recommendations list \\ --project=PROJECT_ID \\ --location=LOCATION \\ --recommender=google.firestore.database.RECOMMENDER ``` 여기서 PROJECT_ID는 프로젝트 ID, LOCATION은 리전(예: us-central1), RECOMMENDER는 ReliabilityRecommender로서 추천자 ID입니다.", "sources": ["https://cloud.google.com/firestore/docs/reliability-recommender?hl=ko,", "https://cloud.google.com/sdk/gcloud/reference/recommender/recommendations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reliability-recommender_hl=ko.txt"}
{"question": "Recommender API를 사용하여 안정성 권장사항을 나열하는 방법은 무엇인가요?", "answer": "Recommender API를 사용하여 안정성 권장사항을 나열하려면 다음과 같은 curl 명령어를 사용합니다: ``` curl -H \"Authorization: Bearer $(gcloud auth print-access-token)\"  \\ -H \"x-goog-user-project: PROJECT_ID\" \\ \"https://recommender.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/recommenders/google.firestore.database.RECOMMENDER/recommendations\" ``` 여기서 PROJECT_ID는 프로젝트 ID, LOCATION은 리전(예: us-central1), RECOMMENDER는 ReliabilityRecommender로서 추천자 ID입니다.", "sources": ["https://cloud.google.com/firestore/docs/reliability-recommender?hl=ko,", "https://cloud.google.com/recommender/docs/reference/rest/v1beta1/projects.locations.recommenders.recommendations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reliability-recommender_hl=ko.txt"}
{"question": "gcloud CLI를 사용하여 재해 복구 계획에 대한 통계를 보려면 어떤 명령어를 사용해야 하나요?", "answer": "gcloud CLI를 사용하여 통계를 보려면 다음 명령어를 실행합니다: ``` gcloud recommender insights list \\ --project=PROJECT_ID \\ --location=LOCATION \\ --insight-type=google.firestore.database.INSIGHT_TYPE ``` 여기서 PROJECT_ID는 프로젝트 ID, LOCATION은 리전(예: us-central1), INSIGHT_TYPE은 ReliabilityInsight로서의 통계 유형 ID입니다.", "sources": ["https://cloud.google.com/firestore/docs/reliability-recommender?hl=ko,", "https://cloud.google.com/sdk/gcloud/reference/recommender/insights/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reliability-recommender_hl=ko.txt"}
{"question": "Recommender API를 사용하여 통계를 나열하는 방법은 무엇인가요?", "answer": "Recommender API를 사용하여 통계를 나열하려면 다음과 같은 curl 명령어를 사용합니다: ``` curl -H \"Authorization: Bearer $(gcloud auth print-access-token)\"  \\ \"https://recommender.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/insightTypes/google.firestore.database.INSIGHT_TYPE/insights\" ``` 여기서 PROJECT_ID는 프로젝트 ID, LOCATION은 리전(예: us-central1), INSIGHT_TYPE은 ReliabilityInsight로서의 통계 유형 ID입니다.", "sources": ["https://cloud.google.com/firestore/docs/reliability-recommender?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reliability-recommender_hl=ko.txt"}
{"question": "Firestore 안정성 추천자의 가격은 어떻게 되나요?", "answer": "Firestore 안정성 추천사항 및 통계는 무료로 제공됩니다.", "sources": ["https://cloud.google.com/firestore/docs/reliability-recommender?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reliability-recommender_hl=ko.txt"}
{"question": "안정성 추천자를 통해 예약된 백업을 사용 설정하는 방법은 무엇인가요?", "answer": "예약된 백업을 사용 설정하는 방법에 대한 자세한 내용은 Firestore 백업 문서를 참조해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/backups?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reliability-recommender_hl=ko.txt"}
{"question": "PITR(점진적 데이터 복구)을 사용 설정하는 방법은 무엇인가요?", "answer": "PITR을 사용 설정하는 방법에 대한 자세한 내용은 Firestore PITR 문서를 참조해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/pitr?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reliability-recommender_hl=ko.txt"}
{"question": "데이터베이스의 안정성을 개선하기 위한 권장사항을 어떻게 확인할 수 있나요?", "answer": "Google Cloud 콘솔에서 권장사항 탭을 선택하거나 gcloud CLI를 사용하여 명령어를 실행하여 안정성 권장사항을 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/reliability-recommender?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_reliability-recommender_hl=ko.txt"}
{"question": "Firestore 보안 규칙 버전 2를 사용하려면 어떻게 해야 하나요?", "answer": "Firestore 보안 규칙 버전 2를 사용하려면 규칙의 첫 번째 줄에 `rules_version = '2';`를 추가해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/security/get-started?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_security_get-started_hl=ko.txt"}
{"question": "Firestore 보안 규칙을 작성하는 기본 구조는 어떻게 되나요?", "answer": "Firestore 보안 규칙은 데이터베이스에서 문서를 식별하는 `match` 구문과 이러한 문서에 대한 액세스 권한을 제어하는 `allow` 표현식으로 구성됩니다.", "sources": ["https://cloud.google.com/firestore/docs/security/get-started?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_security_get-started_hl=ko.txt"}
{"question": "Firebase Console에서 Firestore 보안 규칙을 설정하고 배포하는 방법은 무엇인가요?", "answer": "Firebase Console의 Firestore 섹션에서 규칙 탭을 열고 온라인 편집기로 규칙을 작성한 다음 게시를 클릭하여 설정하고 배포할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/security/get-started?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_security_get-started_hl=ko.txt"}
{"question": "Firestore 보안 규칙을 Firebase CLI를 사용하여 배포하는 방법은 무엇인가요?", "answer": "Firebase CLI를 사용하면 애플리케이션 코드로 규칙의 버전을 계속 제어하면서 기존 배포 프로세스의 일부로 규칙을 배포할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/security/get-started?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_security_get-started_hl=ko.txt"}
{"question": "Firestore 보안 규칙에서 인증이 필요한 규칙의 예시는 무엇인가요?", "answer": "인증이 필요한 규칙의 예시는 다음과 같습니다: ```plaintext service cloud.firestore { match /databases/{database}/documents { match /{document=**} { allow read, write: if request.auth != null; } } } ```", "sources": ["https://cloud.google.com/firestore/docs/security/get-started?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_security_get-started_hl=ko.txt"}
{"question": "Firestore 보안 규칙 업데이트가 쿼리와 리스너에 미치는 영향은 무엇인가요?", "answer": "Firestore 보안 규칙 업데이트가 새 쿼리와 리스너에 영향을 미치는 데 최대 1분이 소요될 수 있으며, 변경사항이 완전히 전파되어 모든 활성 리스너에 반영되는 데 최대 10분이 소요될 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/security/get-started?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_security_get-started_hl=ko.txt"}
{"question": "Firestore 보안 규칙을 작성할 때 주의해야 할 점은 무엇인가요?", "answer": "Firestore 보안 규칙에서 지정된 문서 경로 중 일부라도 액세스를 거부하면 전체 요청이 실패하므로, 규칙을 신중하게 작성해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/security/get-started?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_security_get-started_hl=ko.txt"}
{"question": "Firestore 보안 규칙을 작성할 때 사용할 수 있는 조건은 무엇인가요?", "answer": "Firestore 보안 규칙을 작성할 때 사용할 수 있는 조건은 맞춤 보안 규칙 조건을 작성하여 정의할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/security/get-started?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_security_get-started_hl=ko.txt"}
{"question": "Firestore 보안 규칙을 관리하기 위한 권장 방법은 무엇인가요?", "answer": "프로젝트의 기본 데이터베이스 및 각 추가 데이터베이스에 맞는 데이터 모델에 따라 Firestore 보안 규칙을 작성하고 관리하는 것이 권장됩니다.", "sources": ["https://cloud.google.com/firestore/docs/security/get-started?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_security_get-started_hl=ko.txt"}
{"question": "Firestore 보안 규칙을 배포할 때 Firebase Console과 Firebase CLI의 차이점은 무엇인가요?", "answer": "Firebase Console은 프로젝트의 기본 데이터베이스에 Firestore 보안 규칙 배포를 지원하며, Firebase CLI는 멀티 데이터베이스 프로젝트의 규칙 작업을 할 수 있도록 지원합니다.", "sources": ["https://cloud.google.com/firestore/docs/security/get-started?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_security_get-started_hl=ko.txt"}
{"question": "Firestore에서 지연 시간이 늘어나는 원인은 무엇인가요?", "answer": "지연 시간이 늘어나는 원인으로는 500-50-5 규칙을 초과하는 지속되는 트래픽, 단일 문서를 너무 자주 업데이트하거나 트랜잭션으로 인한 경합, 병합-조인 쿼리가 느린 경우, 많은 문서를 반환하는 대형 읽기, 최근 삭제가 너무 많은 경우, 리스너 추가 및 삭제가 너무 빠른 경우, 대용량 문서 또는 결과가 많은 쿼리 리슨, 색인 팬아웃, 대량 쓰기 및 배치 쓰기 등이 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/troubleshooting?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_troubleshooting_hl=ko.txt"}
{"question": "Firestore의 핫 스팟 문제를 해결하는 방법은 무엇인가요?", "answer": "핫 스팟 문제를 해결하기 위해서는 규모 확장을 위한 설계를 검토하고 애플리케이션의 핫 스팟을 식별해야 합니다. Firestore는 빠른 트래픽 증가를 위해 자동으로 확장을 시도하지만, 핫 스팟으로 인해 확장 기능이 제한될 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/troubleshooting?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_troubleshooting_hl=ko.txt"}
{"question": "단일 문서를 너무 자주 업데이트할 때의 해결 방법은 무엇인가요?", "answer": "단일 문서에 대한 쓰기 속도를 줄이고, 트랜잭션의 데이터 경합 및 트랜잭션 사용 방법을 검토해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/troubleshooting?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_troubleshooting_hl=ko.txt"}
{"question": "병합-조인 쿼리가 느릴 때의 성능 개선 방법은 무엇인가요?", "answer": "병합-조인 쿼리가 느릴 경우, 동등 필터가 여러 개(==) 있지만 복합 색인이 지원되지 않는 쿼리의 경우 복합 색인을 추가하여 성능을 개선할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/troubleshooting?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_troubleshooting_hl=ko.txt"}
{"question": "대량 읽기를 수행할 때 지연 시간을 줄이는 방법은 무엇인가요?", "answer": "대량 읽기를 수행할 때는 페이지로 나누기를 사용하여 읽기를 분할해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/troubleshooting?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_troubleshooting_hl=ko.txt"}
{"question": "최근 삭제가 너무 많을 때의 해결 방법은 무엇인가요?", "answer": "너무 많은 최근 삭제로 인해 지연 시간이 발생한 경우 잠시 기다리면 문제가 자동으로 해결됩니다. 문제가 해결되지 않으면 지원팀에 연락해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/troubleshooting?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_troubleshooting_hl=ko.txt"}
{"question": "리스너 추가 및 삭제가 너무 빠를 때의 권장사항은 무엇인가요?", "answer": "리스너 추가 및 삭제가 너무 빠를 경우, 실시간 업데이트를 위한 권장사항을 참조해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/troubleshooting?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_troubleshooting_hl=ko.txt"}
{"question": "대량 쓰기 및 배치 쓰기를 최적화하는 방법은 무엇인가요?", "answer": "각 배치 쓰기에서 쓰기 수를 줄이고, 원자성이 필요하지 않은 일괄 데이터 항목의 경우 동시에 로드되는 개별 쓰기와 함께 서버 클라이언트 라이브러리를 사용하는 것이 좋습니다.", "sources": ["https://cloud.google.com/firestore/docs/troubleshooting?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_troubleshooting_hl=ko.txt"}
{"question": "색인 팬아웃 문제를 해결하기 위한 방법은 무엇인가요?", "answer": "배열 필드 및 맵 필드 사용량을 검토하고, 맵 필드의 경우 색인 생성에서 하위 필드를 사용 중지할 수 있습니다. 수집 수준 예외를 사용할 수도 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/troubleshooting?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_troubleshooting_hl=ko.txt"}
{"question": "Firestore에서 트랜잭션 경합을 줄이는 방법은 무엇인가요?", "answer": "트랜잭션의 데이터 경합을 줄이기 위해 개별 문서에 대한 쓰기 속도를 줄이는 것이 필요합니다.", "sources": ["https://cloud.google.com/firestore/docs/troubleshooting?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_troubleshooting_hl=ko.txt"}
{"question": "TTL 정책을 만들기 위해 Google Cloud Console에서 어떤 단계를 따라야 하나요?", "answer": "Google Cloud 콘솔에서 TTL 정책을 만들려면 다음 단계를 따르세요: 데이터베이스 페이지로 이동하여 필요한 데이터베이스를 선택한 후 탐색 메뉴에서 TTL(수명)을 클릭하고, 정책 만들기를 클릭하여 컬렉션 그룹 이름과 타임스탬프 필드 이름을 입력한 후 만들기를 클릭합니다.", "sources": ["https://cloud.google.com/firestore/docs/ttl?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_ttl_hl=ko.txt"}
{"question": "TTL 필드의 데이터 유형은 무엇이어야 하나요?", "answer": "TTL 필드는 Date and time 유형이어야 하며, 이 필드를 사용하여 삭제 가능한 문서를 식별합니다.", "sources": ["https://cloud.google.com/firestore/docs/ttl?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_ttl_hl=ko.txt"}
{"question": "TTL 정책을 사용 설정한 후 데이터 삭제는 언제 이루어지나요?", "answer": "TTL 정책을 사용 설정한 후 만료된 문서는 일반적으로 만료일로부터 24시간 이내에 삭제됩니다. 그러나 삭제는 즉시 처리되지 않으며, 쿼리 및 조회 요청에 계속 표시됩니다.", "sources": ["https://cloud.google.com/firestore/docs/ttl?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_ttl_hl=ko.txt"}
{"question": "TTL 필드에서 색인을 생성하지 않으면 어떤 영향을 미치나요?", "answer": "TTL 필드에서 색인을 생성하지 않으면 타임스탬프 필드의 색인을 생성할 때 발생할 수 있는 핫스팟 문제를 피할 수 있습니다. 핫스팟은 좁은 문서 범위에 대한 높은 읽기, 쓰기, 삭제 속도를 나타냅니다.", "sources": ["https://cloud.google.com/firestore/docs/ttl?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_ttl_hl=ko.txt"}
{"question": "TTL 정책을 사용 중지하려면 어떤 단계를 따라야 하나요?", "answer": "TTL 정책을 사용 중지하려면 Google Cloud 콘솔에서 데이터베이스 페이지로 이동하여 필요한 데이터베이스를 선택한 후 탐색 메뉴에서 TTL(수명)을 클릭하고, TTL 정책 테이블에서 해당 정책 행의 삭제 버튼을 클릭하여 확인합니다.", "sources": ["https://cloud.google.com/firestore/docs/ttl?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_ttl_hl=ko.txt"}
{"question": "TTL 정책을 구성하기 위해 필요한 권한은 무엇인가요?", "answer": "TTL 정책을 보려면 datastore.indexes.list 및 datastore.indexes.get 권한이 필요하며, 수정하려면 datastore.indexes.update 권한이 필요합니다. TTL 작업의 상태를 확인하려면 datastore.operations.list 및 datastore.operations.get 권한이 필요합니다.", "sources": ["https://cloud.google.com/firestore/docs/ttl?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_ttl_hl=ko.txt"}
{"question": "TTL 정책을 gcloud CLI를 사용하여 어떻게 구성하나요?", "answer": "gcloud CLI를 사용하여 TTL 정책을 구성하려면 `gcloud firestore fields ttls update ttl_field --collection-group=collection_group_name --enable-ttl` 명령어를 사용합니다. 작업이 완료될 때까지 gcloud CLI가 대기하지 않도록 `--async` 플래그를 추가할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/ttl?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_ttl_hl=ko.txt"}
{"question": "TTL 정책을 확인하기 위해 gcloud CLI에서 어떤 명령어를 사용하나요?", "answer": "TTL 정책 및 상태를 확인하기 위해 `gcloud firestore fields ttls list` 명령어를 사용합니다. 특정 컬렉션 그룹의 TTL 정책을 나열하려면 `gcloud firestore fields ttls list --collection-group=collection_group_name` 명령어를 사용합니다.", "sources": ["https://cloud.google.com/firestore/docs/ttl?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_ttl_hl=ko.txt"}
{"question": "TTL 삭제 작업은 Firestore 가격 책정에 어떻게 포함되나요?", "answer": "TTL 삭제 작업은 문서 삭제 비용에 포함되며, 삭제 작업 가격은 Firestore 가격 책정을 참조해야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/ttl?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_ttl_hl=ko.txt"}
{"question": "TTL 정책을 만들기 전에 고려해야 할 사항은 무엇인가요?", "answer": "TTL 필드 값은 미래, 현재 또는 과거의 시간일 수 있으며, 과거의 시간인 경우 문서는 즉시 삭제 가능한 대상이 될 수 있습니다. 다른 데이터 유형을 사용하거나 TTL 필드 값을 설정하지 않으면 개별 문서에 TTL이 사용 중지됩니다.", "sources": ["https://cloud.google.com/firestore/docs/ttl?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_ttl_hl=ko.txt"}
{"question": "Cloud Monitoring 대시보드에서 Firestore 측정항목을 어떻게 볼 수 있나요?", "answer": "Firestore 측정항목을 보려면 Google Cloud 콘솔의 Firestore 데이터베이스 페이지를 열고, 데이터베이스를 선택한 후 탐색 메뉴에서 모니터링을 클릭하여 대시보드를 엽니다.", "sources": ["https://cloud.google.com/firestore/docs/use-monitoring-dashboard?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_use-monitoring-dashboard_hl=ko.txt"}
{"question": "커스텀 대시보드를 설정하는 방법은 무엇인가요?", "answer": "커스텀 대시보드를 설정하려면 Google Cloud 콘솔의 Cloud Monitoring에서 관련 정보를 체계적으로 표시할 수 있는 대시보드를 만들 수 있습니다. 자세한 내용은 커스텀 대시보드 관리 및 대시보드 위젯 추가를 참조하세요.", "sources": ["https://cloud.google.com/firestore/docs/use-monitoring-dashboard?hl=ko,", "https://cloud.google.com/monitoring/charts/dashboards?hl=ko,", "https://cloud.google.com/monitoring/charts?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_use-monitoring-dashboard_hl=ko.txt"}
{"question": "오류율을 모니터링하는 방법은 무엇인가요?", "answer": "오류율은 4xx 또는 5xx 오류 코드가 발생한 유효 API 요청 수를 전체 유효 API 요청 수로 나누어 계산합니다. 이를 위해 모니터링 대시보드를 만들 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/use-monitoring-dashboard?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_use-monitoring-dashboard_hl=ko.txt"}
{"question": "Cloud Monitoring에서 알림 정책을 만드는 방법은 무엇인가요?", "answer": "Google Cloud 콘솔에서 Monitoring 페이지로 이동한 후 notifications 알림을 선택하고 정책 만들기를 클릭하여 알림 정책을 설정할 수 있습니다. 조건 유형을 기준점으로 선택하고 기준점을 설정한 후 알림을 구성합니다.", "sources": ["https://cloud.google.com/firestore/docs/use-monitoring-dashboard?hl=ko,", "https://cloud.google.com/monitoring/alerts?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_use-monitoring-dashboard_hl=ko.txt"}
{"question": "p99 지연 시간 알림 정책을 설정하는 방법은 무엇인가요?", "answer": "p99 지연 시간 알림 정책은 순환 기간 5분 동안 p99 지연 시간이 250ms를 초과할 경우 알림이 트리거되도록 설정합니다. 조건 유형을 기준점으로 선택하고 기준점을 250으로 설정합니다.", "sources": ["https://cloud.google.com/firestore/docs/use-monitoring-dashboard?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_use-monitoring-dashboard_hl=ko.txt"}
{"question": "MQL을 사용하여 지연 시간 알림 정책을 구현하는 방법은 무엇인가요?", "answer": "MQL을 사용하여 지연 시간 알림 정책을 구현하려면 다음과 같은 쿼리를 사용할 수 있습니다: ``` fetch consumed_api | metric 'serviceruntime.googleapis.com/api/request_latencies' | filter (resource.service == 'firestore.googleapis.com') | group_by 5m, [value_request_latencies_percentile: percentile(value.request_latencies, 99)] | every 5m | condition val() > 0.25 's' ```", "sources": ["https://cloud.google.com/firestore/docs/use-monitoring-dashboard?hl=ko,", "https://cloud.google.com/monitoring/mql/examples?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_use-monitoring-dashboard_hl=ko.txt"}
{"question": "Firestore의 가용성을 어떻게 모니터링할 수 있나요?", "answer": "Firestore의 가용성은 예상 기간 이내에 성공한 상태 코드로 데이터베이스가 응답하는 속도를 나타내며, 이를 모니터링하기 위해 오류율을 계산하는 대시보드를 만들 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/use-monitoring-dashboard?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_use-monitoring-dashboard_hl=ko.txt"}
{"question": "Google Cloud 콘솔에서 Firestore 데이터베이스 페이지에 접근하는 방법은 무엇인가요?", "answer": "Google Cloud 콘솔에서 Firestore 데이터베이스 페이지에 접근하려면 [이 링크](https://console.cloud.google.com/firestore/databases?hl=ko)를 클릭하여 데이터베이스 목록에서 원하는 데이터베이스를 선택합니다.", "sources": ["https://cloud.google.com/firestore/docs/use-monitoring-dashboard?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_use-monitoring-dashboard_hl=ko.txt"}
{"question": "측정항목 탐색기를 사용하여 차트를 만드는 방법은 무엇인가요?", "answer": "측정항목 탐색기를 사용하여 차트를 만들려면 Google Cloud 콘솔의 Cloud Monitoring 내 측정항목 탐색기를 사용하여 다양한 Firestore 측정항목을 시각화할 수 있습니다. 자세한 내용은 측정항목 탐색기로 차트 만들기를 참조하세요.", "sources": ["https://cloud.google.com/firestore/docs/use-monitoring-dashboard?hl=ko,", "https://cloud.google.com/monitoring/charts/metrics-explorer?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_use-monitoring-dashboard_hl=ko.txt"}
{"question": "Cloud Monitoring 대시보드에서 알림을 설정하는 이유는 무엇인가요?", "answer": "Cloud Monitoring 대시보드에서 알림을 설정하면 측정항목 조건이 변경될 때 이를 알려주어 잠재적인 문제가 사용자에게 영향을 주기 전에 알림을 받을 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/use-monitoring-dashboard?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_use-monitoring-dashboard_hl=ko.txt"}
{"question": "Firestore에서 데이터를 추가하는 방법은 무엇인가요?", "answer": "Firestore에서 데이터를 추가하려면 Google Cloud 콘솔에서 데이터베이스 페이지로 이동한 후, 컬렉션 시작을 클릭하고 컬렉션 ID와 문서 ID를 입력한 다음, 문서의 데이터에 필드를 추가하고 저장을 클릭합니다.", "sources": ["https://cloud.google.com/firestore/docs/using-console?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_using-console_hl=ko.txt"}
{"question": "Firestore에서 문서를 삭제하는 방법은 무엇인가요?", "answer": "Firestore에서 문서를 삭제하려면 삭제하려는 문서를 선택하고 문서 세부정보 열의 맨 위에 있는 메뉴 아이콘을 클릭한 후 문서 삭제 또는 문서 필드 삭제를 선택합니다.", "sources": ["https://cloud.google.com/firestore/docs/using-console?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_using-console_hl=ko.txt"}
{"question": "Firestore에서 컬렉션을 필터링하는 방법은 무엇인가요?", "answer": "Firestore에서 컬렉션을 필터링하려면 컬렉션 ID 옆에 있는 필터 버튼을 클릭하고 필터 추가 메뉴에서 문서 필드, 필터 조건, 정렬 순서를 선택한 후 적용을 클릭합니다.", "sources": ["https://cloud.google.com/firestore/docs/using-console?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_using-console_hl=ko.txt"}
{"question": "Firestore에서 쿼리를 실행하는 방법은 무엇인가요?", "answer": "Firestore에서 쿼리를 실행하려면 Google Cloud 콘솔에서 데이터베이스 페이지로 이동한 후 Firestore Studio를 클릭하고 쿼리 빌더 탭을 클릭하여 쿼리 범위를 선택하고 쿼리를 추가한 후 실행을 클릭합니다.", "sources": ["https://cloud.google.com/firestore/docs/using-console?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_using-console_hl=ko.txt"}
{"question": "Firestore에서 존재하지 않는 상위 문서가 표시되는 경우 어떻게 처리하나요?", "answer": "존재하지 않는 상위 문서가 콘솔에 나타나는 경우에도 쿼리나 스냅샷에는 표시되지 않으며, 쿼리 결과에 포함하려면 해당 문서를 만들어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/using-console?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_using-console_hl=ko.txt"}
{"question": "Firestore에서 쿼리 요구사항 및 제한사항은 무엇인가요?", "answer": "Firestore에서 쿼리는 1개 이상의 색인에서 지원해야 하며, ORDER BY 절은 WHERE 절의 필드와 일치해야 하고, 범위 쿼리 절은 동일한 필드에서 필터링되어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/using-console?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_using-console_hl=ko.txt"}
{"question": "Firestore에서 색인을 관리하는 방법은 무엇인가요?", "answer": "Firestore에서 색인을 관리하려면 Firebase Console의 Firestore(네이티브 모드) 섹션에서 색인 탭으로 이동하여 새로운 색인을 만들고 기존 색인을 관리할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/using-console?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_using-console_hl=ko.txt"}
{"question": "Firestore 보안 규칙을 수정하려면 어떻게 해야 하나요?", "answer": "Firestore 보안 규칙을 수정하려면 Firebase CLI 또는 Firebase Console을 사용해야 하며, Google Cloud 콘솔에서 데이터베이스 페이지로 이동한 후 보안 규칙을 클릭하여 수정할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/using-console?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_using-console_hl=ko.txt"}
{"question": "Firestore에서 데이터 필드를 삭제하는 방법은 무엇인가요?", "answer": "Firestore에서 데이터 필드를 삭제하려면 필드를 보려는 문서를 선택하고 삭제하려는 필드 옆의 삭제 아이콘을 클릭합니다.", "sources": ["https://cloud.google.com/firestore/docs/using-console?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_using-console_hl=ko.txt"}
{"question": "Firestore에서 쿼리 빌더를 사용할 때 주의해야 할 점은 무엇인가요?", "answer": "쿼리 빌더를 사용할 때는 모든 쿼리가 1개 이상의 색인에서 지원되어야 하며, ORDER BY 절은 WHERE 절의 필드와 일치해야 하고, 범위 쿼리 절은 동일한 필드에서 필터링되어야 합니다.", "sources": ["https://cloud.google.com/firestore/docs/using-console?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_using-console_hl=ko.txt"}
{"question": "Firestore에 벡터 임베딩을 저장하는 방법은 무엇인가요?", "answer": "Firestore 문서에 벡터 임베딩을 저장하는 방법은 다음과 같습니다. Python 예시로는 `Vector` 클래스를 사용하여 벡터를 생성하고, Firestore 문서에 저장합니다. 예를 들어: ```python from google.cloud import firestore from google.cloud.firestore_v1.vector import Vector firestore_client = firestore.Client() collection = firestore_client.collection(\"coffee-beans\") doc = { \"name\": \"Kahawa coffee beans\", \"description\": \"Information about the Kahawa coffee beans.\", \"embedding_field\": Vector([0.18332680, 0.24160706, 0.3416704]), } collection.add(doc) ```", "sources": ["https://cloud.google.com/firestore/docs/vector-search?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_vector-search_hl=ko.txt"}
{"question": "KNN 벡터 검색을 위해 Firestore에서 벡터 색인을 만드는 방법은 무엇인가요?", "answer": "KNN 벡터 검색을 위해 Firestore에서 벡터 색인을 만들려면 `gcloud firestore indexes composite create` 명령어를 사용합니다. 예를 들어: ```bash gcloud firestore indexes composite create \\ --collection-group=collection-group \\ --query-scope=COLLECTION \\ --field-config field-path=vector-field,vector-config='{\"dimension\":\"1024\", \"flat\": \"{}\"}' \\ --database=database-id ```", "sources": ["https://cloud.google.com/firestore/docs/vector-search?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_vector-search_hl=ko.txt"}
{"question": "Firestore에서 벡터 임베딩을 사용하여 최근접 이웃 쿼리를 수행하는 방법은 무엇인가요?", "answer": "Firestore에서 벡터 임베딩을 사용하여 최근접 이웃 쿼리를 수행하려면 `find_nearest` 메서드를 사용합니다. Python 예시는 다음과 같습니다: ```python from google.cloud.firestore_v1.base_vector_query import DistanceMeasure from google.cloud.firestore_v1.vector import Vector collection = db.collection(\"coffee-beans\") vector_query = collection.find_nearest( vector_field=\"embedding_field\", query_vector=Vector([0.3416704, 0.18332680, 0.24160706]), distance_measure=DistanceMeasure.EUCLIDEAN, limit=5, ) ```", "sources": ["https://cloud.google.com/firestore/docs/vector-search?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_vector-search_hl=ko.txt"}
{"question": "Firestore에서 벡터 색인을 삭제하는 방법은 무엇인가요?", "answer": "Firestore에서 벡터 색인을 삭제하려면 `gcloud firestore indexes composite delete` 명령어를 사용합니다. 예를 들어: ```bash gcloud firestore indexes composite delete index-id --database=database-id ```", "sources": ["https://cloud.google.com/firestore/docs/vector-search?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_vector-search_hl=ko.txt"}
{"question": "Firestore에서 벡터 거리 측정 옵션은 무엇이 있나요?", "answer": "Firestore에서 지원하는 벡터 거리 측정 옵션은 다음과 같습니다: - EUCLIDEAN: 벡터 사이의 유클리드 거리 측정 - COSINE: 벡터 사이의 각도를 기준으로 유사성 측정 - DOT_PRODUCT: 벡터의 크기에 영향을 받는 내적 측정", "sources": ["https://cloud.google.com/firestore/docs/vector-search?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_vector-search_hl=ko.txt"}
{"question": "Firestore에서 벡터 쿼리의 결과에 거리 정보를 포함시키는 방법은 무엇인가요?", "answer": "Firestore에서 벡터 쿼리의 결과에 거리 정보를 포함시키려면 `distance_result_field` 속성을 사용하여 쿼리를 설정합니다. Python 예시는 다음과 같습니다: ```python vector_query = collection.find_nearest( vector_field=\"embedding_field\", query_vector=Vector([0.3416704, 0.18332680, 0.24160706]), distance_measure=DistanceMeasure.EUCLIDEAN, limit=10, distance_result_field=\"vector_distance\", ) ```", "sources": ["https://cloud.google.com/firestore/docs/vector-search?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_vector-search_hl=ko.txt"}
{"question": "Firestore에서 벡터 임베딩을 계산하기 위해 Cloud 함수를 설정하는 방법은 무엇인가요?", "answer": "Firestore에서 문서가 업데이트 또는 생성될 때 벡터 임베딩을 계산하고 저장하기 위해 Cloud 함수를 설정할 수 있습니다. Python 예시는 다음과 같습니다: ```python @functions_framework.cloud_event def store_embedding(cloud_event) -> None: firestore_payload = firestore.DocumentEventData() payload = firestore_payload._pb.ParseFromString(cloud_event.data) collection_id, doc_id = from_payload(payload) embedding = calculate_embedding(payload) doc = firestore_client.collection(collection_id).document(doc_id) doc.set({\"embedding_field\": embedding}, merge=True) ```", "sources": ["https://cloud.google.com/firestore/docs/vector-search?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_vector-search_hl=ko.txt"}
{"question": "Firestore에서 벡터 쿼리를 사전 필터링하는 방법은 무엇인가요?", "answer": "Firestore에서 벡터 쿼리를 사전 필터링하려면 `where` 메서드를 사용하여 조건을 추가한 후 `find_nearest` 메서드를 호출합니다. Python 예시는 다음과 같습니다: ```python vector_query = collection.where(\"color\", \"==\", \"red\").find_nearest( vector_field=\"embedding_field\", query_vector=Vector([0.3416704, 0.18332680, 0.24160706]), distance_measure=DistanceMeasure.EUCLIDEAN, limit=5, ) ```", "sources": ["https://cloud.google.com/firestore/docs/vector-search?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_vector-search_hl=ko.txt"}
{"question": "Firestore에서 벡터 색인을 설명하는 방법은 무엇인가요?", "answer": "Firestore에서 벡터 색인을 설명하려면 `gcloud firestore indexes composite describe` 명령어를 사용합니다. 예를 들어: ```bash gcloud firestore indexes composite describe index-id --database=database-id ```", "sources": ["https://cloud.google.com/firestore/docs/vector-search?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_vector-search_hl=ko.txt"}
{"question": "Firestore에서 벡터 쿼리의 결과를 가져오는 방법은 무엇인가요?", "answer": "Firestore에서 벡터 쿼리의 결과를 가져오려면 `get` 메서드를 사용하여 쿼리 결과를 가져옵니다. 예를 들어: ```python docs = vector_query.get() ```", "sources": ["https://cloud.google.com/firestore/docs/vector-search?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "cloud.google.com_firestore_docs_vector-search_hl=ko.txt"}
{"question": "Cloud Firestore에서 백업 일정을 어떻게 설정하나요?", "answer": "백업 일정을 설정하려면 Google Cloud 콘솔, Firebase CLI 또는 Terraform을 사용할 수 있습니다. 예를 들어, Firebase CLI를 사용하여 일일 백업 일정을 만들려면 다음 명령어를 사용합니다: ``` firebase firestore:backups:schedules:create \\ --database 'DATABASE_ID' \\ --recurrence 'DAILY' \\ --retention RETENTION_PERIOD ``` 여기서 DATABASE_ID는 백업할 데이터베이스의 ID이며, RETENTION_PERIOD는 최대 14주(14w)로 설정할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/backups?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_backups_hl=ko.txt"}
{"question": "Firebase CLI를 사용하여 주간 백업 일정을 설정하는 방법은 무엇인가요?", "answer": "주간 백업 일정을 설정하려면 Firebase CLI에서 다음 명령어를 사용합니다: ``` firebase firestore:backups:schedules:create \\ --database 'DATABASE_ID' \\ --recurrence 'WEEKLY' \\ --retention RETENTION_PERIOD \\ --day-of-week DAY ``` 여기서 DAY는 백업을 수행할 요일을 설정합니다.", "sources": ["https://firebase.google.com/docs/firestore/backups?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_backups_hl=ko.txt"}
{"question": "백업 일정을 삭제하려면 어떻게 해야 하나요?", "answer": "백업 일정을 삭제하려면 Firebase CLI에서 다음 명령어를 사용합니다: ``` firebase firestore:backups:schedules:delete \\ BACKUP_SCHEDULE ``` 여기서 BACKUP_SCHEDULE은 삭제할 백업 일정의 전체 리소스 이름입니다.", "sources": ["https://firebase.google.com/docs/firestore/backups?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_backups_hl=ko.txt"}
{"question": "Cloud Firestore에서 백업을 복원하는 방법은 무엇인가요?", "answer": "백업을 복원하려면 Google Cloud 콘솔에서 데이터베이스 페이지로 이동한 후, 예약된 백업 열에서 복원할 백업을 선택하고 Cloud Shell을 사용하여 복원을 클릭합니다. gcloud CLI를 사용할 경우 다음 명령어를 사용합니다: ``` gcloud firestore databases restore \\ --source-backup=projects/PROJECT_ID/locations/LOCATION/backups/BACKUP_ID \\ --destination-database='DATABASE_ID' ```", "sources": ["https://firebase.google.com/docs/firestore/backups?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_backups_hl=ko.txt"}
{"question": "백업의 보관 기간을 어떻게 설정하나요?", "answer": "백업의 보관 기간은 백업 일정을 설정할 때 지정할 수 있으며, 최대 14주(14w)로 설정할 수 있습니다. Firebase CLI를 사용할 경우, `--retention RETENTION_PERIOD` 플래그를 사용하여 설정합니다.", "sources": ["https://firebase.google.com/docs/firestore/backups?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_backups_hl=ko.txt"}
{"question": "백업을 삭제하면 어떤 일이 발생하나요?", "answer": "백업 일정을 삭제해도 이 일정으로 이미 만든 백업은 삭제되지 않습니다. 보관 기간이 지난 후 만료될 때까지 기다리거나 수동으로 삭제해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/backups?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_backups_hl=ko.txt"}
{"question": "백업을 만들기 위해 필요한 요금제는 무엇인가요?", "answer": "백업 기능을 사용하려면 Blaze 요금제를 이용해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/backups?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_backups_hl=ko.txt"}
{"question": "백업을 관리하기 위해 필요한 IAM 역할은 무엇인가요?", "answer": "백업 및 백업 일정을 관리하기 위해 필요한 IAM 역할은 다음과 같습니다: roles/datastore.owner, roles/datastore.backupsAdmin, roles/datastore.backupsViewer, roles/datastore.backupSchedulesAdmin, roles/datastore.backupSchedulesViewer, roles/datastore.restoreAdmin.", "sources": ["https://firebase.google.com/docs/firestore/backups?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_backups_hl=ko.txt"}
{"question": "백업의 세부정보를 확인하는 방법은 무엇인가요?", "answer": "백업의 세부정보를 확인하려면 Firebase CLI에서 다음 명령어를 사용합니다: ``` firebase firestore:backups:get BACKUP ``` 여기서 BACKUP은 백업의 전체 리소스 이름입니다.", "sources": ["https://firebase.google.com/docs/firestore/backups?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_backups_hl=ko.txt"}
{"question": "백업의 메타데이터는 어떻게 관리되나요?", "answer": "Cloud Firestore는 백업과 관련된 메타데이터 및 데이터베이스와 관련된 백업 일정을 저장하며, 데이터베이스의 모든 백업이 만료되거나 삭제될 때까지 이 메타데이터를 유지합니다.", "sources": ["https://firebase.google.com/docs/firestore/backups?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_backups_hl=ko.txt"}
{"question": "Cloud Firestore에서 데이터베이스 위치를 선택할 때 고려해야 할 사항은 무엇인가요?", "answer": "데이터베이스 인스턴스를 만들 때 사용자 및 컴퓨팅 리소스와 가장 가까운 데이터베이스 위치를 선택해야 합니다. 광범위한 네트워크 홉을 사용할 경우 오류가 발생하기 쉬우며 쿼리 지연 시간이 길어집니다. 멀티 리전 위치를 선택하면 애플리케이션의 가용성과 내구성을 극대화할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/locations?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_best-practices_hl=ko.txt"}
{"question": "문서 ID를 설정할 때 피해야 할 규칙은 무엇인가요?", "answer": "문서 ID에 . 및 ..를 사용하지 않고, 슬래시(/)를 사용하지 않아야 하며, 단조롭게 증가하는 문서 ID를 사용하지 않아야 합니다. 예를 들어 Customer1, Customer2와 같은 형식은 피해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/best-practices?hl=ko#document_ids"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_best-practices_hl=ko.txt"}
{"question": "Cloud Firestore에서 색인 팬아웃을 줄이기 위한 권장사항은 무엇인가요?", "answer": "색인 팬아웃을 줄이기 위해 컬렉션 수준 색인 예외를 설정하고, 사용하지 않는 색인이 지정된 값을 삭제하여 스토리지 비용을 줄이는 것이 좋습니다. 또한, 트랜잭션에서 문서 수를 줄이는 것이 권장됩니다.", "sources": ["https://firebase.google.com/docs/firestore/best-practices?hl=ko#indexing"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_best-practices_hl=ko.txt"}
{"question": "Cloud Firestore에서 비동기식 호출을 사용하는 이유는 무엇인가요?", "answer": "비동기식 호출을 사용하면 지연 시간에 미치는 영향을 최소화할 수 있습니다. 예를 들어, 응답을 렌더링하기 전에 문서 조회 결과와 쿼리 결과를 필요로 하는 경우, 쿼리를 실행하기 전에 조회가 완료될 때까지 동기식으로 대기할 필요가 없습니다.", "sources": ["https://firebase.google.com/docs/firestore/best-practices?hl=ko#reading_and_writing"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_best-practices_hl=ko.txt"}
{"question": "Cloud Firestore에서 트랜잭션 재시도를 어떻게 구현하나요?", "answer": "Cloud Firestore SDK 및 클라이언트 라이브러리는 일시적인 오류를 처리하기 위해 실패한 트랜잭션을 자동으로 재시도합니다. REST 또는 RPC API를 통해 Cloud Firestore에 직접 액세스하는 경우, 트랜잭션 재시도를 구현하여 안정성을 높일 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/best-practices?hl=ko#transaction_retries"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_best-practices_hl=ko.txt"}
{"question": "삭제된 데이터 건너뛰기를 피하기 위한 쿼리 작성 방법은 무엇인가요?", "answer": "최근에 삭제된 데이터를 건너뛰는 쿼리를 피하기 위해 start_at 메서드를 사용하여 시작하기에 가장 좋은 위치를 찾는 것이 좋습니다. 예를 들어, 삭제된 문서에서 색인 항목을 스캔하지 않도록 쿼리를 최적화할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/best-practices?hl=ko#avoiding_skipping_deleted_data"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_best-practices_hl=ko.txt"}
{"question": "Cloud Firestore에서 새 컬렉션으로 트래픽을 마이그레이션할 때의 전략은 무엇인가요?", "answer": "새 컬렉션으로 트래픽을 마이그레이션할 때는 점진적으로 트래픽을 늘려야 하며, 기존 컬렉션에서 읽기 작업을 수행하고 문서가 누락된 경우 새 컬렉션에서 읽어오는 방식으로 부하를 점차적으로 늘리는 것이 좋습니다.", "sources": ["https://firebase.google.com/docs/firestore/best-practices?hl=ko#traffic_increase"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_best-practices_hl=ko.txt"}
{"question": "Cloud Firestore에서 무단 액세스를 방지하기 위한 방법은 무엇인가요?", "answer": "Cloud Firestore Security Rules를 사용하여 데이터베이스에 대한 무단 작업을 방지할 수 있습니다. 규칙을 통해 악의적인 사용자가 전체 데이터베이스를 반복적으로 다운로드하는 상황을 피할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/security/get-started?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_best-practices_hl=ko.txt"}
{"question": "Cloud Firestore에서 필드 이름에 사용하지 말아야 할 문자는 무엇인가요?", "answer": "필드 이름에 마침표(.), 왼쪽 대괄호([), 오른쪽 대괄호(]), 별표(*), 역따옴표(`)와 같은 문자는 사용하지 않아야 합니다. 이러한 문자는 추가 이스케이프 처리가 필요합니다.", "sources": ["https://firebase.google.com/docs/firestore/best-practices?hl=ko#field_names"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_best-practices_hl=ko.txt"}
{"question": "Cloud Firestore에서 읽기 및 쓰기 작업의 최대 속도는 어떻게 결정되나요?", "answer": "앱에서 단일 문서를 업데이트할 수 있는 최대 속도는 워크로드에 따라 달라지며, 쓰기 속도, 요청 간 경합, 영향을 받는 색인 수 등이 영향을 미칩니다. 부하 테스트를 통해 성능을 특성화하는 것이 좋습니다.", "sources": ["https://firebase.google.com/docs/firestore/best-practices?hl=ko#single_document_updates"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_best-practices_hl=ko.txt"}
{"question": "Cloud Firestore 데이터 번들이란 무엇인가요?", "answer": "데이터 번들은 하나 이상의 문서 및 쿼리 스냅샷을 패키지로 만들기 위해 사용자가 빌드하고 이름이 지정된 쿼리를 추출할 수 있는 정적 바이너리 파일입니다.", "sources": ["https://firebase.google.com/docs/firestore/bundles?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_bundles_hl=ko.txt"}
{"question": "데이터 번들을 사용하면 어떤 이점이 있나요?", "answer": "데이터 번들을 사용하면 Cloud Firestore 백엔드 호출 없이도 시작 시에 문서를 사용할 수 있어 앱에서 일반 쿼리 결과를 더 빨리 로드할 수 있으며, 결과가 로컬 캐시에서 로드되면 액세스 비용도 줄어듭니다.", "sources": ["https://firebase.google.com/docs/firestore/bundles?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_bundles_hl=ko.txt"}
{"question": "데이터 번들을 빌드하는 방법은 무엇인가요?", "answer": "Node.js Admin SDK를 사용하여 번들을 빌드할 수 있으며, 예를 들어 FirestoreClient.getFirestore(app)로 Firestore 인스턴스를 생성한 후, 쿼리를 실행하고 번들을 생성하는 코드를 작성할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/bundles?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_bundles_hl=ko.txt"}
{"question": "Python에서 데이터 번들을 어떻게 빌드하나요?", "answer": "Python에서는 google.cloud.firestore와 google.cloud.firestore_bundle 모듈을 사용하여 FirestoreClient를 생성하고, 문서 스냅샷을 추가한 후, 이름이 지정된 쿼리를 추가하여 번들을 빌드할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/bundles?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_bundles_hl=ko.txt"}
{"question": "데이터 번들을 클라이언트에 어떻게 제공하나요?", "answer": "Cloud Storage와 같은 서비스에서 번들을 다운로드하거나 CDN을 통해 클라이언트 앱에 번들을 제공할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/bundles?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_bundles_hl=ko.txt"}
{"question": "클라이언트에서 데이터 번들을 어떻게 로드하나요?", "answer": "클라이언트 SDK를 사용하여 loadBundle 메서드를 호출하고, 반환된 객체를 통해 프로미스의 상태를 모니터링하여 번들 로드 작업의 완료 상태를 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/bundles?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_bundles_hl=ko.txt"}
{"question": "웹에서 데이터 번들을 로드하는 코드 예시는 무엇인가요?", "answer": "웹에서는 import { loadBundle, namedQuery, getDocsFromCache } from \"firebase/firestore\";를 사용하여 번들을 로드할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/bundles?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_bundles_hl=ko.txt"}
{"question": "Objective-C에서 데이터 번들을 로드할 때 주의할 점은 무엇인가요?", "answer": "Objective-C에서는 watchOS 및 앱 클립 대상에서 이 제품을 사용할 수 없으며, NSInputStream을 사용하여 URL에서 입력 스트림을 생성해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/bundles?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_bundles_hl=ko.txt"}
{"question": "데이터 번들을 로드할 때 발생할 수 있는 오류는 무엇인가요?", "answer": "번들 로드 중에 \"Expected bundle load to be completed\"와 같은 오류가 발생할 수 있으며, 이는 번들 로드가 완료되지 않았음을 나타냅니다.", "sources": ["https://firebase.google.com/docs/firestore/bundles?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_bundles_hl=ko.txt"}
{"question": "데이터 번들을 사용하기 위한 기본 단계는 무엇인가요?", "answer": "데이터 번들을 사용하기 위해서는 Admin SDK로 번들을 빌드하고, 로컬 스토리지 또는 CDN에서 번들을 제공한 후, 클라이언트에 번들을 로드하는 3단계를 따라야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/bundles?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_bundles_hl=ko.txt"}
{"question": "Firebase 클라이언트 라이브러리를 사용하는 이유는 무엇인가요?", "answer": "Firebase 클라이언트 라이브러리는 Firebase API로의 직접적인 HTTP 및 RPC 호출도 가능하지만, 권장사항을 구현하며 데이터베이스에 보다 쉽게 액세스할 수 있도록 합니다.", "sources": ["https://firebase.google.com/docs/firestore/client/libraries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_client_libraries_hl=ko.txt"}
{"question": "Firebase 모바일 및 웹 SDK의 주요 기능은 무엇인가요?", "answer": "Firebase 모바일 및 웹 SDK는 서버리스 앱 아키텍처를 지원하며, 실시간 업데이트와 오프라인 데이터 지속성을 제공합니다.", "sources": ["https://firebase.google.com/docs/firestore/client/libraries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_client_libraries_hl=ko.txt"}
{"question": "Firebase Admin SDK를 사용하여 Firebase에 액세스하는 방법은 무엇인가요?", "answer": "Firebase Admin SDK를 사용하여 Firebase와 다른 여러 Firebase 제품을 단일 라이브러리에 번들로 묶을 수 있으며, Java, Python, Node.js, Go를 이용한 Firebase 액세스를 지원합니다.", "sources": ["https://firebase.google.com/docs/firestore/client/libraries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_client_libraries_hl=ko.txt"}
{"question": "Firestore Lite는 무엇이며, 어떤 경우에 사용하나요?", "answer": "Firestore Lite는 경량의 REST 전용 SDK로, Firebase의 표준 클라이언트 SDK 외에 제공되며, 간단한 데이터베이스 작업을 수행할 때 유용합니다.", "sources": ["https://firebase.google.com/docs/firestore/client/libraries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_client_libraries_hl=ko.txt"}
{"question": "Firebase 서버 클라이언트 라이브러리를 사용하는 이유는 무엇인가요?", "answer": "Firebase 서버 클라이언트 라이브러리는 데이터베이스에 대한 전체 액세스 권한이 있는 Firebase 환경을 만들며, 관리 데이터베이스 작업을 수행하거나 사용자와 Firebase 데이터베이스 사이에 중간 서버가 있는 아키텍처를 원할 때 사용됩니다.", "sources": ["https://firebase.google.com/docs/firestore/client/libraries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_client_libraries_hl=ko.txt"}
{"question": "Firebase의 각 SDK에 대한 자세한 내용을 어디에서 찾을 수 있나요?", "answer": "각 SDK에 대한 자세한 내용은 Firebase 공식 문서의 API 참고 문서 및 GitHub 리포지토리에서 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/client/libraries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_client_libraries_hl=ko.txt"}
{"question": "Firebase의 보안 규칙을 어떻게 설정하나요?", "answer": "Firebase의 보안 규칙은 Firebase 문서의 보안 섹션에서 설정 방법을 확인할 수 있으며, 이를 통해 데이터베이스에 대한 접근을 제어할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/client/libraries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_client_libraries_hl=ko.txt"}
{"question": "Firebase 클라이언트 라이브러리와 서버 클라이언트 라이브러리의 차이점은 무엇인가요?", "answer": "클라이언트 라이브러리는 서버리스 아키텍처를 지원하며, 보안 규칙에 따라 요청이 평가됩니다. 반면, 서버 클라이언트 라이브러리는 전체 액세스 권한을 가진 Firebase 환경을 만들고, 보안 규칙이 적용되지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/client/libraries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_client_libraries_hl=ko.txt"}
{"question": "Firebase의 실시간 업데이트 기능은 어떻게 작동하나요?", "answer": "Firebase의 실시간 업데이트 기능은 클라이언트가 데이터베이스의 변경 사항을 실시간으로 수신할 수 있도록 하여, 데이터의 일관성을 유지합니다.", "sources": ["https://firebase.google.com/docs/firestore/client/libraries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_client_libraries_hl=ko.txt"}
{"question": "Firebase에서 제공하는 다양한 언어의 클라이언트 라이브러리는 무엇이 있나요?", "answer": "Firebase는 C#, Go, Java, Node.js, PHP, Python, Ruby용 서버 클라이언트 라이브러리를 지원합니다.", "sources": ["https://firebase.google.com/docs/firestore/client/libraries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_client_libraries_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 어떻게 생성하나요?", "answer": "Cloud Firestore에서 문서는 컬렉션에 저장되며, 사용자가 문서에 데이터를 할당하면 자동으로 생성됩니다. 컬렉션이나 문서가 없으면 Cloud Firestore가 이를 자동으로 만듭니다.", "sources": ["https://firebase.google.com/docs/firestore/data-model?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_data-model_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서의 구조는 어떻게 되나요?", "answer": "Cloud Firestore의 문서는 키-값 쌍으로 구성된 필드를 포함하는 간단한 레코드입니다. 각 문서는 이름으로 식별되며, 다양한 데이터 유형(불리언, 숫자, 문자열 등)을 지원합니다.", "sources": ["https://firebase.google.com/docs/firestore/data-model?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_data-model_hl=ko.txt"}
{"question": "Cloud Firestore에서 하위 컬렉션을 어떻게 생성하나요?", "answer": "하위 컬렉션은 특정 문서와 관련된 컬렉션으로, 문서 내에 추가로 생성할 수 있습니다. 예를 들어, \"rooms\" 컬렉션의 \"roomA\" 문서에 \"messages\"라는 하위 컬렉션을 추가할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/data-model?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_data-model_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서 참조를 만드는 방법은 무엇인가요?", "answer": "문서 참조는 데이터베이스 내 위치를 가리키는 객체로, 예를 들어 Java에서는 `DocumentReference alovelaceDocumentRef = db.collection(\"users\").document(\"alovelace\");`와 같이 생성할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/data-model?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_data-model_hl=ko.txt"}
{"question": "Cloud Firestore에서 컬렉션 참조를 만드는 방법은 무엇인가요?", "answer": "컬렉션 참조는 특정 컬렉션을 가리키는 객체로, 예를 들어 Java에서는 `CollectionReference usersCollectionRef = db.collection(\"users\");`와 같이 생성할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/data-model?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_data-model_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서의 이름은 어떻게 관리되나요?", "answer": "컬렉션 내의 문서 이름은 고유해야 하며, 사용자 ID와 같은 고유한 키를 제공하거나 Cloud Firestore에서 임의 ID를 자동으로 생성하도록 할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/data-model?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_data-model_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서의 최대 크기는 얼마인가요?", "answer": "Cloud Firestore에서 문서는 최대 1MB의 크기를 가질 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/data-model?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_data-model_hl=ko.txt"}
{"question": "Cloud Firestore에서 계층적 데이터 구조를 어떻게 활용하나요?", "answer": "Cloud Firestore의 계층적 데이터 구조를 활용하여, 예를 들어 \"rooms\" 컬렉션의 각 문서에 \"messages\"라는 하위 컬렉션을 추가하여 메시지를 저장할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/data-model?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_data-model_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 삭제할 때 하위 컬렉션은 어떻게 되나요?", "answer": "문서를 삭제해도 하위 컬렉션은 삭제되지 않으며, 하위 컬렉션의 문서는 상위 문서가 삭제된 후에도 존재할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/data-model?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_data-model_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서의 복잡한 중첩된 객체는 어떻게 구성하나요?", "answer": "문서 내 데이터를 구조화할 때, 복잡한 중첩된 객체는 맵으로 구성할 수 있으며, 예를 들어 사용자 이름을 `name: { first: \"Ada\", last: \"Lovelace\" }`와 같이 표현할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/data-model?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_data-model_hl=ko.txt"}
{"question": "Dataflow를 사용하여 Cloud Firestore에서 데이터를 일괄 처리하는 방법은 무엇인가요?", "answer": "Dataflow를 사용하여 Apache Beam 파이프라인에서 Cloud Firestore 작업을 수행할 수 있습니다. Apache Beam은 Cloud Firestore 커넥터를 지원하며, 이를 통해 일괄 및 스트리밍 작업을 실행할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/dataflow-connector?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_dataflow-connector_hl=ko.txt"}
{"question": "Cloud Firestore에 데이터를 쓰는 파이프라인의 예시는 무엇인가요?", "answer": "다음은 cities-beam-sample 컬렉션에 문서를 만드는 예시입니다. ```java public class ExampleFirestoreBeamWrite { private static final FirestoreOptions FIRESTORE_OPTIONS = FirestoreOptions.getDefaultInstance(); public static void main(String[] args) { runWrite(args, \"cities-beam-sample\"); PipelineOptions options = PipelineOptionsFactory.fromArgs(args).withValidation().as(PipelineOptions.class); Pipeline pipeline = Pipeline.create(options); RpcQosOptions rpcQosOptions = RpcQosOptions.newBuilder() .withHintMaxNumWorkers(options.as(DataflowPipelineOptions.class).getMaxNumWorkers()) .build(); Write write1 = Write.newBuilder().setUpdate(...); Write write2 = Write.newBuilder().setUpdate(...); pipeline.apply(Create.of(write1, write2)) .apply(FirestoreIO.v1().write().batchWrite().withRpcQosOptions(rpcQosOptions).build()); } } ```", "sources": ["https://firebase.google.com/docs/firestore/dataflow-connector?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_dataflow-connector_hl=ko.txt"}
{"question": "Cloud Firestore에서 데이터를 읽고 필터링하는 파이프라인의 예시는 무엇인가요?", "answer": "다음은 cities-beam-sample 컬렉션에서 문서를 읽고, country 필드가 USA로 설정된 문서에 대해 필터를 적용하는 예시입니다. ```java public class ExampleFirestoreBeamRead { public static void main(String[] args) { runRead(args, \"cities-beam-sample\"); FirestoreOptions firestoreOptions = FirestoreOptions.getDefaultInstance(); PipelineOptions options = PipelineOptionsFactory.fromArgs(args).withValidation().as(PipelineOptions.class); Pipeline pipeline = Pipeline.create(options); RpcQosOptions rpcQosOptions = RpcQosOptions.newBuilder() .withHintMaxNumWorkers(options.as(DataflowPipelineOptions.class).getMaxNumWorkers()) .build(); pipeline.apply(Create.of(collectionId)) .apply(new FilterDocumentsQuery(firestoreOptions.getProjectId(), firestoreOptions.getDatabaseId())) .apply(FirestoreIO.v1().read().runQuery().withRpcQosOptions(rpcQosOptions).build()) .apply(ParDo.of(new DoFn<RunQueryRequest, String>() { @ProcessElement public void processElement(ProcessContext c) { System.out.println(c.element()); } })); } } ```", "sources": ["https://firebase.google.com/docs/firestore/dataflow-connector?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_dataflow-connector_hl=ko.txt"}
{"question": "Dataflow API를 사용하기 전에 어떤 설정을 해야 하나요?", "answer": "Dataflow API를 사용하기 전에 Dataflow API를 사용 설정해야 합니다. 이를 위해 Google Cloud Console에서 API를 활성화해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/dataflow-connector?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_dataflow-connector_hl=ko.txt"}
{"question": "Cloud Firestore 커넥터는 어떤 언어로 제공되나요?", "answer": "Apache Beam용 Cloud Firestore 커넥터는 자바로 제공됩니다.", "sources": ["https://firebase.google.com/docs/firestore/dataflow-connector?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_dataflow-connector_hl=ko.txt"}
{"question": "Dataflow에서 Cloud Firestore 워크로드를 실행할 때 발생하는 비용은 어떻게 되나요?", "answer": "Dataflow에서 Cloud Firestore 워크로드를 실행하면 Cloud Firestore 사용량 및 Dataflow 사용량에 대한 비용이 발생합니다. 작업에 사용된 리소스 비용이 Dataflow 사용량으로 청구됩니다.", "sources": ["https://firebase.google.com/docs/firestore/dataflow-connector?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_dataflow-connector_hl=ko.txt"}
{"question": "샘플 파이프라인의 소스 코드는 어디에서 찾을 수 있나요?", "answer": "샘플 파이프라인의 소스 코드는 googleapis/java-firestore GitHub 저장소에서 제공됩니다.", "sources": ["https://firebase.google.com/docs/firestore/dataflow-connector?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_dataflow-connector_hl=ko.txt"}
{"question": "FilterDocumentsQuery 클래스의 역할은 무엇인가요?", "answer": "FilterDocumentsQuery 클래스는 특정 컬렉션에서 country 필드가 \"USA\"인 문서를 필터링하는 쿼리를 생성하는 역할을 합니다.", "sources": ["https://firebase.google.com/docs/firestore/dataflow-connector?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_dataflow-connector_hl=ko.txt"}
{"question": "FirestoreIO.v1().write().batchWrite() 메서드는 어떤 기능을 수행하나요?", "answer": "FirestoreIO.v1().write().batchWrite() 메서드는 Firestore에 문서를 일괄적으로 쓰는 기능을 수행합니다.", "sources": ["https://firebase.google.com/docs/firestore/dataflow-connector?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_dataflow-connector_hl=ko.txt"}
{"question": "Dataflow 및 Apache Beam에 대한 자세한 내용은 어디에서 확인할 수 있나요?", "answer": "Dataflow 및 Apache Beam에 대한 자세한 내용은 Dataflow 문서에서 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/dataflow-connector?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_dataflow-connector_hl=ko.txt"}
{"question": "Cloud Firestore에서 Cloud Functions를 사용하여 어떤 이벤트를 트리거할 수 있나요?", "answer": "Cloud Firestore에서 Cloud Functions를 사용하여 다음과 같은 이벤트를 트리거할 수 있습니다: onCreate (문서를 처음으로 기록할 때), onUpdate (이미 존재하는 문서에서 값이 변경되었을 때), onDelete (데이터가 있는 문서가 삭제될 때), onWrite (onCreate, onUpdate 또는 onDelete가 트리거될 때).", "sources": ["https://firebase.google.com/docs/firestore/extend-with-functions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_extend-with-functions_hl=ko.txt"}
{"question": "Cloud Firestore 트리거 함수를 정의하는 방법은 무엇인가요?", "answer": "Cloud Firestore 트리거 함수를 정의하려면 문서 경로와 이벤트 유형을 지정해야 합니다. 예를 들어, `exports.myFunction = functions.firestore.document('my-collection/{docId}').onWrite((change, context) => { /* ... */ });`와 같이 작성합니다.", "sources": ["https://firebase.google.com/docs/firestore/extend-with-functions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_extend-with-functions_hl=ko.txt"}
{"question": "특정 문서의 모든 변경에 대해 이벤트를 트리거하는 방법은 무엇인가요?", "answer": "특정 문서의 모든 변경에 대해 이벤트를 트리거하려면 다음과 같이 작성합니다: `exports.myFunctionName = functions.firestore.document('users/marie').onWrite((change, context) => { /* ... */ });`.", "sources": ["https://firebase.google.com/docs/firestore/extend-with-functions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_extend-with-functions_hl=ko.txt"}
{"question": "와일드 카드 패턴을 사용하여 Cloud Firestore 트리거를 설정하는 방법은 무엇인가요?", "answer": "와일드 카드 패턴을 사용하여 Cloud Firestore 트리거를 설정하려면 문서 경로에 `{userId}`와 같은 와일드 카드를 포함시킵니다. 예를 들어, `exports.useWildcard = functions.firestore.document('users/{userId}').onWrite((change, context) => { /* ... */ });`와 같이 작성합니다.", "sources": ["https://firebase.google.com/docs/firestore/extend-with-functions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_extend-with-functions_hl=ko.txt"}
{"question": "Cloud Functions의 트리거가 여러 데이터베이스와 연결될 수 있나요?", "answer": "아니요, Cloud Functions의 트리거는 단일 데이터베이스와 연결됩니다. 여러 데이터베이스와 일치하는 트리거를 만들 수 없습니다.", "sources": ["https://firebase.google.com/docs/firestore/extend-with-functions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_extend-with-functions_hl=ko.txt"}
{"question": "Cloud Firestore 트리거의 이벤트가 전송되지 않는 경우는 어떤 경우인가요?", "answer": "이벤트가 전송되지 않는 경우는 요청 크기가 최대 요청 크기를 초과할 때 발생할 수 있습니다. 이 경우 이벤트는 Cloud Functions로 전달되지 않으며, 해당 이벤트는 플랫폼 로그에 로깅됩니다.", "sources": ["https://firebase.google.com/docs/firestore/extend-with-functions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_extend-with-functions_hl=ko.txt"}
{"question": "Cloud Firestore에서 트리거를 삭제할 때 주의해야 할 점은 무엇인가요?", "answer": "데이터베이스를 삭제해도 해당 데이터베이스의 트리거가 자동으로 삭제되지 않습니다. 트리거는 이벤트 제공을 중지하지만, 삭제하기 전까지 계속 존재합니다.", "sources": ["https://firebase.google.com/docs/firestore/extend-with-functions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_extend-with-functions_hl=ko.txt"}
{"question": "Cloud Functions에서 멱등 함수란 무엇인가요?", "answer": "멱등 함수는 동일한 입력에 대해 여러 번 호출하더라도 항상 동일한 결과를 반환하는 함수를 의미합니다. Cloud Functions에서는 이벤트가 최소 1회 전송되지만, 하나의 이벤트에 함수가 여러 번 호출될 수 있으므로 멱등성을 고려하여 함수를 작성해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/extend-with-functions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_extend-with-functions_hl=ko.txt"}
{"question": "Cloud Firestore 트리거를 사용하여 특정 문서의 생성, 업데이트 및 삭제를 처리하는 방법은 무엇인가요?", "answer": "특정 문서의 생성, 업데이트 및 삭제를 처리하려면 각각의 이벤트에 대해 다음과 같이 함수를 정의합니다: - 생성: `exports.createUser = functions.firestore.document('users/{userId}').onCreate((snap, context) => { /* ... */ });` - 업데이트: `exports.updateUser = functions.firestore.document('users/{userId}').onUpdate((change, context) => { /* ... */ });` - 삭제: `exports.deleteUser = functions.firestore.document('users/{userId}').onDelete((snap, context) => { /* ... */ });`", "sources": ["https://firebase.google.com/docs/firestore/extend-with-functions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_extend-with-functions_hl=ko.txt"}
{"question": "Cloud Functions for Firebase SDK에서 제공하는 객체는 무엇인가요?", "answer": "Cloud Functions for Firebase SDK는 특정 Cloud Firestore 이벤트에 연결된 핸들러를 만들 수 있는 `functions.firestore` 객체를 제공합니다.", "sources": ["https://firebase.google.com/docs/firestore/extend-with-functions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_extend-with-functions_hl=ko.txt"}
{"question": "AngularFire를 사용하여 Cloud Firestore에 데이터를 추가하는 방법은 무엇인가요?", "answer": "AngularFire를 사용하면 Firebase용 Angular 라이브러리를 통해 데이터를 문서 및 컬렉션에 추가할 수 있습니다. AngularFire의 문서를 참조하여 구체적인 구현 방법을 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/library-integrations?hl=ko,", "https://github.com/angular/angularfire2/tree/master/docs/firestore"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_library-integrations_hl=ko.txt"}
{"question": "FirebaseUI를 사용하여 Android 앱에서 Cloud Firestore 데이터를 UI에 바인딩하는 방법은 무엇인가요?", "answer": "FirebaseUI 라이브러리를 사용하면 Android 앱에서 Cloud Firestore 데이터베이스의 데이터를 UI에 쉽게 바인딩할 수 있습니다. Android 문서를 참조하여 구체적인 사용법을 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/library-integrations?hl=ko,", "https://github.com/firebase/FirebaseUI-Android/"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_library-integrations_hl=ko.txt"}
{"question": "React Native Firebase를 사용하여 Cloud Firestore를 시작하는 방법은 무엇인가요?", "answer": "React Native Firebase는 공식 지원되는 Firebase용 React Native 라이브러리로, Cloud Firestore와의 통합을 지원합니다. React Native 및 Cloud Firestore로 가능한 작업에 대한 자세한 내용은 해당 문서를 참조하세요.", "sources": ["https://firebase.google.com/docs/firestore/library-integrations?hl=ko,", "https://rnfirebase.io/firestore/usage"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_library-integrations_hl=ko.txt"}
{"question": "FirebaseUI를 사용하여 iOS 앱에서 Cloud Firestore 데이터를 UI에 바인딩하는 방법은 무엇인가요?", "answer": "FirebaseUI 라이브러리를 사용하면 iOS 앱에서 Cloud Firestore 데이터베이스의 데이터를 UI에 바인딩할 수 있습니다. iOS 문서를 참조하여 구체적인 사용법을 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/library-integrations?hl=ko,", "https://github.com/firebase/FirebaseUI-iOS/blob/master/README.md"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_library-integrations_hl=ko.txt"}
{"question": "Cloud Firestore와 통합할 수 있는 다른 오픈소스 라이브러리는 무엇이 있나요?", "answer": "Cloud Firestore는 다양한 오픈소스 라이브러리와의 통합이 가능하며, 주로 Cloud Firestore를 사용하는 개발자가 자주 이용하는 프레임워크로 이를 가져오는 과정에서 이루어집니다.", "sources": ["https://firebase.google.com/docs/firestore/library-integrations?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_library-integrations_hl=ko.txt"}
{"question": "Cloud Firestore의 오프라인 데이터 액세스를 활성화하는 방법은 무엇인가요?", "answer": "AngularFire를 사용하면 Cloud Firestore의 오프라인 데이터 액세스를 활성화할 수 있습니다. 구체적인 방법은 AngularFire 문서를 참조하세요.", "sources": ["https://firebase.google.com/docs/firestore/library-integrations?hl=ko,", "https://github.com/angular/angularfire2/tree/master/docs/firestore"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_library-integrations_hl=ko.txt"}
{"question": "Cloud Firestore를 자주 사용하는 프레임워크로 가져오는 통합 구현에 대해 문의할 수 있는 곳은 어디인가요?", "answer": "Cloud Firestore를 자주 사용하는 프레임워크로 가져오는 통합 구현에 관심이 있다면 Firebase Slack 채널이나 StackOverflow에 문의할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/library-integrations?hl=ko,", "https://firebase.community/,", "https://stackoverflow.com/questions/tagged/firebase"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_library-integrations_hl=ko.txt"}
{"question": "AngularFire의 문서에서 Cloud Firestore에 대한 구체적인 내용을 어디서 찾을 수 있나요?", "answer": "AngularFire의 문서에서 Cloud Firestore에 대한 구체적인 내용을 GitHub의 AngularFire 문서 페이지에서 찾을 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/library-integrations?hl=ko,", "https://github.com/angular/angularfire2/tree/master/docs/firestore"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_library-integrations_hl=ko.txt"}
{"question": "React Native Firebase의 문서에서 Cloud Firestore 사용법을 어디서 확인할 수 있나요?", "answer": "React Native Firebase의 문서에서 Cloud Firestore 사용법을 확인하려면 해당 공식 문서 페이지를 참조하면 됩니다.", "sources": ["https://firebase.google.com/docs/firestore/library-integrations?hl=ko,", "https://rnfirebase.io/docs"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_library-integrations_hl=ko.txt"}
{"question": "FirebaseUI를 사용하여 Android와 iOS에서 Cloud Firestore 데이터를 UI에 바인딩하는 방법은 어떻게 다른가요?", "answer": "FirebaseUI를 사용하여 Android와 iOS에서 Cloud Firestore 데이터를 UI에 바인딩하는 방법은 각 플랫폼의 문서에서 구체적으로 설명되어 있습니다. Android와 iOS 문서를 각각 참조하여 차이점을 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/library-integrations?hl=ko,", "https://github.com/firebase/FirebaseUI-Android/,", "https://github.com/firebase/FirebaseUI-iOS/blob/master/README.md"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_library-integrations_hl=ko.txt"}
{"question": "Cloud Firestore 데이터베이스를 생성하는 방법은 무엇인가요?", "answer": "Cloud Firestore 데이터베이스를 생성하려면 Firebase Console에서 Firestore 데이터베이스 페이지로 이동하여 \"데이터베이스 추가\"를 클릭하고 데이터베이스 ID와 지역을 입력한 후 \"데이터베이스 만들기\"를 클릭합니다. 또는 gcloud 명령어를 사용하여 `gcloud firestore databases create --database=DATABASE_ID --location=LOCATION --type=DATABASE_TYPE`를 실행할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-databases?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-databases_hl=ko.txt"}
{"question": "데이터베이스 ID의 유효성 기준은 무엇인가요?", "answer": "유효한 데이터베이스 ID는 문자, 숫자, 하이픈(-)만 포함해야 하며, 소문자로 시작하고 마지막은 문자 또는 숫자여야 합니다. 최소 4자에서 최대 63자까지 가능하며, UUID 형식은 사용할 수 없습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-databases?hl=ko#database_id"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-databases_hl=ko.txt"}
{"question": "데이터베이스 삭제 보호를 설정하는 방법은 무엇인가요?", "answer": "데이터베이스 삭제 보호를 설정하려면 데이터베이스를 만들 때 `--delete-protection` 플래그를 사용하거나, 기존 데이터베이스의 구성을 업데이트할 때 `gcloud firestore databases update --database=DATABASE_ID --delete-protection` 명령어를 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-databases?hl=ko#update_the_delete_protection_setting"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-databases_hl=ko.txt"}
{"question": "Firebase CLI를 사용하여 데이터베이스를 나열하는 방법은 무엇인가요?", "answer": "Firebase CLI를 사용하여 데이터베이스를 나열하려면 `firebase firestore:databases:list` 명령어를 실행하면 됩니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-databases?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-databases_hl=ko.txt"}
{"question": "데이터베이스를 삭제하는 방법은 무엇인가요?", "answer": "데이터베이스를 삭제하려면 Firebase Console에서 Firestore 데이터베이스 페이지로 이동하여 데이터베이스를 선택한 후 삭제를 클릭하거나, gcloud 명령어를 사용하여 `gcloud firestore databases delete --database=DATABASE_ID`를 실행합니다. 삭제 보호가 설정된 경우 먼저 삭제 보호를 해제해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-databases?hl=ko#delete-database"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-databases_hl=ko.txt"}
{"question": "데이터베이스 클론을 만드는 방법은 무엇인가요?", "answer": "데이터베이스 클론을 만들려면 gcloud 명령어를 사용하여 `gcloud alpha firestore databases clone --source-database='SOURCE_DATABASE' --snapshot-time='PITR_TIMESTAMP' --destination-database='DESTINATION_DATABASE_ID'`를 실행합니다. 이때 소스 데이터베이스와 타임스탬프를 지정해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-databases?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-databases_hl=ko.txt"}
{"question": "데이터베이스에 대한 IAM 조건을 설정하는 방법은 무엇인가요?", "answer": "IAM 조건을 설정하려면 `gcloud projects add-iam-policy-binding PROJECT_ID --member='user:EMAIL' --role='roles/datastore.user' --condition='expression=resource.name==\"projects/PROJECT_ID/databases/DATABASE_ID\",title=TITLE,description=DESCRIPTION'` 명령어를 사용하여 특정 데이터베이스에 대한 액세스 권한을 부여할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-databases?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-databases_hl=ko.txt"}
{"question": "데이터베이스의 세부정보를 확인하는 방법은 무엇인가요?", "answer": "데이터베이스의 세부정보를 확인하려면 gcloud 명령어를 사용하여 `gcloud firestore databases describe --database=DATABASE_ID`를 실행하거나 Firebase CLI에서 `firebase firestore:databases:get DATABASE_ID` 명령어를 사용할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-databases?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-databases_hl=ko.txt"}
{"question": "Cloud Firestore의 Security Rules을 배포하는 방법은 무엇인가요?", "answer": "Firebase CLI를 사용하여 각 데이터베이스에 Cloud Firestore Security Rules을 배포하려면 `firebase deploy --only firestore:rules` 명령어를 사용합니다. 자세한 내용은 Cloud Firestore Security Rules 관리 및 배포 가이드를 참조하세요.", "sources": ["https://firebase.google.com/docs/firestore/manage-databases?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-databases_hl=ko.txt"}
{"question": "데이터베이스를 삭제한 후 재사용할 수 있는 시간은 얼마인가요?", "answer": "데이터베이스를 삭제한 후 5분 동안 해당 데이터베이스 ID를 재사용할 수 없습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-databases?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-databases_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 추가하는 방법은 무엇인가요?", "answer": "Cloud Firestore에 문서를 추가하려면 `add()` 메서드를 사용하여 새 문서를 추가하거나, `set()` 메서드를 사용하여 문서 ID를 명시적으로 지정하여 문서를 추가할 수 있습니다. 예를 들어, Java에서는 다음과 같이 사용할 수 있습니다: ```java Map<String, Object> data = new HashMap<>(); data.put(\"name\", \"Tokyo\"); data.put(\"country\", \"Japan\"); ApiFuture<DocumentReference> addedDocRef = db.collection(\"cities\").add(data); System.out.println(\"Added document with ID: \" + addedDocRef.get().getId()); ```", "sources": ["https://firebase.google.com/docs/firestore/manage-data/add-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_add-data_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 업데이트하는 방법은 무엇인가요?", "answer": "문서를 업데이트하려면 `update()` 메서드를 사용하여 특정 필드를 업데이트할 수 있습니다. 예를 들어, Python에서는 다음과 같이 사용할 수 있습니다: ```python city_ref = db.collection(\"cities\").document(\"DC\") city_ref.update({\"capital\": True}) ```", "sources": ["https://firebase.google.com/docs/firestore/manage-data/add-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_add-data_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 설정할 때 데이터 병합을 어떻게 하나요?", "answer": "문서를 설정할 때 기존 문서와 병합하려면 `set()` 메서드에 `SetOptions.merge()`를 사용합니다. 예를 들어, Java에서는 다음과 같이 사용할 수 있습니다: ```java Map<String, Object> update = new HashMap<>(); update.put(\"capital\", true); ApiFuture<WriteResult> writeResult = db.collection(\"cities\").document(\"BJ\").set(update, SetOptions.merge()); ```", "sources": ["https://firebase.google.com/docs/firestore/manage-data/add-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_add-data_hl=ko.txt"}
{"question": "Cloud Firestore에서 자동으로 생성된 문서 ID를 사용하는 방법은 무엇인가요?", "answer": "자동으로 생성된 문서 ID를 사용하려면 `add()` 메서드를 호출하여 새 문서를 추가하면 됩니다. 예를 들어, Java에서는 다음과 같이 사용할 수 있습니다: ```java Map<String, Object> data = new HashMap<>(); data.put(\"name\", \"Tokyo\"); data.put(\"country\", \"Japan\"); ApiFuture<DocumentReference> addedDocRef = db.collection(\"cities\").add(data); System.out.println(\"Added document with ID: \" + addedDocRef.get().getId()); ```", "sources": ["https://firebase.google.com/docs/firestore/manage-data/add-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_add-data_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 설정할 때 사용할 수 있는 데이터 유형은 무엇인가요?", "answer": "Cloud Firestore에서는 문자열, 불리언, 숫자, 날짜, null, 중첩 배열, 객체 등 다양한 데이터 유형을 사용할 수 있습니다. 예를 들어, Java에서는 다음과 같이 설정할 수 있습니다: ```java Map<String, Object> docData = new HashMap<>(); docData.put(\"stringExample\", \"Hello, World\"); docData.put(\"booleanExample\", false); docData.put(\"numberExample\", 3.14159265); ```", "sources": ["https://firebase.google.com/docs/firestore/manage-data/add-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_add-data_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 추가할 때 오류가 발생하면 어떻게 처리하나요?", "answer": "문서를 추가할 때 오류가 발생하면 `addOnFailureListener`를 사용하여 오류를 처리할 수 있습니다. 예를 들어, Java에서는 다음과 같이 사용할 수 있습니다: ```java db.collection(\"cities\").add(data) .addOnSuccessListener(new OnSuccessListener<DocumentReference>() { @Override public void onSuccess(DocumentReference documentReference) { Log.d(TAG, \"DocumentSnapshot written with ID: \" + documentReference.getId()); } }) .addOnFailureListener(new OnFailureListener() { @Override public void onFailure(@NonNull Exception e) { Log.w(TAG, \"Error adding document\", e); } }); ```", "sources": ["https://firebase.google.com/docs/firestore/manage-data/add-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_add-data_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 설정할 때 중첩된 객체를 사용하는 방법은 무엇인가요?", "answer": "중첩된 객체를 사용하여 문서를 설정할 때는 점 표기법을 사용하여 필드를 참조할 수 있습니다. 예를 들어, Java에서는 다음과 같이 사용할 수 있습니다: ```java Map<String, Object> updates = new HashMap<>(); updates.put(\"favorites.color\", \"Red\"); ApiFuture<WriteResult> writeResult = frankDocRef.update(updates); ```", "sources": ["https://firebase.google.com/docs/firestore/manage-data/add-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_add-data_hl=ko.txt"}
{"question": "Cloud Firestore에서 서버 타임스탬프를 사용하는 방법은 무엇인가요?", "answer": "서버 타임스탬프를 사용하려면 `FieldValue.serverTimestamp()`를 사용하여 필드를 설정할 수 있습니다. 예를 들어, Java에서는 다음과 같이 사용할 수 있습니다: ```java Map<String, Object> updates = new HashMap<>(); updates.put(\"timestamp\", FieldValue.serverTimestamp()); docRef.update(updates); ```", "sources": ["https://firebase.google.com/docs/firestore/manage-data/add-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_add-data_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 삭제하는 방법은 무엇인가요?", "answer": "문서를 삭제하려면 `delete()` 메서드를 사용합니다. 예를 들어, Python에서는 다음과 같이 사용할 수 있습니다: ```python city_ref = db.collection(\"cities\").document(\"DC\") city_ref.delete() ```", "sources": ["https://firebase.google.com/docs/firestore/manage-data/add-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_add-data_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서의 특정 필드를 업데이트하는 방법은 무엇인가요?", "answer": "특정 필드를 업데이트하려면 `update()` 메서드를 사용하여 필드를 지정합니다. 예를 들어, Java에서는 다음과 같이 사용할 수 있습니다: ```java DocumentReference docRef = db.collection(\"cities\").document(\"DC\"); docRef.update(\"capital\", true); ```", "sources": ["https://firebase.google.com/docs/firestore/manage-data/add-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_add-data_hl=ko.txt"}
{"question": "Cloud Firestore에서 데이터를 일괄 삭제하는 방법은 무엇인가요?", "answer": "Cloud Firestore에서 데이터를 일괄 삭제하려면 gcloud 명령줄 도구 또는 Cloud Firestore REST API를 사용해야 합니다. gcloud를 사용하여 특정 컬렉션 그룹을 일괄 삭제하려면 `--collection-ids` 플래그를 사용하여 삭제할 컬렉션 그룹을 지정합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/bulk-delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_bulk-delete_hl=ko.txt"}
{"question": "gcloud 명령어를 사용하여 특정 컬렉션 그룹을 일괄 삭제하는 예시는 무엇인가요?", "answer": "특정 컬렉션 그룹을 일괄 삭제하기 위한 gcloud 명령어 예시는 다음과 같습니다: ``` gcloud firestore bulk-delete \\ --collection-ids=restaurants,reviews \\ --database='cymbal' ``` 이 명령어는 'cymbal' 데이터베이스의 'restaurants' 및 'reviews' 컬렉션 그룹을 삭제합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/bulk-delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_bulk-delete_hl=ko.txt"}
{"question": "일괄 삭제 작업을 시작하기 전에 어떤 준비가 필요한가요?", "answer": "일괄 삭제 작업을 시작하기 전에 Google Cloud 프로젝트에 결제를 사용 설정하고, Firebase 프로젝트가 Blaze 요금제로 업그레이드되어 있어야 하며, Cloud Firestore에 필요한 권한이 있는지 확인해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/bulk-delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_bulk-delete_hl=ko.txt"}
{"question": "일괄 삭제 작업의 상태를 확인하는 방법은 무엇인가요?", "answer": "일괄 삭제 작업의 상태를 확인하려면 gcloud 명령어 `gcloud firestore operations describe [OPERATION_NAME]`를 사용하여 작업의 상태를 표시할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/bulk-delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_bulk-delete_hl=ko.txt"}
{"question": "일괄 삭제 작업을 취소할 수 있는 방법은 무엇인가요?", "answer": "진행 중인 일괄 삭제 작업을 취소하려면 gcloud 명령어 `gcloud firestore operations cancel [OPERATION_NAME]`를 사용하면 됩니다. 그러나 이미 진행된 작업은 취소되지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/bulk-delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_bulk-delete_hl=ko.txt"}
{"question": "일괄 삭제 작업을 완료한 후 어떤 요금이 청구되나요?", "answer": "일괄 삭제 작업의 경우 문서 읽기 및 삭제에 대한 요금이 청구됩니다. 삭제된 문서당 하나의 삭제 작업과 색인 항목 읽기 1회가 발생하며, 최대 1,000개의 색인 항목을 읽을 때마다 1회의 읽기 작업 요금이 부과됩니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/bulk-delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_bulk-delete_hl=ko.txt"}
{"question": "일괄 삭제 작업을 시작하기 위해 gcloud를 어떻게 설정하나요?", "answer": "gcloud를 설정하려면 Google Cloud 콘솔 또는 gcloud 명령줄 도구를 통해 프로젝트에 연결하고, `gcloud config set project [PROJECT_ID]` 명령어를 사용하여 올바른 프로젝트에 구성해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/bulk-delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_bulk-delete_hl=ko.txt"}
{"question": "일괄 삭제 작업을 관리하는 방법은 무엇인가요?", "answer": "일괄 삭제 작업을 관리하려면 작업 이름을 사용하여 작업을 삭제, 취소하거나 상태를 확인할 수 있습니다. 작업 이름은 `projects/[PROJECT_ID]/databases/[DATABASE_ID]/operations/`로 시작합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/bulk-delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_bulk-delete_hl=ko.txt"}
{"question": "일괄 삭제 작업 중에 발생하는 읽기 및 삭제 작업은 콘솔의 사용량 섹션에 어떻게 반영되나요?", "answer": "일괄 삭제 작업 중에 수행되는 읽기 및 삭제는 작업 완료 후 무료 등급 사용량에 반영되며, 일괄 삭제 작업은 콘솔의 사용량 섹션에 표시되는 사용량에는 영향을 미치지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/bulk-delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_bulk-delete_hl=ko.txt"}
{"question": "일괄 삭제 작업의 비용을 확인하는 방법은 무엇인가요?", "answer": "일괄 삭제 작업의 비용은 Cloud Billing 보고서 페이지에서 `goog-firestoremanaged:bulkdelete` 라벨을 사용하여 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/bulk-delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_bulk-delete_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 삭제하는 방법은 무엇인가요?", "answer": "문서를 삭제하려면 delete() 메서드를 사용합니다. 예를 들어, JavaScript에서는 `await deleteDoc(doc(db, \"cities\", \"DC\"));`를 사용하여 문서를 삭제할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/delete-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_delete-data_hl=ko.txt"}
{"question": "특정 필드를 삭제하는 방법은 무엇인가요?", "answer": "문서에서 특정 필드를 삭제하려면 FieldValue.delete() 메서드를 사용합니다. 예를 들어, JavaScript에서는 `await db.collection(\"cities\").document(\"BJ\").updateData([\"capital\": FieldValue.delete()]);`를 사용하여 필드를 삭제할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/delete-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_delete-data_hl=ko.txt"}
{"question": "Cloud Firestore에서 전체 컬렉션을 삭제하는 방법은 무엇인가요?", "answer": "전체 컬렉션을 삭제하려면 컬렉션에 포함된 모든 문서를 읽고 삭제해야 합니다. 이 과정은 반복적으로 수행해야 하며, 예를 들어 Python에서는 `async def delete_collection(coll_ref, batch_size):` 함수를 사용하여 문서를 삭제할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/delete-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_delete-data_hl=ko.txt"}
{"question": "Firebase CLI를 사용하여 데이터를 삭제하는 방법은 무엇인가요?", "answer": "Firebase CLI를 사용하여 데이터를 삭제하려면 `firebase firestore:delete [options] <<path>>` 명령어를 사용합니다. 이 명령어는 읽기 및 삭제 비용이 발생합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/delete-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_delete-data_hl=ko.txt"}
{"question": "문서를 삭제할 때 하위 컬렉션은 어떻게 처리되나요?", "answer": "문서를 삭제해도 하위 컬렉션은 자동으로 삭제되지 않습니다. 하위 컬렉션의 문서를 삭제하려면 수동으로 삭제해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/delete-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_delete-data_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 삭제할 때 발생할 수 있는 오류는 무엇인가요?", "answer": "문서를 삭제할 때 발생할 수 있는 오류는 여러 가지가 있으며, 오류 코드 및 데이터 삭제 시 지연 시간 문제를 해결하는 방법에 대한 자세한 내용은 문제해결 페이지를 참조해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/delete-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_delete-data_hl=ko.txt"}
{"question": "TTL 정책을 사용하여 데이터를 삭제하는 방법은 무엇인가요?", "answer": "TTL 정책은 특정 필드를 특정 컬렉션 그룹의 문서 만료 시간으로 지정하여 데이터를 삭제하는 방법입니다. TTL 설정에 대한 자세한 내용은 TTL 정책으로 데이터 보관 관리 문서를 참조해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/delete-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_delete-data_hl=ko.txt"}
{"question": "Cloud Firestore에서 데이터 삭제 시 발생하는 비용은 어떻게 되나요?", "answer": "Firebase CLI를 사용하여 데이터를 삭제하면 읽기 및 삭제 비용이 발생합니다. 자세한 내용은 가격 책정 문서를 참조해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/delete-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_delete-data_hl=ko.txt"}
{"question": "Dataflow를 사용하여 Firestore 데이터베이스에서 데이터를 삭제하는 방법은 무엇인가요?", "answer": "Dataflow는 Firestore 데이터베이스에서 일괄 작업을 수행할 수 있는 도구로, 컬렉션 그룹의 모든 문서를 삭제하는 예시가 제공됩니다. 자세한 내용은 Dataflow용 Firestore 커넥터 소개 블로그 게시물을 참조해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/delete-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_delete-data_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 삭제할 때 사용하는 언어별 메서드는 무엇인가요?", "answer": "Cloud Firestore에서 문서를 삭제할 때 사용하는 언어별 메서드는 다음과 같습니다: JavaScript - `deleteDoc()`, Java - `delete()`, Python - `delete()`, C++ - `Delete()`, Ruby - `delete()`, 등입니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/delete-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_delete-data_hl=ko.txt"}
{"question": "Cloud Firestore에서 오프라인 지속성을 사용 설정하는 방법은 무엇인가요?", "answer": "Cloud Firestore를 초기화할 때 오프라인 지속성을 사용 설정하거나 중지할 수 있습니다. Android 및 Apple 플랫폼에서는 오프라인 지속성이 기본적으로 사용 설정됩니다. 웹에서는 `firebase.firestore().enablePersistence()` 메서드를 호출하여 사용 설정해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/enable-offline?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_enable-offline_hl=ko.txt"}
{"question": "웹에서 Cloud Firestore의 오프라인 지속성을 사용 설정할 때 주의해야 할 점은 무엇인가요?", "answer": "웹에서는 오프라인 지속성이 기본적으로 사용 중지되어 있으며, 이를 사용 설정하기 전에 신뢰할 수 있는 기기인지 사용자에게 확인해야 합니다. 또한, 오프라인 지속성은 Chrome, Safari, Firefox 웹브라우저에서만 지원됩니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/enable-offline?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_enable-offline_hl=ko.txt"}
{"question": "Cloud Firestore에서 캐시 크기를 구성하는 방법은 무엇인가요?", "answer": "캐시 크기를 구성하려면 `firebase.firestore().settings({ cacheSizeBytes: firebase.firestore.CACHE_SIZE_UNLIMITED })`와 같이 설정할 수 있습니다. Android에서는 `FirebaseFirestoreSettings.Builder().setCacheSizeBytes(FirebaseFirestoreSettings.CACHE_SIZE_UNLIMITED).build()`를 사용하여 설정합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/enable-offline?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_enable-offline_hl=ko.txt"}
{"question": "오프라인 상태에서 Cloud Firestore의 데이터 변경 사항을 수신 대기하는 방법은 무엇인가요?", "answer": "오프라인 지속성을 사용 설정한 경우, 로컬에 캐시된 데이터가 변경될 때 리스너가 수신 대기 이벤트를 수신합니다. 예를 들어, 웹에서는 `db.collection(\"cities\").where(\"state\", \"==\", \"CA\").onSnapshot({ includeMetadataChanges: true }, (snapshot) => { ... })`와 같이 사용할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/enable-offline?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_enable-offline_hl=ko.txt"}
{"question": "Cloud Firestore에서 네트워크 액세스를 중지하는 방법은 무엇인가요?", "answer": "네트워크 액세스를 중지하려면 웹에서 `await disableNetwork(db);`를 사용하거나, Android에서는 `db.disableNetwork().addOnCompleteListener(...)`를 사용하여 네트워크 액세스를 중지할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/enable-offline?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_enable-offline_hl=ko.txt"}
{"question": "Cloud Firestore에서 오프라인 데이터의 출처를 확인하는 방법은 무엇인가요?", "answer": "데이터의 출처가 서버인지 캐시인지 확인하려면 스냅샷 이벤트의 `SnapshotMetadata`에 있는 `fromCache` 속성을 사용합니다. `fromCache`가 true이면 캐시에서 가져온 데이터입니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/enable-offline?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_enable-offline_hl=ko.txt"}
{"question": "오프라인 지속성을 사용 설정한 후, Cloud Firestore의 캐시된 문서가 많은 컬렉션을 평가하는 방법은 무엇인가요?", "answer": "자동 색인 생성을 사용 설정하면 SDK가 캐시된 문서가 많은 컬렉션을 평가하고 로컬 쿼리의 성능을 최적화합니다. 이를 위해 `PersistentCacheIndexManager`를 사용할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/enable-offline?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_enable-offline_hl=ko.txt"}
{"question": "Cloud Firestore에서 오프라인 데이터 수신 대기 시, 기본적으로 어떤 이벤트가 발생하지 않나요?", "answer": "기본적으로 `SnapshotMetadata`만 변경되면 이벤트가 발생하지 않습니다. `fromCache` 값에 의존하는 경우 수신 대기 핸들러를 연결할 때 `includeMetadataChanges` 수신 대기 옵션을 지정해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/enable-offline?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_enable-offline_hl=ko.txt"}
{"question": "Cloud Firestore의 오프라인 지속성을 사용 중지하는 방법은 무엇인가요?", "answer": "Android 및 Apple 플랫폼에서는 `PersistenceEnabled` 옵션을 false로 설정하여 오프라인 지속성을 사용 중지할 수 있습니다. 웹에서는 `firebase.firestore().enablePersistence()`를 호출하지 않으면 기본적으로 사용 중지됩니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/enable-offline?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_enable-offline_hl=ko.txt"}
{"question": "Cloud Firestore에서 오프라인 데이터의 캐시를 관리하는 방법은 무엇인가요?", "answer": "Cloud Firestore는 백엔드에서 수신된 모든 문서를 오프라인 액세스용으로 캐시합니다. 기본 캐시 크기 임곗값을 초과하면 사용하지 않는 오래된 문서를 주기적으로 정리합니다. 캐시 크기 임곗값을 구성하거나 정리 프로세스를 완전히 사용 중지할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/enable-offline?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_enable-offline_hl=ko.txt"}
{"question": "Cloud Firestore에서 데이터를 내보내기 위해 필요한 첫 번째 단계는 무엇인가요?", "answer": "Cloud Firestore에서 데이터를 내보내기 위해서는 Google Cloud 프로젝트에 결제를 사용 설정해야 하며, Firebase 프로젝트는 Blaze 요금제로 사용해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/export-import?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_export-import_hl=ko.txt"}
{"question": "gcloud 명령줄 도구를 사용하여 모든 문서를 내보내는 명령어는 무엇인가요?", "answer": "모든 문서를 내보내기 위해서는 다음 명령어를 사용합니다: `gcloud firestore export gs://[BUCKET_NAME] --database=[DATABASE]`. 여기서 BUCKET_NAME은 Cloud Storage 버킷 이름이고, DATABASE는 내보낼 데이터베이스의 이름입니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/export-import?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_export-import_hl=ko.txt"}
{"question": "특정 컬렉션만 내보내기 위해 gcloud 명령어에서 어떤 플래그를 사용해야 하나요?", "answer": "특정 컬렉션을 내보내기 위해서는 `--collection-ids` 플래그를 사용해야 합니다. 이 플래그를 통해 내보낼 컬렉션 ID를 지정할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/export-import?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_export-import_hl=ko.txt"}
{"question": "Cloud Firestore에서 데이터를 가져올 때 문서 ID는 어떻게 처리되나요?", "answer": "데이터를 가져올 때 문서의 ID는 유지되며, ID가 같은 문서가 이미 존재하는 경우 기존 문서를 덮어씁니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/export-import?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_export-import_hl=ko.txt"}
{"question": "내보내기 작업을 취소하려면 어떤 명령어를 사용해야 하나요?", "answer": "내보내기 작업을 취소하려면 `gcloud firestore operations cancel [OPERATION_NAME]` 명령어를 사용해야 합니다. 여기서 OPERATION_NAME은 취소할 작업의 이름입니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/export-import?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_export-import_hl=ko.txt"}
{"question": "Cloud Firestore에서 내보내기 작업을 시작한 후 터미널을 닫아도 작업이 취소되지 않나요?", "answer": "네, 내보내기 작업을 시작하면 터미널을 닫아도 작업이 취소되지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/export-import?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_export-import_hl=ko.txt"}
{"question": "Cloud Firestore의 내보내기 작업에서 발생하는 요금은 어떻게 청구되나요?", "answer": "내보내기 작업은 내보낸 문서당 하나의 읽기 작업이 수행되며, 이 작업에 대한 요금이 청구됩니다. 가져오기 작업은 가져온 문서당 쓰기 작업이 1회 발생합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/export-import?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_export-import_hl=ko.txt"}
{"question": "Cloud Firestore에서 내보낸 데이터를 BigQuery로 로드할 수 있는 조건은 무엇인가요?", "answer": "Cloud Firestore 내보내기에서 collection-ids 필터를 지정한 경우에만 데이터를 BigQuery로 로드할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/export-import?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_export-import_hl=ko.txt"}
{"question": "Cloud Firestore 서비스 에이전트의 이름은 어떻게 구성되나요?", "answer": "Cloud Firestore 서비스 에이전트의 이름은 `service-PROJECT_NUMBER@gcp-sa-firestore.iam.gserviceaccount.com` 형식으로 구성됩니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/export-import?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_export-import_hl=ko.txt"}
{"question": "Cloud Firestore에서 내보내기 작업의 상태를 확인하려면 어떤 명령어를 사용해야 하나요?", "answer": "내보내기 작업의 상태를 확인하려면 `gcloud firestore operations describe [OPERATION_NAME]` 명령어를 사용해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/export-import?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_export-import_hl=ko.txt"}
{"question": "Cloud Firestore 데이터를 다른 프로젝트로 이동하기 위해 필요한 첫 번째 단계는 무엇인가요?", "answer": "첫 번째 단계는 소스 프로젝트의 데이터를 보관할 Cloud Storage 버킷을 만드는 것입니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/move-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_move-data_hl=ko.txt"}
{"question": "Cloud Firestore의 내보내기 및 가져오기 기능을 사용하기 위해 어떤 요금제를 사용해야 하나요?", "answer": "관리형 내보내기 및 가져오기 서비스를 사용하려면 Firebase 프로젝트를 Blaze 요금제로 사용해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/move-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_move-data_hl=ko.txt"}
{"question": "소스 프로젝트에서 데이터를 내보내기 위해 어떤 gcloud 명령어를 사용하나요?", "answer": "소스 프로젝트에서 데이터를 내보내기 위해 `gcloud firestore export gs://[SOURCE_BUCKET] --async` 명령어를 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/move-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_move-data_hl=ko.txt"}
{"question": "특정 컬렉션만 내보내려면 어떤 명령어를 사용해야 하나요?", "answer": "특정 컬렉션을 내보내려면 `gcloud firestore export gs://[SOURCE_BUCKET] --collection-ids=[COLLECTION_ID_1],[COLLECTION_ID_2] --async` 명령어를 사용해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/move-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_move-data_hl=ko.txt"}
{"question": "내보내기 작업 중에 데이터베이스에 계속 쓰는 경우 어떤 문제가 발생할 수 있나요?", "answer": "내보내기 작업 중에 데이터베이스에 계속 쓰면 내보내기 파일에 모든 쓰기를 캡처하지 못할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/move-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_move-data_hl=ko.txt"}
{"question": "데이터 가져오기 작업을 시작하기 전에 어떤 권한을 부여해야 하나요?", "answer": "데이터 가져오기 작업을 시작하기 전에 대상 프로젝트의 기본 서비스 계정에 소스 버킷에 대한 액세스 권한을 부여해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/move-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_move-data_hl=ko.txt"}
{"question": "가져오기 작업을 시작하기 위해 어떤 gcloud 명령어를 사용하나요?", "answer": "가져오기 작업을 시작하기 위해 `gcloud firestore import gs://[SOURCE_BUCKET]/[EXPORT_PREFIX] --async` 명령어를 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/move-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_move-data_hl=ko.txt"}
{"question": "내보내기 작업의 진행 상황을 확인하기 위해 어떤 명령어를 사용할 수 있나요?", "answer": "내보내기 작업의 진행 상황을 확인하기 위해 `gcloud firestore operations list` 명령어를 사용할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/move-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_move-data_hl=ko.txt"}
{"question": "Cloud Storage 버킷을 만들 때 어떤 위치에 만들어야 하나요?", "answer": "Cloud Storage 버킷은 Cloud Firestore 데이터베이스와 동일한 위치에 만들어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/move-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_move-data_hl=ko.txt"}
{"question": "내보내기 작업을 수행하는 동안 데이터베이스 쓰기를 중단하려면 어떻게 해야 하나요?", "answer": "보안 규칙을 업데이트하여 모든 쓰기를 거부하고, Admin SDK 작업을 중단하여 데이터베이스 쓰기를 중단해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/move-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_move-data_hl=ko.txt"}
{"question": "Firestore에서 문서 내에 중첩 데이터를 어떻게 구조화할 수 있나요?", "answer": "Firestore에서는 문서 내에 배열 또는 지도 등의 복합 객체를 중첩할 수 있습니다. 예를 들어, 채팅 앱에서 사용자가 가장 최근에 입장한 대화방 3개를 프로필에 중첩 목록으로 저장할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/structure-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_structure-data_hl=ko.txt"}
{"question": "하위 컬렉션의 장점은 무엇인가요?", "answer": "하위 컬렉션을 사용하면 데이터가 시간에 따라 증가하더라도 상위 문서의 크기는 그대로 유지됩니다. 또한 하위 컬렉션에서 모든 쿼리 기능을 사용할 수 있으며, 하위 컬렉션 간에 컬렉션 그룹 쿼리를 실행할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/structure-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_structure-data_hl=ko.txt"}
{"question": "루트 수준 컬렉션의 사용 사례는 무엇인가요?", "answer": "루트 수준 컬렉션은 다대다 관계에 적합하며, 각 컬렉션 내에서 강력한 쿼리를 제공합니다. 예를 들어, 사용자 컬렉션과 채팅방 및 메시지 컬렉션을 만들 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/structure-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_structure-data_hl=ko.txt"}
{"question": "문서 내에 중첩 데이터를 사용할 때의 제한사항은 무엇인가요?", "answer": "문서 내에 중첩 데이터를 사용할 경우, 시간이 지남에 따라 데이터가 증가하면 다른 옵션보다 확장성이 부족할 수 있습니다. 목록이 커지면 문서도 커져서 문서 검색 속도가 느려질 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/structure-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_structure-data_hl=ko.txt"}
{"question": "하위 컬렉션을 삭제하는 것이 어려운 이유는 무엇인가요?", "answer": "하위 컬렉션은 손쉽게 삭제할 수 없기 때문에, 데이터 구조를 설계할 때 신중해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/structure-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_structure-data_hl=ko.txt"}
{"question": "문서 내에 중첩 데이터를 사용할 때의 장점은 무엇인가요?", "answer": "문서 안에 단순한 고정 데이터 목록을 보관하려는 경우 데이터 구조를 손쉽게 설정하고 간소화할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/structure-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_structure-data_hl=ko.txt"}
{"question": "Firestore에서 여러 컬렉션을 사용하는 이유는 무엇인가요?", "answer": "여러 컬렉션을 사용하면 데이터베이스의 구조를 더 잘 정리할 수 있으며, 각 데이터 세트에 대해 강력한 쿼리를 제공할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/structure-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_structure-data_hl=ko.txt"}
{"question": "Firestore에서 문서와 하위 컬렉션의 관계는 어떻게 되나요?", "answer": "문서 내에 하위 컬렉션을 만들 수 있으며, 이는 데이터가 시간에 따라 증가할 가능성이 있는 경우에 유용합니다. 하위 컬렉션은 상위 문서와 독립적으로 쿼리할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/structure-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_structure-data_hl=ko.txt"}
{"question": "Firestore에서 데이터 구조를 선택할 때 고려해야 할 점은 무엇인가요?", "answer": "데이터 구조를 선택할 때는 사용 사례에 따라 각 옵션의 장점과 제한사항을 잘 생각해 보아야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/structure-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_structure-data_hl=ko.txt"}
{"question": "Firestore에서 문서와 컬렉션의 기본 개념은 무엇인가요?", "answer": "Firestore에서 문서는 데이터를 저장하는 기본 단위이며, 컬렉션은 이러한 문서들을 그룹화하여 정리하는 방법입니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/structure-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_structure-data_hl=ko.txt"}
{"question": "트랜잭션을 사용하여 데이터 업데이트를 수행하는 방법은 무엇인가요?", "answer": "트랜잭션을 사용하여 데이터 업데이트를 수행하려면 Cloud Firestore 클라이언트 라이브러리를 사용하여 여러 작업을 단일 트랜잭션으로 그룹화할 수 있습니다. 트랜잭션은 get() 작업 여러 개와 이어서 수행되는 set(), update(), delete()와 같은 쓰기 작업 여러 개로 구성됩니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/transactions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_transactions_hl=ko.txt"}
{"question": "트랜잭션에서 읽기 작업과 쓰기 작업의 순서는 어떻게 되어야 하나요?", "answer": "트랜잭션에서 읽기 작업은 항상 쓰기 작업 전에 이루어져야 합니다. 만약 읽기 작업이 쓰기 작업 다음에 포함되면 트랜잭션이 실패할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/transactions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_transactions_hl=ko.txt"}
{"question": "트랜잭션이 실패하는 이유는 무엇인가요?", "answer": "트랜잭션이 실패하는 이유는 여러 가지가 있습니다. 예를 들어, 트랜잭션에서 쓰기 작업 다음에 읽기 작업이 포함되거나, 트랜잭션 외부에서 수정된 문서를 읽는 경우, 또는 트랜잭션이 최대 요청 크기인 10MiB를 초과하는 경우 등이 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/transactions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_transactions_hl=ko.txt"}
{"question": "트랜잭션을 사용하는 코드 예시는 어떤 것이 있나요?", "answer": "예를 들어, JavaScript에서는 다음과 같이 트랜잭션을 사용할 수 있습니다: ```javascript import { runTransaction } from \"firebase/firestore\"; await runTransaction(db, async (transaction) => { const sfDocRef = doc(db, \"cities\", \"SF\"); const sfDoc = await transaction.get(sfDocRef); const newPopulation = sfDoc.data().population + 1; transaction.update(sfDocRef, { population: newPopulation }); }); ```", "sources": ["https://firebase.google.com/docs/firestore/manage-data/transactions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_transactions_hl=ko.txt"}
{"question": "일괄 쓰기를 사용하는 방법은 무엇인가요?", "answer": "일괄 쓰기를 사용하려면 set(), update(), delete() 작업의 조합을 포함하는 단일 배치로 여러 쓰기 작업을 실행할 수 있습니다. 각 작업은 Cloud Firestore 사용량에 별도로 포함되며, 원자적으로 완료됩니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/transactions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_transactions_hl=ko.txt"}
{"question": "일괄 쓰기를 사용하는 코드 예시는 어떤 것이 있나요?", "answer": "예를 들어, JavaScript에서는 다음과 같이 일괄 쓰기를 사용할 수 있습니다: ```javascript import { writeBatch, doc } from \"firebase/firestore\"; const batch = writeBatch(db); const nycRef = doc(db, \"cities\", \"NYC\"); batch.set(nycRef, { name: \"New York City\" }); const sfRef = doc(db, \"cities\", \"SF\"); batch.update(sfRef, { population: 1000000 }); const laRef = doc(db, \"cities\", \"LA\"); batch.delete(laRef); await batch.commit(); ```", "sources": ["https://firebase.google.com/docs/firestore/manage-data/transactions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_transactions_hl=ko.txt"}
{"question": "트랜잭션 외부에서 정보를 전달하는 방법은 무엇인가요?", "answer": "트랜잭션 함수에서 애플리케이션 상태를 수정하면 안 되며, 필요한 정보를 트랜잭션 함수 외부에서 전달해야 합니다. 예를 들어, 트랜잭션 외부에서 새로운 인구 수를 계산하고 이를 트랜잭션 함수에 전달할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/transactions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_transactions_hl=ko.txt"}
{"question": "트랜잭션을 사용할 때 주의해야 할 점은 무엇인가요?", "answer": "트랜잭션을 사용할 때는 읽기 작업이 쓰기 작업 전에 이루어져야 하며, 트랜잭션 함수가 애플리케이션 상태를 직접 수정하면 안 됩니다. 또한, 클라이언트가 오프라인 상태일 경우 트랜잭션이 실패합니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/transactions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_transactions_hl=ko.txt"}
{"question": "트랜잭션의 동시 수정 처리 방식은 어떻게 되나요?", "answer": "트랜잭션에서 읽는 문서에서 동시에 수정이 이루어지는 경우, Cloud Firestore는 전체 트랜잭션을 다시 실행합니다. 이 기능을 통해 트랜잭션이 일관된 최신 데이터로 실행됩니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/transactions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_transactions_hl=ko.txt"}
{"question": "트랜잭션과 일괄 쓰기의 차이점은 무엇인가요?", "answer": "트랜잭션은 원자적 읽기 및 쓰기 작업을 지원하며, 모든 작업이 성공하거나 아니면 모두 적용되지 않습니다. 반면, 일괄 쓰기는 여러 문서에 대한 쓰기 작업을 원자적으로 완료하지만, 읽기 작업이 필요하지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/manage-data/transactions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_manage-data_transactions_hl=ko.txt"}
{"question": "Firestore에서 count() 집계 쿼리를 사용하는 방법은 무엇인가요?", "answer": "count() 집계 쿼리를 사용하면 컬렉션이나 쿼리의 문서 수를 결정할 수 있습니다. 예를 들어, cities 컬렉션의 총 도시 수를 반환하는 쿼리는 다음과 같습니다: ```javascript Query query = db.collection(\"cities\"); AggregateQuery countQuery = query.count(); countQuery.get(AggregateSource.SERVER).addOnCompleteListener(new OnCompleteListener<AggregateQuerySnapshot>() { @Override public void onComplete(@NonNull Task<AggregateQuerySnapshot> task) { if (task.isSuccessful()) { AggregateQuerySnapshot snapshot = task.getResult(); Log.d(TAG, \"Count: \" + snapshot.getCount()); } } }); ```", "sources": ["https://firebase.google.com/docs/firestore/query-data/aggregation-queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_aggregation-queries_hl=ko.txt"}
{"question": "sum() 집계 쿼리를 사용하여 특정 필드의 총합을 구하는 방법은 무엇인가요?", "answer": "sum() 집계를 사용하여 지정된 쿼리와 일치하는 숫자 값의 총 합계를 반환할 수 있습니다. 예를 들어, cities 컬렉션에서 population 필드의 합계를 구하는 쿼리는 다음과 같습니다: ```javascript AggregateQuery aggregateQuery = query.aggregate(AggregateField.sum(\"population\")); aggregateQuery.get(AggregateSource.SERVER).addOnCompleteListener(new OnCompleteListener<AggregateQuerySnapshot>() { @Override public void onComplete(@NonNull Task<AggregateQuerySnapshot> task) { if (task.isSuccessful()) { AggregateQuerySnapshot snapshot = task.getResult(); Log.d(TAG, \"Sum: \" + snapshot.get(AggregateField.sum(\"population\"))); } } }); ```", "sources": ["https://firebase.google.com/docs/firestore/query-data/aggregation-queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_aggregation-queries_hl=ko.txt"}
{"question": "average() 집계 쿼리를 사용하여 특정 필드의 평균을 구하는 방법은 무엇인가요?", "answer": "average() 집계를 사용하여 특정 쿼리와 일치하는 숫자 값의 평균을 반환할 수 있습니다. 예를 들어, cities 컬렉션에서 population 필드의 평균을 구하는 쿼리는 다음과 같습니다: ```javascript AggregateQuery aggregateQuery = query.aggregate(AggregateField.average(\"population\")); aggregateQuery.get(AggregateSource.SERVER).addOnCompleteListener(new OnCompleteListener<AggregateQuerySnapshot>() { @Override public void onComplete(@NonNull Task<AggregateQuerySnapshot> task) { if (task.isSuccessful()) { AggregateQuerySnapshot snapshot = task.getResult(); Log.d(TAG, \"Average: \" + snapshot.get(AggregateField.average(\"population\"))); } } }); ```", "sources": ["https://firebase.google.com/docs/firestore/query-data/aggregation-queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_aggregation-queries_hl=ko.txt"}
{"question": "여러 집계를 결합하여 쿼리를 실행하는 방법은 무엇인가요?", "answer": "여러 집계를 결합하여 쿼리를 실행할 수 있습니다. 예를 들어, count(), sum(), average()를 결합하여 실행하는 쿼리는 다음과 같습니다: ```javascript AggregateQuery aggregateQuery = query.aggregate( AggregateField.count(), AggregateField.sum(\"population\"), AggregateField.average(\"population\") ); aggregateQuery.get(AggregateSource.SERVER).addOnCompleteListener(new OnCompleteListener<AggregateQuerySnapshot>() { @Override public void onComplete(@NonNull Task<AggregateQuerySnapshot> task) { if (task.isSuccessful()) { AggregateQuerySnapshot snapshot = task.getResult(); Log.d(TAG, \"Count: \" + snapshot.get(AggregateField.count())); Log.d(TAG, \"Sum: \" + snapshot.get(AggregateField.sum(\"population\"))); Log.d(TAG, \"Average: \" + snapshot.get(AggregateField.average(\"population\"))); } } }); ```", "sources": ["https://firebase.google.com/docs/firestore/query-data/aggregation-queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_aggregation-queries_hl=ko.txt"}
{"question": "집계 쿼리의 가격 책정은 어떻게 되나요?", "answer": "집계 쿼리의 가격 책정은 쿼리와 일치하는 색인 항목 수에 따라 다릅니다. 일치하는 항목의 수가 많으면 소량의 읽기 요금이 부과됩니다. 최대 1,000개의 색인 항목을 읽을 때마다 1회의 읽기 작업 요금이 부과됩니다.", "sources": ["https://firebase.google.com/docs/firestore/pricing?hl=ko#aggregation_queries"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_aggregation-queries_hl=ko.txt"}
{"question": "count() 집계 쿼리에서 쿼리의 필터와 limit 절은 어떻게 적용되나요?", "answer": "count() 집계에서는 쿼리의 모든 필터와 limit 절을 고려합니다. 즉, 쿼리에서 설정한 조건에 따라 문서 수가 계산됩니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/aggregation-queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_aggregation-queries_hl=ko.txt"}
{"question": "sum() 및 average() 집계는 어떤 데이터 타입을 고려하나요?", "answer": "sum() 및 average() 집계는 정수 값과 부동 소수점 숫자 값만 고려합니다. 숫자가 아닌 값은 무시됩니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/aggregation-queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_aggregation-queries_hl=ko.txt"}
{"question": "집계 쿼리를 사용할 때 발생할 수 있는 오류는 무엇인가요?", "answer": "집계 쿼리를 사용할 때 발생할 수 있는 오류는 주로 쿼리 실행 중에 발생하며, 예를 들어 잘못된 필드 이름이나 잘못된 쿼리 조건으로 인해 발생할 수 있습니다. 오류가 발생하면 NSError 객체를 통해 오류 메시지를 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/aggregation-queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_aggregation-queries_hl=ko.txt"}
{"question": "집계 쿼리의 결과는 어떻게 반환되나요?", "answer": "집계 쿼리의 결과는 AggregateQuerySnapshot 객체로 반환되며, 이 객체를 통해 count, sum, average 등의 집계 결과를 접근할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/aggregation-queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_aggregation-queries_hl=ko.txt"}
{"question": "Firestore에서 집계 쿼리를 사용할 때 주의해야 할 점은 무엇인가요?", "answer": "Firestore에서 집계 쿼리를 사용할 때는 쿼리에서 사용되는 기존 색인 구성을 기반으로 하며, 스캔되는 색인 항목 수에 비례하여 확장됩니다. 따라서 쿼리의 성능과 비용을 고려하여 적절한 색인 구성을 유지하는 것이 중요합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/aggregation-queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_aggregation-queries_hl=ko.txt"}
{"question": "Cloud Firestore에서 데이터를 가져오는 방법은 무엇인가요?", "answer": "Cloud Firestore에서 데이터를 가져오는 방법에는 세 가지가 있습니다: 메서드를 호출하여 데이터를 한 번 가져오기, 데이터 변경 이벤트를 수신하는 리스너를 설정하기, 데이터 번들을 통해 외부 소스에서 Firestore 스냅샷 데이터를 일괄 로드하기입니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/get-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_get-data_hl=ko.txt"}
{"question": "Cloud Firestore를 초기화하는 방법은 무엇인가요?", "answer": "Cloud Firestore를 초기화하려면 각 환경에 맞는 코드를 사용해야 합니다. 예를 들어, JavaScript에서는 `import { initializeApp } from \"firebase/app\";`와 `import { getFirestore } from \"firebase/firestore\";`를 사용하여 초기화합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/get-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_get-data_hl=ko.txt"}
{"question": "Firestore에서 문서를 가져오는 코드 예시는 무엇인가요?", "answer": "Firestore에서 문서를 가져오는 예시는 다음과 같습니다: ```javascript const docRef = db.collection(\"cities\").doc(\"SF\"); docRef.get().then((doc) => { if (doc.exists) { console.log(\"Document data:\", doc.data()); } else { console.log(\"No such document!\"); } }); ```", "sources": ["https://firebase.google.com/docs/firestore/query-data/get-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_get-data_hl=ko.txt"}
{"question": "Firestore에서 여러 문서를 가져오는 방법은 무엇인가요?", "answer": "Firestore에서 여러 문서를 가져오려면 `where()` 메서드를 사용하여 조건을 설정하고 `get()` 메서드를 호출하여 결과를 가져옵니다. 예를 들어, `db.collection(\"cities\").where(\"capital\", \"==\", true).get()`을 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/get-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_get-data_hl=ko.txt"}
{"question": "Firestore에서 문서가 존재하는지 확인하는 방법은 무엇인가요?", "answer": "Firestore에서 문서가 존재하는지 확인하려면 `get()` 메서드를 호출한 후, 반환된 DocumentSnapshot의 `exists` 속성을 확인합니다. 예를 들어, `if (doc.exists) { ... }`와 같이 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/get-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_get-data_hl=ko.txt"}
{"question": "Firestore에서 오프라인 캐시를 사용하는 방법은 무엇인가요?", "answer": "Firestore에서 오프라인 캐시를 사용하려면 `get()` 호출에서 `source` 옵션을 설정하여 오프라인 캐시를 사용할 수 있습니다. 예를 들어, `docRef.get({ source: 'cache' })`와 같이 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/get-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_get-data_hl=ko.txt"}
{"question": "Firestore에서 커스텀 객체를 사용하는 방법은 무엇인가요?", "answer": "Firestore에서 커스텀 객체를 사용하려면 해당 객체에 Firestore 데이터 변환 함수를 정의해야 합니다. 예를 들어, `class City { ... }`와 같은 클래스를 정의하고, `toFirestore` 및 `fromFirestore` 메서드를 구현합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/get-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_get-data_hl=ko.txt"}
{"question": "Firestore에서 하위 컬렉션의 모든 문서를 가져오는 방법은 무엇인가요?", "answer": "Firestore에서 하위 컬렉션의 모든 문서를 가져오려면 해당 하위 컬렉션의 전체 경로를 포함한 참조를 만들어야 합니다. 예를 들어, `db.collection(\"cities\").doc(\"SF\").collection(\"landmarks\").get()`을 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/get-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_get-data_hl=ko.txt"}
{"question": "Firestore에서 문서를 업데이트하는 방법은 무엇인가요?", "answer": "Firestore에서 문서를 업데이트하려면 `set()` 메서드를 사용하여 문서의 데이터를 설정하거나 `update()` 메서드를 사용하여 특정 필드만 업데이트할 수 있습니다. 예를 들어, `docRef.update({ population: 9000000 })`와 같이 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/get-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_get-data_hl=ko.txt"}
{"question": "Firestore에서 쿼리 결과를 정렬하는 방법은 무엇인가요?", "answer": "Firestore에서 쿼리 결과를 정렬하려면 `orderBy()` 메서드를 사용하여 특정 필드를 기준으로 정렬할 수 있습니다. 예를 들어, `db.collection(\"cities\").orderBy(\"population\").get()`과 같이 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/get-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_get-data_hl=ko.txt"}
{"question": "Cloud Firestore에서 색인을 자동으로 생성하는 방법은 무엇인가요?", "answer": "Cloud Firestore는 대부분의 기본 쿼리에 필요한 색인을 자동으로 생성합니다. 앱을 사용하고 테스트할 때 누락된 색인에 대한 오류 메시지를 생성하여 추가 색인을 만드는 데 유용합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/indexing?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_indexing_hl=ko.txt"}
{"question": "Firebase Console에서 색인을 수동으로 만드는 방법은 무엇인가요?", "answer": "Firebase Console에서 색인을 수동으로 만들려면 Cloud Firestore 섹션으로 이동한 후 색인 탭에서 색인 추가를 클릭하고 컬렉션 이름과 색인의 정렬 기준으로 사용할 필드를 설정한 후 만들기를 클릭합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/indexing?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_indexing_hl=ko.txt"}
{"question": "누락된 색인을 생성하기 위한 오류 메시지의 활용 방법은 무엇인가요?", "answer": "기존 색인에 매핑되지 않는 범위 절이 포함된 복합 쿼리를 시도하면 오류 메시지에 Firebase Console에서 누락된 색인을 만드는 직접 링크가 포함됩니다. 이 링크를 따라가서 자동으로 입력된 정보를 검토한 후 색인을 만들 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/indexing?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_indexing_hl=ko.txt"}
{"question": "Firebase CLI를 사용하여 색인을 배포하는 방법은 무엇인가요?", "answer": "Firebase CLI를 사용하여 색인을 배포하려면 프로젝트 디렉터리에서 `firebase init firestore`를 실행하여 기본 색인을 사용한 올바른 형식의 JSON 파일을 생성한 후, 파일을 수정하고 `firebase deploy` 명령어를 사용해 배포합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/indexing?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_indexing_hl=ko.txt"}
{"question": "Terraform을 사용하여 단일 필드 색인을 만드는 방법은 무엇인가요?", "answer": "Terraform을 사용하여 단일 필드 색인을 만들려면 `firestore.tf` 파일에 다음과 같은 리소스를 정의합니다: ```hcl resource \"google_firestore_index\" \"single-field-index\" { project = \"project-id\" database = \"database-id\" collection = \"chatrooms\" fields { field_path = \"name\" order      = \"ASCENDING\" } } ```", "sources": ["https://firebase.google.com/docs/firestore/query-data/indexing?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_indexing_hl=ko.txt"}
{"question": "복합 색인을 만들기 위한 Terraform 구성 파일 예시는 무엇인가요?", "answer": "복합 색인을 만들기 위한 Terraform 구성 파일 예시는 다음과 같습니다: ```hcl resource \"google_firestore_index\" \"composite-index\" { project = \"project-id\" database = \"database-id\" collection = \"chatrooms\" fields { field_path = \"name\" order      = \"ASCENDING\" } fields { field_path = \"description\" order      = \"DESCENDING\" } } ```", "sources": ["https://firebase.google.com/docs/firestore/query-data/indexing?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_indexing_hl=ko.txt"}
{"question": "색인 삭제 방법은 무엇인가요?", "answer": "색인을 삭제하려면 Firebase Console의 Cloud Firestore 섹션으로 이동하여 색인 탭을 클릭한 후 삭제할 색인에 마우스를 가져가고 컨텍스트 메뉴에서 삭제를 선택한 후 알림에서 삭제를 클릭하여 삭제 의사를 확인합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/indexing?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_indexing_hl=ko.txt"}
{"question": "색인 빌드 시간은 어떻게 결정되나요?", "answer": "색인 빌드 시간은 색인 설정 시간과 기존 데이터의 백필 시간의 합계로 결정됩니다. 색인 설정에는 몇 분 정도 걸리며, 백필 시간은 새 색인에 속하는 기존 데이터의 양에 따라 달라집니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/indexing?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_indexing_hl=ko.txt"}
{"question": "장기 실행 작업을 나열하는 명령어는 무엇인가요?", "answer": "장기 실행 작업을 나열하려면 `gcloud firestore operations list` 명령어를 사용합니다. 이 명령어는 진행 중인 작업과 최근에 완료된 작업을 나열합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/indexing?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_indexing_hl=ko.txt"}
{"question": "색인 빌드의 진행 상태를 확인하는 방법은 무엇인가요?", "answer": "색인 빌드의 진행 상태는 `gcloud firestore operations describe operation-name` 명령어를 사용하여 확인할 수 있으며, 작업의 상태와 진행 상황을 나타내는 `workEstimated` 및 `workCompleted` 측정항목을 반환합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/indexing?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_indexing_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 실시간으로 리슨하는 방법은 무엇인가요?", "answer": "Cloud Firestore에서 문서를 실시간으로 리슨하려면 `onSnapshot()` 메서드를 사용합니다. 이 메서드는 문서의 현재 콘텐츠로 문서 스냅샷을 즉시 생성하고, 이후 콘텐츠가 변경될 때마다 콜백이 호출됩니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/listen?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_listen_hl=ko.txt"}
{"question": "JavaScript에서 Firestore 문서를 리슨하는 코드 예시는 무엇인가요?", "answer": "JavaScript에서 Firestore 문서를 리슨하는 코드는 다음과 같습니다: ```javascript import { doc, onSnapshot } from \"firebase/firestore\"; const docRef = db.collection(\"cities\").doc(\"SF\"); onSnapshot(docRef, (doc) => { console.log(\"Current data: \", doc.data()); }); ```", "sources": ["https://firebase.google.com/docs/firestore/query-data/listen?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_listen_hl=ko.txt"}
{"question": "Firestore에서 문서의 로컬 변경 사항을 확인하는 방법은 무엇인가요?", "answer": "Firestore에서 문서의 로컬 변경 사항을 확인하려면 `metadata.hasPendingWrites` 속성을 사용합니다. 이 속성은 문서에 아직 백엔드에 쓰기 처리되지 않은 로컬 변경 사항이 있는지 여부를 나타냅니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/listen?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_listen_hl=ko.txt"}
{"question": "Firestore에서 쿼리 결과의 변경 사항을 리슨하는 방법은 무엇인가요?", "answer": "Firestore에서 쿼리 결과의 변경 사항을 리슨하려면 `onSnapshot()` 메서드를 사용하여 쿼리를 설정하고, 스냅샷 핸들러에서 `docChanges()` 메서드를 호출하여 변경된 문서의 추가, 수정, 삭제를 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/listen?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_listen_hl=ko.txt"}
{"question": "Firestore에서 리스너를 분리하는 방법은 무엇인가요?", "answer": "Firestore에서 리스너를 분리하려면 리스너 등록 객체의 `unsubscribe()` 메서드를 호출합니다. 이를 통해 더 이상 데이터를 리슨하지 않도록 설정할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/listen?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_listen_hl=ko.txt"}
{"question": "Firestore에서 리스너가 실패할 경우 어떻게 처리하나요?", "answer": "Firestore에서 리스너가 실패할 경우, 스냅샷 리스너를 연결할 때 오류 콜백을 제공하여 오류를 처리할 수 있습니다. 오류가 발생하면 리스너는 더 이상 이벤트를 수신하지 않으므로 리스너를 분리할 필요는 없습니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/listen?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_listen_hl=ko.txt"}
{"question": "Firestore에서 특정 조건을 가진 문서를 리슨하는 방법은 무엇인가요?", "answer": "Firestore에서 특정 조건을 가진 문서를 리슨하려면 `where` 메서드를 사용하여 쿼리를 설정한 후, `onSnapshot()` 메서드를 호출하여 리스너를 추가합니다. 예를 들어, `db.collection(\"cities\").where(\"state\", \"==\", \"CA\").onSnapshot(...)`와 같이 사용할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/listen?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_listen_hl=ko.txt"}
{"question": "Firestore에서 문서의 추가, 수정, 삭제 이벤트를 처리하는 방법은 무엇인가요?", "answer": "Firestore에서 문서의 추가, 수정, 삭제 이벤트를 처리하려면 `docChanges()` 메서드를 사용하여 각 변경 사항의 타입을 확인하고, 추가된 문서, 수정된 문서, 삭제된 문서에 대해 각각의 로직을 구현합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/listen?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_listen_hl=ko.txt"}
{"question": "Firestore에서 실시간 업데이트를 UI에 반영하는 방법은 무엇인가요?", "answer": "Firestore에서 실시간 업데이트를 UI에 반영하려면 `StreamBuilder` 위젯을 사용하여 Firestore 스냅샷 스트림을 구독하고, 스냅샷의 상태에 따라 UI를 업데이트합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/listen?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_listen_hl=ko.txt"}
{"question": "Firestore에서 문서의 메타데이터를 포함하여 리슨하는 방법은 무엇인가요?", "answer": "Firestore에서 문서의 메타데이터를 포함하여 리슨하려면 `addSnapshotListener()` 메서드에 `MetadataChanges.INCLUDE` 옵션을 설정하여 메타데이터 변경 사항도 수신할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/listen?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_listen_hl=ko.txt"}
{"question": "여러 필드에 범위 필터를 사용하는 쿼리의 예시는 무엇인가요?", "answer": "여러 필드에 범위 필터를 사용하는 쿼리의 예시는 다음과 같습니다. 인구가 100만 명 이상이고 인구 밀도가 단위 면적당 10,000명 미만인 모든 도시를 반환하는 쿼리입니다. 예를 들어, JavaScript에서는 다음과 같이 작성할 수 있습니다: ```javascript const q = query( collection(db, \"cities\"), where('population', '>', 1000000), where('density', '<', 10000) ); ```", "sources": ["https://firebase.google.com/docs/firestore/query-data/multiple-range-fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_multiple-range-fields_hl=ko.txt"}
{"question": "Swift에서 여러 필드에 범위 필터를 사용하는 방법은 무엇인가요?", "answer": "Swift에서 여러 필드에 범위 필터를 사용하는 방법은 다음과 같습니다: ```swift let query = db.collection(\"cities\") .whereField(\"population\", isGreaterThan: 1000000) .whereField(\"density\", isLessThan: 10000) ```", "sources": ["https://firebase.google.com/docs/firestore/query-data/multiple-range-fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_multiple-range-fields_hl=ko.txt"}
{"question": "Python에서 여러 필드에 범위 필터를 사용하는 쿼리는 어떻게 작성하나요?", "answer": "Python에서 여러 필드에 범위 필터를 사용하는 쿼리는 다음과 같이 작성할 수 있습니다: ```python from google.cloud import firestore db = firestore.Client() query = db.collection(\"cities\") .where(\"population\", \">\", 1000000) .where(\"density\", \"<\", 10000) ```", "sources": ["https://firebase.google.com/docs/firestore/query-data/multiple-range-fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_multiple-range-fields_hl=ko.txt"}
{"question": "Cloud Firestore에서 쿼리의 색인 생성 고려사항은 무엇인가요?", "answer": "Cloud Firestore에서는 쿼리의 ORDER BY 절에 따라 쿼리를 제공하는 데 사용할 색인이 결정됩니다. 예를 들어, ORDER BY a ASC, b ASC 쿼리는 a ASC, b ASC 필드에 대한 복합 색인이 필요합니다. 색인 최적화를 위해서는 쿼리 제약조건 선택성의 내림차순으로 필드 순서를 지정해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/multiple-range-fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_multiple-range-fields_hl=ko.txt"}
{"question": "여러 필드에 범위 필터를 사용할 때 색인 최적화를 위한 권장사항은 무엇인가요?", "answer": "색인을 최적화할 때는 가장 선택적인 범위 또는 불일치 필드가 이어서 오는 일치 여부를 기준으로 색인 필드 순서를 지정해야 합니다. 선택성이 높은 필드를 먼저 선택하여 Cloud Firestore가 스캔하는 색인 항목 수를 줄일 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/multiple-range-fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_multiple-range-fields_hl=ko.txt"}
{"question": "Java에서 급여가 100,000달러를 초과하고 경력 연수가 0년을 넘는 직원을 찾는 쿼리는 어떻게 작성하나요?", "answer": "Java에서 급여가 100,000달러를 초과하고 경력 연수가 0년을 넘는 직원을 찾는 쿼리는 다음과 같이 작성할 수 있습니다: ```java db.collection(\"employees\") .whereGreaterThan(\"salary\", 100000) .whereGreaterThan(\"experience\", 0) .orderBy(\"salary\") .orderBy(\"experience\"); ```", "sources": ["https://firebase.google.com/docs/firestore/query-data/multiple-range-fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_multiple-range-fields_hl=ko.txt"}
{"question": "Node.js에서 여러 필드에 범위 필터를 사용하는 쿼리는 어떻게 작성하나요?", "answer": "Node.js에서 여러 필드에 범위 필터를 사용하는 쿼리는 다음과 같이 작성할 수 있습니다: ```javascript db.collection(\"cities\") .where(\"population\", \">\", 1000000) .where(\"density\", \"<\", 10000); ```", "sources": ["https://firebase.google.com/docs/firestore/query-data/multiple-range-fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_multiple-range-fields_hl=ko.txt"}
{"question": "C#에서 여러 필드에 범위 필터를 사용하는 쿼리는 어떻게 작성하나요?", "answer": "C#에서 여러 필드에 범위 필터를 사용하는 쿼리는 다음과 같이 작성할 수 있습니다: ```csharp CollectionReference citiesRef = db.Collection(\"cities\"); Query query = citiesRef .WhereGreaterThan(\"Population\", 1000000) .WhereLessThan(\"Density\", 10000); ```", "sources": ["https://firebase.google.com/docs/firestore/query-data/multiple-range-fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_multiple-range-fields_hl=ko.txt"}
{"question": "Kotlin에서 여러 필드에 범위 필터를 사용하는 쿼리는 어떻게 작성하나요?", "answer": "Kotlin에서 여러 필드에 범위 필터를 사용하는 쿼리는 다음과 같이 작성할 수 있습니다: ```kotlin val query = db.collection(\"cities\") .whereGreaterThan(\"population\", 1000000) .whereLessThan(\"density\", 10000) ```", "sources": ["https://firebase.google.com/docs/firestore/query-data/multiple-range-fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_multiple-range-fields_hl=ko.txt"}
{"question": "Cloud Firestore에서 범위 또는 불일치 필드의 수는 몇 개로 제한되나요?", "answer": "Cloud Firestore에서는 범위 또는 불일치 필드의 수를 10개로 제한합니다. 이는 쿼리 실행 비용이 너무 많이 드는 것을 방지하기 위한 것입니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/multiple-range-fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_multiple-range-fields_hl=ko.txt"}
{"question": "여러 필드에서 범위 및 불일치 필터를 사용하여 쿼리를 최적화하는 방법은 무엇인가요?", "answer": "여러 필드에서 범위 및 불일치 필터를 사용하여 쿼리를 최적화하기 위해서는 색인 생성 전략을 사용해야 합니다. 예를 들어, `whereGreaterThan` 메서드를 사용하여 여러 필드에 대한 조건을 추가하고, `orderBy` 절을 명시적으로 사용하여 색인을 최적화할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/multiple-range-optimize-indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_multiple-range-optimize-indexes_hl=ko.txt"}
{"question": "Query Explain을 사용하여 쿼리 최적화를 어떻게 수행하나요?", "answer": "Query Explain을 사용하여 쿼리 최적화를 수행하려면, 쿼리 객체에 `explain` 메서드를 호출하고 `ExplainOptions`를 설정하여 분석을 활성화합니다. 이를 통해 쿼리 계획 요약 및 실행 통계를 가져올 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/multiple-range-optimize-indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_multiple-range-optimize-indexes_hl=ko.txt"}
{"question": "Java에서 여러 필드에 대한 범위 쿼리를 작성하는 예시는 무엇인가요?", "answer": "Java에서 여러 필드에 대한 범위 쿼리를 작성하는 예시는 다음과 같습니다: ```java Query q = db.collection(\"employees\") .whereGreaterThan(\"salary\", 100000) .whereGreaterThan(\"experience\", 0); ```", "sources": ["https://firebase.google.com/docs/firestore/query-data/multiple-range-optimize-indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_multiple-range-optimize-indexes_hl=ko.txt"}
{"question": "Node.js에서 여러 필드에 대한 범위 쿼리를 작성하는 방법은 무엇인가요?", "answer": "Node.js에서 여러 필드에 대한 범위 쿼리를 작성하는 방법은 다음과 같습니다: ```javascript let q = db.collection(\"employees\") .where(\"salary\", \">\", 100000) .where(\"experience\", \">\", 0); ```", "sources": ["https://firebase.google.com/docs/firestore/query-data/multiple-range-optimize-indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_multiple-range-optimize-indexes_hl=ko.txt"}
{"question": "쿼리의 성능을 개선하기 위해 `orderBy` 절을 사용하는 이유는 무엇인가요?", "answer": "`orderBy` 절을 사용하면 Cloud Firestore가 색인을 최적화하여 쿼리를 더 빠르게 실행할 수 있습니다. 예를 들어, `orderBy(\"salary\").orderBy(\"experience\")`를 사용하면 (salary ASC, experience ASC) 색인을 사용하여 쿼리를 실행하게 됩니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/multiple-range-optimize-indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_multiple-range-optimize-indexes_hl=ko.txt"}
{"question": "쿼리 실행 시 색인 항목을 스캔하는 예시는 무엇인가요?", "answer": "쿼리 실행 시 색인 항목을 스캔하는 예시는 다음과 같습니다. 특정 쿼리는 95,000개의 색인 항목을 스캔하여 5개 문서만 반환합니다. 이는 조건자가 충족되지 않기 때문에 많은 수의 색인 항목을 읽지만 필터링됩니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/multiple-range-optimize-indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_multiple-range-optimize-indexes_hl=ko.txt"}
{"question": "쿼리의 실행 통계를 확인하는 방법은 무엇인가요?", "answer": "쿼리의 실행 통계를 확인하려면 `ExplainResults` 객체에서 `getMetrics()` 메서드를 호출하여 `ExplainMetrics`를 가져온 후, `getExecutionStats()` 메서드를 사용하여 실행 통계를 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/multiple-range-optimize-indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_multiple-range-optimize-indexes_hl=ko.txt"}
{"question": "쿼리의 색인 사용 현황을 출력하는 방법은 무엇인가요?", "answer": "쿼리의 색인 사용 현황을 출력하려면 `planSummary.getIndexesUsed()` 메서드를 호출하여 사용된 색인을 출력할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/multiple-range-optimize-indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_multiple-range-optimize-indexes_hl=ko.txt"}
{"question": "쿼리의 결과 반환 수를 확인하는 방법은 무엇인가요?", "answer": "쿼리의 결과 반환 수를 확인하려면 `executionStats.getResultsReturned()` 메서드를 호출하여 반환된 결과의 수를 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/multiple-range-optimize-indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_multiple-range-optimize-indexes_hl=ko.txt"}
{"question": "쿼리의 실행 지속 시간을 확인하는 방법은 무엇인가요?", "answer": "쿼리의 실행 지속 시간을 확인하려면 `executionStats.getExecutionDuration()` 메서드를 호출하여 쿼리 실행에 소요된 시간을 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/multiple-range-optimize-indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_multiple-range-optimize-indexes_hl=ko.txt"}
{"question": "Cloud Firestore에서 데이터를 정렬하고 제한하는 방법은 무엇인가요?", "answer": "Cloud Firestore에서 데이터를 정렬하려면 `orderBy()` 메서드를 사용하고, 검색된 문서 수를 제한하려면 `limit()` 메서드를 사용합니다. 예를 들어, 알파벳순으로 처음 3개 도시를 쿼리하는 방법은 다음과 같습니다: `citiesRef.orderBy(\"name\").limit(3);`", "sources": ["https://firebase.google.com/docs/firestore/query-data/order-limit-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_order-limit-data_hl=ko.txt"}
{"question": "Firestore에서 내림차순으로 정렬하여 마지막 3개 도시를 가져오는 방법은 무엇인가요?", "answer": "Firestore에서 내림차순으로 정렬하여 마지막 3개 도시를 가져오려면 `orderBy()` 메서드에 \"desc\"를 인자로 전달하고 `limit()` 메서드를 사용합니다. 예: `citiesRef.orderBy(\"name\", \"desc\").limit(3);`", "sources": ["https://firebase.google.com/docs/firestore/query-data/order-limit-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_order-limit-data_hl=ko.txt"}
{"question": "여러 필드를 기준으로 정렬하는 방법은 무엇인가요?", "answer": "여러 필드를 기준으로 정렬하려면 `orderBy()` 메서드를 여러 번 호출하면 됩니다. 예를 들어, 주를 기준으로 정렬한 후 각 주 안에서 인구에 따라 내림차순으로 정렬하는 방법은 다음과 같습니다: `citiesRef.orderBy(\"state\").orderBy(\"population\", \"desc\");`", "sources": ["https://firebase.google.com/docs/firestore/query-data/order-limit-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_order-limit-data_hl=ko.txt"}
{"question": "Firestore에서 `where()` 필터를 `orderBy()` 및 `limit()`와 결합하는 방법은 무엇인가요?", "answer": "Firestore에서 `where()` 필터를 `orderBy()` 및 `limit()`와 결합하려면 먼저 `where()` 메서드를 사용하여 필터를 정의하고, 그 다음 `orderBy()`와 `limit()`을 사용하여 정렬 및 제한을 설정합니다. 예: `citiesRef.where(\"population\", \">\", 100000).orderBy(\"population\").limit(2);`", "sources": ["https://firebase.google.com/docs/firestore/query-data/order-limit-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_order-limit-data_hl=ko.txt"}
{"question": "Firestore에서 특정 필드의 존재 여부를 필터링하는 방법은 무엇인가요?", "answer": "Firestore에서 특정 필드를 기준으로 쿼리를 정렬할 때, 쿼리는 정렬 기준 필드가 있는 문서만 반환합니다. 예를 들어, `db.collection(\"cities\").whereEqualTo(\"country\", \"USA\").orderBy(\"population\");` 쿼리는 `population` 필드가 없는 문서를 반환하지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/order-limit-data?hl=ko#orderby_and_existence"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_order-limit-data_hl=ko.txt"}
{"question": "Firestore에서 `limit()` 메서드의 값은 어떻게 설정해야 하나요?", "answer": "`limit()` 메서드의 값은 0보다 크거나 같아야 합니다. 예를 들어, `citiesRef.limit(3);`는 3개의 문서를 반환합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/order-limit-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_order-limit-data_hl=ko.txt"}
{"question": "Firestore에서 `orderBy()`와 `where()`를 함께 사용할 때 주의해야 할 점은 무엇인가요?", "answer": "`where()` 필터에 범위 비교(<, <=, >, >=)가 포함된 경우, 동일한 필드를 기준으로 1차 정렬이 이루어져야 합니다. 예를 들어, `citiesRef.where(\"population\", \">\", 100000).orderBy(\"population\");`와 같이 사용해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/order-limit-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_order-limit-data_hl=ko.txt"}
{"question": "Firestore에서 특정 필드가 없는 문서를 쿼리할 때 발생할 수 있는 문제는 무엇인가요?", "answer": "특정 필드를 기준으로 쿼리를 정렬할 때, 해당 필드가 없는 문서는 결과 집합에서 제외됩니다. 따라서 쿼리 필터를 충족하더라도 필드가 없는 문서는 반환되지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/order-limit-data?hl=ko#orderby_and_existence"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_order-limit-data_hl=ko.txt"}
{"question": "Firestore에서 `orderBy()` 메서드를 사용할 때의 제한사항은 무엇인가요?", "answer": "`orderBy()` 메서드는 특정 필드의 존재 여부를 필터링하며, 정렬 기준 필드가 없는 문서는 결과에 포함되지 않습니다. 또한, 부등식 필터가 있는 쿼리는 해당 필드를 기준으로 한 정렬도 포함해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/order-limit-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_order-limit-data_hl=ko.txt"}
{"question": "Firestore에서 `orderBy()`를 사용하여 정렬할 때, 어떤 언어의 코드 예시를 참고할 수 있나요?", "answer": "Firestore에서 `orderBy()`를 사용하여 정렬하는 다양한 언어의 코드 예시는 다음과 같습니다: - JavaScript: `citiesRef.orderBy(\"name\").limit(3);` - Swift: `citiesRef.order(by: \"name\").limit(to: 3)` - Kotlin: `citiesRef.orderBy(\"name\").limit(3)`", "sources": ["https://firebase.google.com/docs/firestore/query-data/order-limit-data?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_order-limit-data_hl=ko.txt"}
{"question": "Cloud Firestore에서 단순 쿼리를 실행하는 방법은 무엇인가요?", "answer": "Cloud Firestore에서 단순 쿼리를 실행하려면 `where()` 메서드를 사용하여 필드, 비교 연산자, 값을 지정한 후 `get()` 메서드를 호출하여 결과를 가져옵니다. 예를 들어, 주가 \"CA\"인 도시를 쿼리하려면 다음과 같이 작성합니다: `citiesRef.where(\"state\", \"==\", \"CA\").get()`.", "sources": ["https://firebase.google.com/docs/firestore/query-data/queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_queries_hl=ko.txt"}
{"question": "복합 쿼리를 작성하는 방법은 무엇인가요?", "answer": "복합 쿼리는 여러 `where()` 메서드를 연결하여 작성할 수 있습니다. 예를 들어, 주가 \"CA\"이고 인구가 1000000보다 적은 도시를 쿼리하려면 다음과 같이 작성합니다: `citiesRef.where(\"state\", \"==\", \"CA\").where(\"population\", \"<\", 1000000)`.", "sources": ["https://firebase.google.com/docs/firestore/query-data/queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_queries_hl=ko.txt"}
{"question": "Cloud Firestore에서 배열 멤버십을 쿼리하는 방법은 무엇인가요?", "answer": "배열 멤버십을 쿼리하려면 `array-contains` 연산자를 사용하여 특정 배열 값이 포함된 문서를 찾을 수 있습니다. 예를 들어, \"regions\" 필드에 \"west_coast\"가 포함된 도시를 쿼리하려면 다음과 같이 작성합니다: `citiesRef.where(\"regions\", \"array-contains\", \"west_coast\")`.", "sources": ["https://firebase.google.com/docs/firestore/query-data/queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_queries_hl=ko.txt"}
{"question": "Cloud Firestore에서 `in` 연산자를 사용하는 방법은 무엇인가요?", "answer": "`in` 연산자를 사용하여 특정 필드에서 여러 값 중 하나와 일치하는 문서를 쿼리할 수 있습니다. 예를 들어, \"country\" 필드가 \"USA\" 또는 \"Japan\"인 도시를 쿼리하려면 다음과 같이 작성합니다: `citiesRef.where(\"country\", \"in\", [\"USA\", \"Japan\"])`.", "sources": ["https://firebase.google.com/docs/firestore/query-data/queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_queries_hl=ko.txt"}
{"question": "Cloud Firestore에서 `not-in` 연산자를 사용하는 방법은 무엇인가요?", "answer": "`not-in` 연산자를 사용하여 특정 필드가 주어진 값 중 하나와 일치하지 않는 문서를 쿼리할 수 있습니다. 예를 들어, \"country\" 필드가 \"USA\" 또는 \"Japan\"이 아닌 도시를 쿼리하려면 다음과 같이 작성합니다: `citiesRef.where(\"country\", \"not-in\", [\"USA\", \"Japan\"])`.", "sources": ["https://firebase.google.com/docs/firestore/query-data/queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_queries_hl=ko.txt"}
{"question": "Cloud Firestore에서 `array-contains-any` 연산자를 사용하는 방법은 무엇인가요?", "answer": "`array-contains-any` 연산자를 사용하여 배열 필드에서 여러 값 중 하나가 포함된 문서를 쿼리할 수 있습니다. 예를 들어, \"regions\" 필드가 \"west_coast\" 또는 \"east_coast\"를 포함하는 도시를 쿼리하려면 다음과 같이 작성합니다: `citiesRef.where(\"regions\", \"array-contains-any\", [\"west_coast\", \"east_coast\"])`.", "sources": ["https://firebase.google.com/docs/firestore/query-data/queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_queries_hl=ko.txt"}
{"question": "Cloud Firestore에서 쿼리 결과를 정렬하는 방법은 무엇인가요?", "answer": "쿼리 결과를 정렬하려면 `orderBy()` 메서드를 사용하여 정렬할 필드를 지정합니다. 예를 들어, 인구를 기준으로 정렬하려면 다음과 같이 작성합니다: `citiesRef.orderBy(\"population\").get()`.", "sources": ["https://firebase.google.com/docs/firestore/query-data/queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_queries_hl=ko.txt"}
{"question": "Cloud Firestore에서 쿼리 결과를 제한하는 방법은 무엇인가요?", "answer": "쿼리 결과를 제한하려면 `limit()` 메서드를 사용하여 반환할 문서 수를 지정합니다. 예를 들어, 상위 10개의 도시를 가져오려면 다음과 같이 작성합니다: `citiesRef.limit(10).get()`.", "sources": ["https://firebase.google.com/docs/firestore/query-data/queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_queries_hl=ko.txt"}
{"question": "Cloud Firestore에서 쿼리 성능을 설명하는 방법은 무엇인가요?", "answer": "쿼리 성능을 설명하려면 `Query Explain` 기능을 사용하여 쿼리가 실행되는 방식을 이해하고 비효율성을 식별할 수 있습니다. 자세한 내용은 Query Explain 가이드를 참조하세요.", "sources": ["https://firebase.google.com/docs/firestore/query-explain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_queries_hl=ko.txt"}
{"question": "Cloud Firestore에서 컬렉션 그룹 쿼리를 사용하는 방법은 무엇인가요?", "answer": "컬렉션 그룹 쿼리를 사용하려면 `collectionGroup()` 메서드를 사용하여 특정 컬렉션 이름을 가진 모든 하위 컬렉션에서 문서를 쿼리할 수 있습니다. 예를 들어, \"landmarks\"라는 이름의 컬렉션 그룹에서 \"type\"이 \"museum\"인 문서를 쿼리하려면 다음과 같이 작성합니다: `db.collectionGroup(\"landmarks\").where(\"type\", \"==\", \"museum\").get()`.", "sources": ["https://firebase.google.com/docs/firestore/query-data/queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_queries_hl=ko.txt"}
{"question": "쿼리 커서를 사용하여 데이터 페이지화를 어떻게 구현하나요?", "answer": "쿼리 커서를 사용하여 데이터 페이지화를 구현하려면 `startAt()` 또는 `startAfter()` 메서드를 사용하여 쿼리의 시작점을 정의하고, `limit()` 메서드를 사용하여 반환할 문서 수를 제한합니다. 예를 들어, `startAfter(lastVisible).limit(25)`를 사용하여 마지막으로 보인 문서 이후의 25개 문서를 가져올 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/query-cursors?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_query-cursors_hl=ko.txt"}
{"question": "`startAt()`과 `startAfter()`의 차이는 무엇인가요?", "answer": "`startAt()` 메서드는 시작점을 포함하여 쿼리 결과를 반환하고, `startAfter()` 메서드는 시작점을 제외하고 쿼리 결과를 반환합니다. 예를 들어, `startAt(A)`는 A를 포함한 결과를 반환하지만, `startAfter(A)`는 A를 제외한 결과를 반환합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/query-cursors?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_query-cursors_hl=ko.txt"}
{"question": "여러 필드를 기준으로 커서를 설정하는 방법은 무엇인가요?", "answer": "여러 필드를 기준으로 커서를 설정하려면 `orderBy()` 메서드를 사용하여 추가 필드를 지정하고, `startAt()` 메서드에 해당 필드의 값을 포함시킵니다. 예를 들어, `orderBy(\"name\").orderBy(\"state\").startAt(\"Springfield\", \"Missouri\")`와 같이 사용할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/query-cursors?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_query-cursors_hl=ko.txt"}
{"question": "쿼리 커서를 사용하여 문서 스냅샷을 시작점으로 설정하는 방법은 무엇인가요?", "answer": "문서 스냅샷을 쿼리 커서의 시작점으로 사용하려면, 해당 문서의 스냅샷을 가져온 후 `startAt(snapshot)` 메서드를 사용하여 쿼리를 정의합니다. 예를 들어, `db.collection(\"cities\").document(\"SF\").get().then(snapshot => { ... startAt(snapshot) })`와 같이 사용할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/query-cursors?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_query-cursors_hl=ko.txt"}
{"question": "`endAt()`과 `endBefore()` 메서드는 어떻게 사용하나요?", "answer": "`endAt()` 메서드는 쿼리의 끝점을 포함하여 결과를 반환하고, `endBefore()` 메서드는 끝점을 제외하고 결과를 반환합니다. 예를 들어, `citiesRef.orderBy(\"population\").endAt(1000000)`는 1000000을 포함한 결과를 반환합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/query-cursors?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_query-cursors_hl=ko.txt"}
{"question": "쿼리 페이지화를 위해 `limit()` 메서드를 어떻게 사용하나요?", "answer": "`limit()` 메서드는 쿼리에서 반환할 문서의 수를 제한하는 데 사용됩니다. 예를 들어, `citiesRef.orderBy(\"population\").limit(25)`는 인구 수에 따라 정렬된 문서 중 처음 25개만 반환합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/query-cursors?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_query-cursors_hl=ko.txt"}
{"question": "쿼리 커서를 사용하여 페이지를 전환하는 방법은 무엇인가요?", "answer": "페이지를 전환하려면, 이전 페이지의 마지막 문서를 기준으로 `startAfter(lastVisible)` 메서드를 사용하여 다음 페이지의 쿼리를 정의합니다. 예를 들어, `query.startAfter(lastVisible).limit(25)`와 같이 사용할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/query-cursors?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_query-cursors_hl=ko.txt"}
{"question": "Swift에서 쿼리 커서를 사용하는 예시는 무엇인가요?", "answer": "Swift에서 쿼리 커서를 사용하려면, `order(by: \"population\").start(at: [1000000])`와 같이 사용할 수 있습니다. 이는 인구 수가 1000000 이상인 도시를 반환합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/query-cursors?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_query-cursors_hl=ko.txt"}
{"question": "Python에서 쿼리 커서를 사용하는 방법은 무엇인가요?", "answer": "Python에서 쿼리 커서를 사용하려면, `cities_ref.order_by(\"population\").start_at({\"population\": 1000000})`와 같이 사용할 수 있습니다. 이는 인구 수가 1000000 이상인 도시를 반환합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/query-cursors?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_query-cursors_hl=ko.txt"}
{"question": "Node.js에서 쿼리 커서를 사용하는 예시는 무엇인가요?", "answer": "Node.js에서 쿼리 커서를 사용하려면, `query := client.Collection(\"cities\").OrderBy(\"population\", firestore.Asc).StartAt(1000000)`와 같이 사용할 수 있습니다. 이는 인구 수가 1000000 이상인 도시를 반환합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/query-cursors?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-data_query-cursors_hl=ko.txt"}
{"question": "Query Explain을 사용하여 Cloud Firestore 쿼리의 성능을 어떻게 이해할 수 있나요?", "answer": "Query Explain을 사용하면 Cloud Firestore 쿼리를 백엔드에 제출하고 그 대가로 쿼리 실행에 대한 자세한 성능 통계를 받을 수 있습니다. 이는 쿼리의 실행 방식과 비효율성, 서버 측 병목 현상이 발생할 가능성이 있는 위치를 보여줍니다.", "sources": ["https://firebase.google.com/docs/firestore/query-explain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-explain_hl=ko.txt"}
{"question": "Query Explain의 기본 옵션과 분석 옵션의 차이는 무엇인가요?", "answer": "기본 옵션을 사용하면 쿼리 계획 단계 정보만 반환되며, 쿼리를 실행하지 않습니다. 반면, 분석 옵션을 사용하면 쿼리를 계획하고 실행하여 쿼리 실행 런타임의 통계와 플래너 정보를 모두 반환합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-explain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-explain_hl=ko.txt"}
{"question": "기본 옵션으로 Query Explain을 사용하는 방법은 무엇인가요?", "answer": "기본 옵션으로 Query Explain을 사용하려면 클라이언트 라이브러리를 통해 쿼리를 작성하고 ExplainOptions를 기본으로 설정하여 요청을 제출하면 됩니다. 예를 들어, 자바에서는 `ExplainOptions options = ExplainOptions.builder().build();`를 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-explain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-explain_hl=ko.txt"}
{"question": "분석 옵션으로 Query Explain을 사용하는 방법은 무엇인가요?", "answer": "분석 옵션으로 Query Explain을 사용하려면 클라이언트 라이브러리를 통해 쿼리를 작성하고 ExplainOptions를 분석 모드로 설정하여 요청을 제출해야 합니다. 예를 들어, 노드에서는 `ExplainOptions options = ExplainOptions.builder().setAnalyze(true).build();`를 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/query-explain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-explain_hl=ko.txt"}
{"question": "Query Explain을 사용할 때 발생하는 요금은 어떻게 되나요?", "answer": "기본 옵션으로 Query Explain을 사용할 경우 색인 또는 읽기 작업이 수행되지 않으며, 읽기 작업 1회에 대한 요금만 청구됩니다. 분석 옵션을 사용할 경우 색인 및 읽기 작업이 수행되므로 일반적인 쿼리 요금이 청구됩니다.", "sources": ["https://firebase.google.com/docs/firestore/query-explain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-explain_hl=ko.txt"}
{"question": "Query Explain의 결과에서 어떤 정보를 얻을 수 있나요?", "answer": "Query Explain의 결과는 쿼리에 필요한 색인 정보, 사용된 색인, 쿼리 실행 런타임의 통계, 쿼리의 결제 정보 등을 포함하여 쿼리의 성능을 최적화하는 데 도움이 됩니다.", "sources": ["https://firebase.google.com/docs/firestore/query-explain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-explain_hl=ko.txt"}
{"question": "Query Explain은 어떤 종류의 쿼리를 지원하나요?", "answer": "Query Explain은 폴링된 쿼리를 지원하며, 스트리밍 쿼리는 아직 지원되지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/query-explain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-explain_hl=ko.txt"}
{"question": "Query Explain을 사용하여 쿼리 성능을 최적화하는 방법은 무엇인가요?", "answer": "Query Explain을 사용하여 다양한 쿼리 및 색인 구성을 테스트하고, 쿼리별로 비용 및 성능을 파악하여 비효율성을 줄이고 서버 측 병목 현상을 해결함으로써 쿼리 성능을 최적화할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/query-explain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-explain_hl=ko.txt"}
{"question": "Query Explain을 사용하기 위해 필요한 인증 방법은 무엇인가요?", "answer": "Query Explain 요청은 IAM으로 인증되며, 일반 쿼리 작업에 대한 동일한 권한을 사용합니다. Firebase Authentication과 같은 기타 인증 기술은 무시됩니다.", "sources": ["https://firebase.google.com/docs/firestore/query-explain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-explain_hl=ko.txt"}
{"question": "Query Explain을 통해 쿼리의 색인 사용 현황을 어떻게 확인할 수 있나요?", "answer": "Query Explain의 결과에서 `PlanSummary` 객체를 통해 사용된 색인 목록을 확인할 수 있습니다. 예를 들어, `List<Map<String, Object>> indexesUsed = planSummary.getIndexesUsed();`를 사용하여 색인 사용 현황을 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/query-explain?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_query-explain_hl=ko.txt"}
{"question": "Cloud Firestore 데이터베이스를 어떻게 만들 수 있나요?", "answer": "Firebase Console에서 프로젝트를 열고, 왼쪽 패널에서 '빌드'를 펼친 후 'Firestore 데이터베이스'를 선택합니다. '데이터베이스 만들기'를 클릭하고 데이터베이스의 위치를 선택한 후, Security Rules의 시작 모드를 선택하고 '만들기'를 클릭합니다.", "sources": ["https://firebase.google.com/docs/firestore/quickstart?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_quickstart_hl=ko.txt"}
{"question": "Cloud Firestore를 웹 앱에 추가하는 방법은 무엇인가요?", "answer": "Firebase를 웹 앱에 추가하려면 안내에 따라 Firebase SDK를 설치하고, Cloud Firestore SDK를 npm 패키지로 설치한 후, 다음 코드를 사용하여 초기화합니다: ```javascript import { initializeApp } from \"firebase/app\"; import { getFirestore } from \"firebase/firestore\"; ```", "sources": ["https://firebase.google.com/docs/firestore/quickstart?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_quickstart_hl=ko.txt"}
{"question": "Cloud Firestore에서 데이터를 추가하는 방법은 무엇인가요?", "answer": "다음 예시 코드를 사용하여 새 컬렉션과 문서를 추가할 수 있습니다: ```javascript import { collection, addDoc } from \"firebase/firestore\"; await addDoc(collection(db, \"users\"), { first: \"Ada\", last: \"Lovelace\", born: 1815 }); ```", "sources": ["https://firebase.google.com/docs/firestore/quickstart?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_quickstart_hl=ko.txt"}
{"question": "Cloud Firestore에서 데이터를 가져오는 방법은 무엇인가요?", "answer": "다음 코드를 사용하여 'users' 컬렉션의 데이터를 가져올 수 있습니다: ```javascript const querySnapshot = await getDocs(collection(db, \"users\")); querySnapshot.forEach((doc) => { console.log(`${doc.id} => ${doc.data()}`); }); ```", "sources": ["https://firebase.google.com/docs/firestore/quickstart?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_quickstart_hl=ko.txt"}
{"question": "Cloud Firestore의 Security Rules를 설정하는 방법은 무엇인가요?", "answer": "Firebase Console의 규칙 탭에서 Security Rules를 수정할 수 있습니다. 예를 들어, 인증된 사용자만 자신의 UID에 해당하는 문서에 대한 읽기 및 쓰기를 허용하는 규칙을 설정할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/quickstart?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_quickstart_hl=ko.txt"}
{"question": "Cloud Firestore를 초기화하는 방법은 무엇인가요?", "answer": "다음 코드를 사용하여 Cloud Firestore를 초기화할 수 있습니다: ```javascript import { initializeApp } from \"firebase/app\"; import { getFirestore } from \"firebase/firestore\"; const app = initializeApp(firebaseConfig); const db = getFirestore(app); ```", "sources": ["https://firebase.google.com/docs/firestore/quickstart?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_quickstart_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 업데이트하는 방법은 무엇인가요?", "answer": "다음 코드를 사용하여 문서를 업데이트할 수 있습니다: ```javascript const userRef = doc(db, \"users\", \"alovelace\"); await updateDoc(userRef, { born: 1816 }); ```", "sources": ["https://firebase.google.com/docs/firestore/quickstart?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_quickstart_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 삭제하는 방법은 무엇인가요?", "answer": "다음 코드를 사용하여 문서를 삭제할 수 있습니다: ```javascript const userRef = doc(db, \"users\", \"alovelace\"); await deleteDoc(userRef); ```", "sources": ["https://firebase.google.com/docs/firestore/quickstart?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_quickstart_hl=ko.txt"}
{"question": "Cloud Firestore의 에뮬레이터를 사용하는 방법은 무엇인가요?", "answer": "로컬 프로젝트 디렉터리의 루트에서 `firebase emulators:start`를 실행하여 에뮬레이터를 시작할 수 있습니다. 이후 Cloud Firestore 플랫폼 SDK를 사용하여 앱의 프로토타입 코드에서 호출합니다.", "sources": ["https://firebase.google.com/docs/firestore/quickstart?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_quickstart_hl=ko.txt"}
{"question": "Cloud Firestore에서 데이터를 쿼리하는 방법은 무엇인가요?", "answer": "다음 코드를 사용하여 특정 조건에 맞는 데이터를 쿼리할 수 있습니다: ```javascript const q = query(collection(db, \"users\"), where(\"born\", \"==\", 1815)); const querySnapshot = await getDocs(q); ```", "sources": ["https://firebase.google.com/docs/firestore/quickstart?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_quickstart_hl=ko.txt"}
{"question": "Cloud Firestore 데이터베이스를 어떻게 만들 수 있나요?", "answer": "Firebase Console에서 프로젝트를 열고, 왼쪽 패널에서 '빌드'를 펼친 후 'Firestore 데이터베이스'를 선택합니다. '데이터베이스 만들기'를 클릭하고 데이터베이스의 위치를 선택한 후, Security Rules의 시작 모드를 선택하고 '만들기'를 클릭합니다.", "sources": ["https://firebase.google.com/docs/firestore/quickstart?tab=ios%2B&hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_quickstart_tab=ios_2B_hl=ko.txt"}
{"question": "Cloud Firestore를 웹 앱에 추가하는 방법은 무엇인가요?", "answer": "Firebase를 웹 앱에 추가하려면 안내에 따라 Firebase SDK를 설치하고, Cloud Firestore SDK를 npm 패키지로 설치한 후, 다음 코드를 사용하여 Firebase와 Firestore를 가져옵니다: ```javascript import { initializeApp } from \"firebase/app\"; import { getFirestore } from \"firebase/firestore\"; ```", "sources": ["https://firebase.google.com/docs/firestore/quickstart?tab=ios%2B&hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_quickstart_tab=ios_2B_hl=ko.txt"}
{"question": "Cloud Firestore에서 데이터를 추가하는 방법은 무엇인가요?", "answer": "다음 예시 코드를 사용하여 새 컬렉션과 문서를 추가할 수 있습니다: ```javascript import { collection, addDoc } from \"firebase/firestore\"; await addDoc(collection(db, \"users\"), { first: \"Ada\", last: \"Lovelace\", born: 1815 }); ```", "sources": ["https://firebase.google.com/docs/firestore/quickstart?tab=ios%2B&hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_quickstart_tab=ios_2B_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 가져오는 방법은 무엇인가요?", "answer": "다음 코드를 사용하여 'users' 컬렉션의 모든 문서를 가져올 수 있습니다: ```javascript const querySnapshot = await getDocs(collection(db, \"users\")); querySnapshot.forEach((doc) => { console.log(`${doc.id} => ${doc.data()}`); }); ```", "sources": ["https://firebase.google.com/docs/firestore/quickstart?tab=ios%2B&hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_quickstart_tab=ios_2B_hl=ko.txt"}
{"question": "Cloud Firestore의 Security Rules를 설정하는 방법은 무엇인가요?", "answer": "Firebase Console의 규칙 탭에서 Security Rules를 수정할 수 있습니다. 기본 규칙 세트는 다음과 같습니다: ```plaintext service cloud.firestore { match /databases/{database}/documents { match /users/{uid} { allow read, write: if request.auth != null && request.auth.uid == uid; } } } ```", "sources": ["https://firebase.google.com/docs/firestore/quickstart?tab=ios%2B&hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_quickstart_tab=ios_2B_hl=ko.txt"}
{"question": "Cloud Firestore를 초기화하는 방법은 무엇인가요?", "answer": "다음 코드를 사용하여 Cloud Firestore를 초기화할 수 있습니다: ```javascript import { initializeApp } from \"firebase/app\"; import { getFirestore } from \"firebase/firestore\"; const app = initializeApp(firebaseConfig); const db = getFirestore(app); ```", "sources": ["https://firebase.google.com/docs/firestore/quickstart?tab=ios%2B&hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_quickstart_tab=ios_2B_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 업데이트하는 방법은 무엇인가요?", "answer": "다음 코드를 사용하여 문서를 업데이트할 수 있습니다: ```javascript const docRef = doc(db, \"users\", \"alovelace\"); await updateDoc(docRef, { born: 1816 }); ```", "sources": ["https://firebase.google.com/docs/firestore/quickstart?tab=ios%2B&hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_quickstart_tab=ios_2B_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 삭제하는 방법은 무엇인가요?", "answer": "다음 코드를 사용하여 문서를 삭제할 수 있습니다: ```javascript const docRef = doc(db, \"users\", \"alovelace\"); await deleteDoc(docRef); ```", "sources": ["https://firebase.google.com/docs/firestore/quickstart?tab=ios%2B&hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_quickstart_tab=ios_2B_hl=ko.txt"}
{"question": "Cloud Firestore의 에뮬레이터를 사용하는 방법은 무엇인가요?", "answer": "로컬 프로젝트 디렉터리의 루트에서 `firebase emulators:start`를 실행하여 에뮬레이터를 시작할 수 있습니다. 이후 Cloud Firestore 플랫폼 SDK를 사용하여 앱의 프로토타입 코드에서 호출합니다.", "sources": ["https://firebase.google.com/docs/firestore/quickstart?tab=ios%2B&hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_quickstart_tab=ios_2B_hl=ko.txt"}
{"question": "Cloud Firestore에서 데이터를 쿼리하는 방법은 무엇인가요?", "answer": "다음 코드를 사용하여 특정 조건에 맞는 데이터를 쿼리할 수 있습니다: ```javascript const q = query(collection(db, \"users\"), where(\"born\", \"==\", 1815)); const querySnapshot = await getDocs(q); ```", "sources": ["https://firebase.google.com/docs/firestore/quickstart?tab=ios%2B&hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_quickstart_tab=ios_2B_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 가져오는 방법은 무엇인가요?", "answer": "문서를 가져오려면 `GET` 메서드를 사용하여 `/v1/{name=projects/*/databases/*/documents/*/**}` 엔드포인트에 요청을 보내면 됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.documents#get"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 생성하는 방법은 무엇인가요?", "answer": "문서를 생성하려면 `POST` 메서드를 사용하여 `/v1/{parent=projects/*/databases/*/documents/**}/{collectionId}` 엔드포인트에 요청을 보내면 됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.documents#createDocument"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 삭제하는 방법은 무엇인가요?", "answer": "문서를 삭제하려면 `DELETE` 메서드를 사용하여 `/v1/{name=projects/*/databases/*/documents/*/**}` 엔드포인트에 요청을 보내면 됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.documents#delete"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서의 배치 쓰기를 수행하는 방법은 무엇인가요?", "answer": "문서의 배치 쓰기를 수행하려면 `POST` 메서드를 사용하여 `/v1/{database=projects/*/databases/*}/documents:batchWrite` 엔드포인트에 요청을 보내면 됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.documents#batchWrite"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서의 배치 가져오기를 수행하는 방법은 무엇인가요?", "answer": "문서의 배치 가져오기를 수행하려면 `POST` 메서드를 사용하여 `/v1/{database=projects/*/databases/*}/documents:batchGet` 엔드포인트에 요청을 보내면 됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.documents#batchGet"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서의 트랜잭션을 시작하는 방법은 무엇인가요?", "answer": "문서의 트랜잭션을 시작하려면 `POST` 메서드를 사용하여 `/v1/{database=projects/*/databases/*}/documents:beginTransaction` 엔드포인트에 요청을 보내면 됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.documents#beginTransaction"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서의 트랜잭션을 커밋하는 방법은 무엇인가요?", "answer": "문서의 트랜잭션을 커밋하려면 `POST` 메서드를 사용하여 `/v1/{database=projects/*/databases/*}/documents:commit` 엔드포인트에 요청을 보내면 됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.documents#commit"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서의 업데이트 또는 삽입을 수행하는 방법은 무엇인가요?", "answer": "문서의 업데이트 또는 삽입을 수행하려면 `PATCH` 메서드를 사용하여 `/v1/{document.name=projects/*/databases/*/documents/*/**}` 엔드포인트에 요청을 보내면 됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.documents#patch"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서의 쿼리를 실행하는 방법은 무엇인가요?", "answer": "문서의 쿼리를 실행하려면 `POST` 메서드를 사용하여 `/v1/{parent=projects/*/databases/*/documents}:runQuery` 엔드포인트에 요청을 보내면 됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.documents#runQuery"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서의 롤백을 수행하는 방법은 무엇인가요?", "answer": "문서의 롤백을 수행하려면 `POST` 메서드를 사용하여 `/v1/{database=projects/*/databases/*}/documents:rollback` 엔드포인트에 요청을 보내면 됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.documents#rollback"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_hl=ko.txt"}
{"question": "Firestore에서 여러 문서를 한 번에 가져오는 방법은 무엇인가요?", "answer": "Firestore에서 여러 문서를 한 번에 가져오려면 `batchGet` 메서드를 사용합니다. 이 메서드는 여러 문서를 가져오는 기능을 제공합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.documents#batchget"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 새로운 문서를 생성하는 방법은 무엇인가요?", "answer": "Firestore에서 새로운 문서를 생성하려면 `createDocument` 메서드를 사용합니다. 이 메서드는 새로운 문서를 생성하는 기능을 제공합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.documents#createdocument"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 문서를 삭제하는 방법은 무엇인가요?", "answer": "Firestore에서 문서를 삭제하려면 `delete` 메서드를 사용합니다. 이 메서드는 특정 문서를 삭제하는 기능을 제공합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.documents#delete"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 문서를 업데이트하거나 삽입하는 방법은 무엇인가요?", "answer": "Firestore에서 문서를 업데이트하거나 삽입하려면 `patch` 메서드를 사용합니다. 이 메서드는 문서를 업데이트하거나 새로운 문서를 삽입하는 기능을 제공합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.documents#patch"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 트랜잭션을 시작하는 방법은 무엇인가요?", "answer": "Firestore에서 트랜잭션을 시작하려면 `beginTransaction` 메서드를 사용합니다. 이 메서드는 새로운 트랜잭션을 시작하는 기능을 제공합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.documents#begintransaction"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 트랜잭션을 커밋하는 방법은 무엇인가요?", "answer": "Firestore에서 트랜잭션을 커밋하려면 `commit` 메서드를 사용합니다. 이 메서드는 트랜잭션을 커밋하며, 선택적으로 문서를 업데이트할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.documents#commit"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 문서 목록을 가져오는 방법은 무엇인가요?", "answer": "Firestore에서 문서 목록을 가져오려면 `list` 메서드를 사용합니다. 이 메서드는 문서 목록을 가져오는 기능을 제공합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.documents#list"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 문서의 생성 시간과 업데이트 시간을 어떻게 확인하나요?", "answer": "Firestore 문서의 생성 시간은 `createTime` 필드에서 확인할 수 있으며, 업데이트 시간은 `updateTime` 필드에서 확인할 수 있습니다. 두 필드는 모두 RFC 3339 형식의 문자열로 제공됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.documents#resource:-document"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 문서의 필드 이름에 대한 제약 사항은 무엇인가요?", "answer": "Firestore 문서의 필드 이름은 UTF-8로 인코딩되어야 하며, 1,500 바이트를 초과할 수 없고 비어 있을 수 없습니다. 또한, 특정 예약어를 포함할 수 없습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.documents#resource:-document"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 쿼리를 파티셔닝하는 방법은 무엇인가요?", "answer": "Firestore에서 쿼리를 파티셔닝하려면 `partitionQuery` 메서드를 사용합니다. 이 메서드는 쿼리를 파티셔닝하여 병렬로 실행할 수 있는 파티션 커서를 반환합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.documents#partitionquery"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 인덱스를 생성하는 방법은 무엇인가요?", "answer": "인덱스를 생성하려면 `create` 메서드를 사용하여 인덱스 정의를 포함한 요청을 보내야 합니다. 인덱스 정의는 `name`, `collectionId`, `fields`, `state`를 포함해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta1_projects.databases.indexes_hl=ko.txt"}
{"question": "인덱스 필드의 구조는 어떻게 되나요?", "answer": "인덱스 필드는 `fieldPath`와 `mode`로 구성됩니다. `fieldPath`는 필드의 경로를 나타내며, `mode`는 필드가 인덱싱되는 방식을 정의합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta1_projects.databases.indexes_hl=ko.txt"}
{"question": "인덱스의 상태는 어떤 값들을 가질 수 있나요?", "answer": "인덱스의 상태는 `STATE_UNSPECIFIED`, `CREATING`, `READY`, `ERROR`의 네 가지 값 중 하나를 가질 수 있습니다. `CREATING`은 인덱스가 생성 중임을 나타내고, `READY`는 인덱스가 사용 가능함을 나타냅니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta1_projects.databases.indexes_hl=ko.txt"}
{"question": "인덱스 필드의 모드는 어떤 값들이 있나요?", "answer": "인덱스 필드의 모드는 `MODE_UNSPECIFIED`, `ASCENDING`, `DESCENDING`, `ARRAY_CONTAINS`의 네 가지 값이 있습니다. `ASCENDING`은 필드 값을 오름차순으로 인덱싱하고, `DESCENDING`은 내림차순으로 인덱싱합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta1_projects.databases.indexes_hl=ko.txt"}
{"question": "인덱스를 삭제하는 방법은 무엇인가요?", "answer": "인덱스를 삭제하려면 `delete` 메서드를 사용하여 삭제할 인덱스의 리소스 이름을 포함한 요청을 보내야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta1_projects.databases.indexes_hl=ko.txt"}
{"question": "인덱스를 조회하는 방법은 무엇인가요?", "answer": "인덱스를 조회하려면 `get` 메서드를 사용하여 특정 인덱스의 리소스 이름을 포함한 요청을 보내야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta1_projects.databases.indexes_hl=ko.txt"}
{"question": "특정 필터에 맞는 인덱스를 나열하는 방법은 무엇인가요?", "answer": "특정 필터에 맞는 인덱스를 나열하려면 `list` 메서드를 사용하여 필터를 포함한 요청을 보내야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta1_projects.databases.indexes_hl=ko.txt"}
{"question": "인덱스의 `state`가 `ERROR`인 경우는 어떤 상황인가요?", "answer": "인덱스의 `state`가 `ERROR`인 경우는 인덱스 생성 중에 문제가 발생했음을 나타냅니다. 이 경우 인덱스는 업데이트되지 않으며, 최근의 긴 작업이 실패했음을 의미합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta1_projects.databases.indexes_hl=ko.txt"}
{"question": "인덱스의 `fields` 배열은 어떤 정보를 포함하나요?", "answer": "인덱스의 `fields` 배열은 인덱싱할 필드에 대한 정보를 포함하며, 각 필드는 `fieldPath`와 `mode`를 정의하는 `IndexField` 객체로 구성됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta1_projects.databases.indexes_hl=ko.txt"}
{"question": "인덱스의 `name` 필드는 어떤 용도로 사용되나요?", "answer": "인덱스의 `name` 필드는 인덱스의 리소스 이름을 나타내며, 출력 전용입니다. 이 필드는 인덱스가 생성된 후에만 사용 가능합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta1/projects.databases.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta1_projects.databases.indexes_hl=ko.txt"}
{"question": "Cloud Firestore에서 인덱스를 생성하는 방법은 무엇인가요?", "answer": "Cloud Firestore에서 인덱스를 생성하려면 `create` 메서드를 사용해야 합니다. 이 메서드는 복합 인덱스를 생성합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta2/projects.databases.collectionGroups.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_hl=ko.txt"}
{"question": "인덱스의 JSON 표현은 어떻게 되나요?", "answer": "인덱스의 JSON 표현은 다음과 같습니다: ```json { \"name\": string, \"queryScope\": enum (QueryScope), \"fields\": [ { object (IndexField) } ], \"state\": enum (State) } ```", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta2/projects.databases.collectionGroups.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_hl=ko.txt"}
{"question": "인덱스의 `name` 필드는 어떤 정보를 담고 있나요?", "answer": "`name` 필드는 서버에서 정의된 인덱스의 이름을 담고 있으며, 복합 인덱스의 경우 형식은 `projects/{projectId}/databases/{databaseId}/collectionGroups/{collectionId}/indexes/{composite_index_id}`입니다. 단일 필드 인덱스의 경우 이 필드는 비어 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta2/projects.databases.collectionGroups.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_hl=ko.txt"}
{"question": "`queryScope` 필드는 어떤 역할을 하나요?", "answer": "`queryScope` 필드는 인덱스가 특정 문서의 자식 컬렉션에 대한 쿼리를 허용하는지, 또는 특정 문서에서 파생된 모든 컬렉션에 대한 쿼리를 허용하는지를 지정합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta2/projects.databases.collectionGroups.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_hl=ko.txt"}
{"question": "인덱스의 `fields` 배열은 어떤 정보를 포함하나요?", "answer": "`fields` 배열은 이 인덱스에서 지원하는 필드를 포함하며, 복합 인덱스의 경우 항상 2개 이상의 필드가 포함됩니다. 마지막 필드 항목은 항상 필드 경로 `__name__`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta2/projects.databases.collectionGroups.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_hl=ko.txt"}
{"question": "인덱스의 `state` 필드는 무엇을 나타내나요?", "answer": "`state` 필드는 인덱스의 서비스 상태를 나타내며, 출력 전용입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta2/projects.databases.collectionGroups.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_hl=ko.txt"}
{"question": "복합 인덱스를 삭제하는 방법은 무엇인가요?", "answer": "복합 인덱스를 삭제하려면 `delete` 메서드를 사용해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta2/projects.databases.collectionGroups.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_hl=ko.txt"}
{"question": "복합 인덱스를 가져오는 방법은 무엇인가요?", "answer": "복합 인덱스를 가져오려면 `get` 메서드를 사용해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta2/projects.databases.collectionGroups.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_hl=ko.txt"}
{"question": "복합 인덱스를 나열하는 방법은 무엇인가요?", "answer": "복합 인덱스를 나열하려면 `list` 메서드를 사용해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta2/projects.databases.collectionGroups.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_hl=ko.txt"}
{"question": "인덱스 필드의 방향은 어떻게 결정되나요?", "answer": "복합 인덱스를 생성할 때 마지막 필드가 방향성이 없는 경우, `__name__` 필드는 기본적으로 오름차순(ASCENDING)으로 정렬됩니다. 마지막 필드의 방향에 따라 결정됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1beta2/projects.databases.collectionGroups.indexes?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1beta2_projects.databases.collectionGroups.indexes_hl=ko.txt"}
{"question": "ExplainMetrics의 JSON 표현은 어떻게 되나요?", "answer": "ExplainMetrics의 JSON 표현은 다음과 같습니다: ```json { \"planSummary\": { object (PlanSummary) }, \"executionStats\": { object (ExecutionStats) } } ```", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/ExplainMetrics?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_ExplainMetrics_hl=ko.txt"}
{"question": "ExplainMetrics의 planSummary 필드는 무엇을 나타내나요?", "answer": "planSummary 필드는 쿼리의 계획 단계 정보를 나타냅니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/ExplainMetrics?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_ExplainMetrics_hl=ko.txt"}
{"question": "ExplainMetrics의 executionStats 필드는 어떤 정보를 포함하나요?", "answer": "executionStats 필드는 쿼리 실행의 집계 통계를 포함하며, ExplainOptions.analyze가 true로 설정된 경우에만 존재합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/ExplainMetrics?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_ExplainMetrics_hl=ko.txt"}
{"question": "PlanSummary의 indexesUsed 필드는 어떤 형식으로 구성되나요?", "answer": "indexesUsed 필드는 쿼리에 선택된 인덱스를 나타내며, 예를 들어 다음과 같은 형식으로 구성됩니다: ```json [ {\"queryScope\": \"Collection\", \"properties\": \"(foo ASC, name ASC)\"}, {\"queryScope\": \"Collection\", \"properties\": \"(bar ASC, name ASC)\"} ] ```", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/ExplainMetrics?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_ExplainMetrics_hl=ko.txt"}
{"question": "ExecutionStats의 resultsReturned 필드는 어떤 정보를 제공하나요?", "answer": "resultsReturned 필드는 반환된 총 결과 수를 나타내며, 문서, 프로젝션, 집계 결과 및 키를 포함합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/ExplainMetrics?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_ExplainMetrics_hl=ko.txt"}
{"question": "ExecutionStats의 executionDuration 필드는 어떤 형식으로 제공되나요?", "answer": "executionDuration 필드는 백엔드에서 쿼리를 실행하는 데 걸린 총 시간을 나타내며, 초 단위로 최대 아홉 자리의 소수점 이하를 포함하고 's'로 끝나는 형식입니다. 예: \"3.5s\".", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/ExplainMetrics?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_ExplainMetrics_hl=ko.txt"}
{"question": "ExecutionStats의 readOperations 필드는 무엇을 나타내나요?", "answer": "readOperations 필드는 총 청구 가능한 읽기 작업 수를 나타냅니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/ExplainMetrics?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_ExplainMetrics_hl=ko.txt"}
{"question": "ExecutionStats의 debugStats 필드는 어떤 정보를 포함할 수 있나요?", "answer": "debugStats 필드는 쿼리 실행의 디버깅 통계를 포함할 수 있으며, 예를 들어 인덱스 항목 스캔 수, 문서 스캔 수 및 청구 세부정보를 포함할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/ExplainMetrics?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_ExplainMetrics_hl=ko.txt"}
{"question": "ExplainOptions.analyze가 true로 설정되면 어떤 변화가 있나요?", "answer": "ExplainOptions.analyze가 true로 설정되면 executionStats 필드가 포함되어 쿼리 실행의 집계 통계를 제공받을 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/ExplainMetrics?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_ExplainMetrics_hl=ko.txt"}
{"question": "ExplainMetrics의 각 필드에 대한 설명은 어디에서 확인할 수 있나요?", "answer": "ExplainMetrics의 각 필드에 대한 설명은 Firebase 문서의 해당 섹션에서 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/ExplainMetrics?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_ExplainMetrics_hl=ko.txt"}
{"question": "Firestore에서 백업 일정을 생성하는 방법은 무엇인가요?", "answer": "Firestore에서 백업 일정을 생성하려면 POST 요청을 사용하여 `https://firestore.googleapis.com/v1/{parent=projects/*/databases/*}/backupSchedules` URL에 요청을 보내야 합니다. 요청 본문에는 `BackupSchedule` 인스턴스가 포함되어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules.create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_create_hl=ko.txt"}
{"question": "백업 일정 생성 시 필요한 경로 매개변수는 무엇인가요?", "answer": "백업 일정 생성 시 필요한 경로 매개변수는 `parent`로, 이는 데이터베이스의 형식인 `projects/{project}/databases/{database}`를 따라야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules.create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_create_hl=ko.txt"}
{"question": "요청 본문에 포함해야 하는 데이터 형식은 무엇인가요?", "answer": "요청 본문에는 `BackupSchedule` 인스턴스가 포함되어야 하며, 이 인스턴스는 백업 일정의 세부 정보를 정의합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules.create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_create_hl=ko.txt"}
{"question": "백업 일정 생성 요청이 성공하면 어떤 응답을 받게 되나요?", "answer": "백업 일정 생성 요청이 성공하면 응답 본문에는 새로 생성된 `BackupSchedule` 인스턴스가 포함됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules.create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_create_hl=ko.txt"}
{"question": "Firestore 백업 일정은 최대 몇 개까지 설정할 수 있나요?", "answer": "Firestore에서는 데이터베이스에 대해 최대 두 개의 백업 일정을 설정할 수 있으며, 하나는 일일 백업 일정이고 다른 하나는 주간 백업 일정입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules.create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_create_hl=ko.txt"}
{"question": "백업 일정 생성에 필요한 인증 범위는 무엇인가요?", "answer": "백업 일정 생성을 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules.create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_create_hl=ko.txt"}
{"question": "gRPC Transcoding이란 무엇인가요?", "answer": "gRPC Transcoding은 REST API 요청을 gRPC 요청으로 변환하는 방법으로, 이 문서에서는 백업 일정 생성 요청이 gRPC Transcoding 구문을 사용한다고 명시되어 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules.create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_create_hl=ko.txt"}
{"question": "백업 일정 생성 요청을 보내기 위한 HTTP 메서드는 무엇인가요?", "answer": "백업 일정 생성 요청을 보내기 위해서는 HTTP POST 메서드를 사용해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules.create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_create_hl=ko.txt"}
{"question": "백업 일정 생성 시 요청 본문에 포함해야 할 필드의 예시는 무엇인가요?", "answer": "요청 본문에 포함해야 할 필드의 예시는 문서에 명시되어 있지 않지만, `BackupSchedule` 인스턴스의 세부 정보가 필요합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules.create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_create_hl=ko.txt"}
{"question": "Firestore 백업 일정 생성에 대한 추가 정보는 어디에서 찾을 수 있나요?", "answer": "Firestore 백업 일정 생성에 대한 추가 정보는 Firebase 문서의 해당 섹션에서 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules.create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_create_hl=ko.txt"}
{"question": "Cloud Firestore 데이터베이스의 백업 스케줄을 생성하는 방법은 무엇인가요?", "answer": "백업 스케줄을 생성하려면 `create` 메서드를 사용합니다. 이 메서드는 데이터베이스에 백업 스케줄을 생성합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_hl=ko.txt"}
{"question": "백업 스케줄의 고유 식별자는 어떻게 구성되나요?", "answer": "백업 스케줄의 고유 식별자는 `projects/{project}/databases/{database}/backupSchedules/{backupSchedule}` 형식으로 자동 할당됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_hl=ko.txt"}
{"question": "백업 스케줄의 생성 및 업데이트 시간은 어떤 형식으로 제공되나요?", "answer": "백업 스케줄의 생성 및 업데이트 시간은 RFC 3339 형식의 타임스탬프로 제공되며, 예시로는 \"2014-10-02T15:01:23Z\"와 같은 형식이 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_hl=ko.txt"}
{"question": "백업의 보존 기간은 어떻게 설정하나요?", "answer": "백업의 보존 기간은 `retention` 필드를 사용하여 설정하며, 최대 14주까지 지원됩니다. 예를 들어, \"7d\"와 같이 설정할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_hl=ko.txt"}
{"question": "매일 백업을 수행하는 스케줄은 어떻게 정의하나요?", "answer": "매일 백업을 수행하는 스케줄은 `dailyRecurrence` 객체를 사용하여 정의합니다. 이 객체는 별도의 필드를 가지지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_hl=ko.txt"}
{"question": "특정 요일에 백업을 수행하는 스케줄은 어떻게 설정하나요?", "answer": "특정 요일에 백업을 수행하는 스케줄은 `weeklyRecurrence` 객체를 사용하여 설정하며, `day` 필드에 요일을 지정합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_hl=ko.txt"}
{"question": "백업 스케줄을 삭제하는 방법은 무엇인가요?", "answer": "백업 스케줄을 삭제하려면 `delete` 메서드를 사용합니다. 이 메서드는 지정된 백업 스케줄을 삭제합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_hl=ko.txt"}
{"question": "백업 스케줄에 대한 정보를 가져오는 방법은 무엇인가요?", "answer": "백업 스케줄에 대한 정보를 가져오려면 `get` 메서드를 사용합니다. 이 메서드는 특정 백업 스케줄의 정보를 반환합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_hl=ko.txt"}
{"question": "모든 백업 스케줄을 나열하는 방법은 무엇인가요?", "answer": "모든 백업 스케줄을 나열하려면 `list` 메서드를 사용합니다. 이 메서드는 데이터베이스의 모든 백업 스케줄을 반환합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_hl=ko.txt"}
{"question": "백업 스케줄을 업데이트하는 방법은 무엇인가요?", "answer": "백업 스케줄을 업데이트하려면 `patch` 메서드를 사용합니다. 이 메서드는 기존 백업 스케줄의 정보를 수정합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_hl=ko.txt"}
{"question": "`projects.databases.backupSchedules.list` 메서드를 사용하여 백업 일정을 어떻게 나열하나요?", "answer": "백업 일정을 나열하려면 HTTP GET 요청을 사용하여 다음 URL에 요청을 보냅니다: `https://firestore.googleapis.com/v1/{parent=projects/*/databases/*}/backupSchedules`. 여기서 `{parent}`는 `projects/{project}/databases/{database}` 형식으로 지정해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_list_hl=ko.txt"}
{"question": "`projects.databases.backupSchedules.list` 메서드의 요청 본문은 어떻게 구성되나요?", "answer": "`projects.databases.backupSchedules.list` 메서드의 요청 본문은 비어 있어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_list_hl=ko.txt"}
{"question": "`projects.databases.backupSchedules.list` 메서드의 응답 구조는 어떻게 되나요?", "answer": "응답 구조는 JSON 형식으로, `backupSchedules` 배열을 포함하며 각 요소는 `BackupSchedule` 객체입니다. 예를 들어, 응답은 다음과 같은 형식을 가집니다: `{ \"backupSchedules\": [ { object (BackupSchedule) } ] }`.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_list_hl=ko.txt"}
{"question": "`projects.databases.backupSchedules.list` 메서드를 호출하기 위한 권한 범위는 무엇인가요?", "answer": "이 메서드를 호출하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_list_hl=ko.txt"}
{"question": "`parent` 파라미터의 형식은 어떻게 되나요?", "answer": "`parent` 파라미터의 형식은 `projects/{project}/databases/{database}`입니다. 여기서 `{project}`는 프로젝트 ID, `{database}`는 데이터베이스 ID를 나타냅니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_list_hl=ko.txt"}
{"question": "`projects.databases.backupSchedules.list` 메서드의 HTTP 요청 방식은 무엇인가요?", "answer": "`projects.databases.backupSchedules.list` 메서드는 HTTP GET 요청 방식을 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_list_hl=ko.txt"}
{"question": "`BackupSchedule` 객체의 구체적인 필드에 대한 설명은 어디에서 찾을 수 있나요?", "answer": "`BackupSchedule` 객체의 구체적인 필드에 대한 설명은 FirestoreAdmin.ListBackupSchedules 문서에서 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules/list#google.firestore.admin.v1.FirestoreAdmin.ListBackupSchedules"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_list_hl=ko.txt"}
{"question": "`projects.databases.backupSchedules.list` 메서드의 응답이 성공적일 때 어떤 데이터를 포함하나요?", "answer": "응답이 성공적일 경우, 응답 본문은 `backupSchedules` 배열을 포함하며, 이 배열은 모든 백업 일정의 목록을 나타냅니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_list_hl=ko.txt"}
{"question": "gRPC Transcoding에 대한 정보는 어디에서 찾을 수 있나요?", "answer": "gRPC Transcoding에 대한 정보는 Google AIP 문서에서 확인할 수 있습니다.", "sources": ["https://google.aip.dev/127"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_list_hl=ko.txt"}
{"question": "OAuth 2.0 개요에 대한 정보는 어디에서 찾을 수 있나요?", "answer": "OAuth 2.0 개요에 대한 정보는 Google Developers의 OAuth 2.0 개요 문서에서 확인할 수 있습니다.", "sources": ["https://developers.google.com/identity/protocols/OAuth2"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_list_hl=ko.txt"}
{"question": "`projects.databases.backupSchedules.patch` 메서드는 어떤 용도로 사용되나요?", "answer": "`projects.databases.backupSchedules.patch` 메서드는 백업 일정을 업데이트하는 데 사용됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_patch_hl=ko.txt"}
{"question": "이 메서드를 호출하기 위한 HTTP 요청 형식은 무엇인가요?", "answer": "이 메서드는 PATCH 요청을 사용하며, 요청 URL 형식은 `https://firestore.googleapis.com/v1/{backupSchedule.name=projects/*/databases/*/backupSchedules/*}`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_patch_hl=ko.txt"}
{"question": "요청 시 필요한 경로 매개변수는 무엇인가요?", "answer": "요청 시 필요한 경로 매개변수는 `backupSchedule.name`으로, 이는 프로젝트에 대한 고유한 백업 일정 식별자입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_patch_hl=ko.txt"}
{"question": "업데이트할 필드를 지정하기 위한 쿼리 매개변수는 무엇인가요?", "answer": "업데이트할 필드를 지정하기 위한 쿼리 매개변수는 `updateMask`이며, 이는 업데이트할 필드의 목록을 포함하는 문자열입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_patch_hl=ko.txt"}
{"question": "요청 본문에 포함해야 하는 내용은 무엇인가요?", "answer": "요청 본문에는 `BackupSchedule` 인스턴스가 포함되어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_patch_hl=ko.txt"}
{"question": "이 메서드가 성공적으로 호출되면 어떤 응답을 받게 되나요?", "answer": "성공적으로 호출되면 응답 본문에 `BackupSchedule` 인스턴스가 포함됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_patch_hl=ko.txt"}
{"question": "이 메서드를 호출하기 위해 필요한 인증 범위는 무엇인가요?", "answer": "이 메서드를 호출하기 위해 필요한 인증 범위는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_patch_hl=ko.txt"}
{"question": "`updateMask`의 형식은 어떻게 되나요?", "answer": "`updateMask`는 FieldMask 형식으로, 업데이트할 필드의 완전한 이름을 포함하는 쉼표로 구분된 목록입니다. 예: \"user.displayName,photo\".", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_patch_hl=ko.txt"}
{"question": "`backupSchedule.name`의 형식은 어떻게 되나요?", "answer": "`backupSchedule.name`의 형식은 `projects/{project}/databases/{database}/backupSchedules/{backupSchedule}`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_patch_hl=ko.txt"}
{"question": "이 메서드에 대한 OAuth 2.0 개요는 어디에서 확인할 수 있나요?", "answer": "OAuth 2.0 개요는 [여기](https://developers.google.com/identity/protocols/OAuth2)에서 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.backupSchedules_patch_hl=ko.txt"}
{"question": "Firestore에서 필드의 이름 형식은 어떻게 되나요?", "answer": "필드 이름은 다음 형식이어야 합니다: projects/{projectId}/databases/{databaseId}/collectionGroups/{collectionId}/fields/{fieldPath}. 필드 경로는 간단한 필드 이름(예: address) 또는 mapValue 내의 필드 경로(예: address.city)일 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_hl=ko.txt"}
{"question": "필드의 인덱스 구성을 어떻게 설정하나요?", "answer": "필드의 인덱스 구성은 indexConfig 객체를 사용하여 설정할 수 있습니다. 인덱스 구성을 명시적으로 제거하려면 인덱스가 빈 목록인 indexConfig를 지정하면 됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_hl=ko.txt"}
{"question": "TTL(시간 제한) 구성을 필드에 어떻게 적용하나요?", "answer": "TTL 구성을 필드에 적용하려면 ttlConfig 객체를 사용하여 필드에 대한 TTL을 설정하거나 해제할 수 있습니다. 이 필드에 타임스탬프 값을 저장하면 문서의 절대 만료 시간으로 처리됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_hl=ko.txt"}
{"question": "필드의 인덱스 구성이 조상 필드에서 설정된 경우 어떻게 확인하나요?", "answer": "usesAncestorConfig 필드를 확인하여 필드의 인덱스 구성이 조상 필드에서 설정되었는지 여부를 알 수 있습니다. true인 경우 조상 필드의 구성에서 설정된 것입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_hl=ko.txt"}
{"question": "TTL 구성의 상태는 어떻게 확인하나요?", "answer": "TTL 구성의 상태는 state 필드를 통해 확인할 수 있습니다. 상태는 STATE_UNSPECIFIED, CREATING, ACTIVE, NEEDS_REPAIR 중 하나일 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_hl=ko.txt"}
{"question": "필드의 메타데이터와 구성을 가져오는 방법은 무엇인가요?", "answer": "필드의 메타데이터와 구성을 가져오려면 get 메서드를 사용하면 됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_hl=ko.txt"}
{"question": "데이터베이스의 필드 구성을 나열하는 방법은 무엇인가요?", "answer": "데이터베이스의 필드 구성을 나열하려면 list 메서드를 사용하면 됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_hl=ko.txt"}
{"question": "필드 구성을 업데이트하는 방법은 무엇인가요?", "answer": "필드 구성을 업데이트하려면 patch 메서드를 사용하여 필드의 구성을 수정할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_hl=ko.txt"}
{"question": "필드의 인덱스 구성이 되돌려지는 중인지 확인하는 방법은 무엇인가요?", "answer": "reverting 필드를 확인하여 필드의 인덱스 구성이 되돌려지는 중인지 여부를 알 수 있습니다. true인 경우 인덱스 구성이 되돌려지는 중입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_hl=ko.txt"}
{"question": "필드에 대한 기본 인덱스 설정은 어떻게 적용되나요?", "answer": "기본 인덱스 설정은 특별한 필드인 '*'에 대해 정의된 인덱스에서 적용됩니다. 이 필드의 리소스 이름은 projects/{projectId}/databases/{databaseId}/collectionGroups/__default__/fields/*입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_hl=ko.txt"}
{"question": "FirestoreAdmin.ListFields 메서드를 사용하여 필드를 나열하는 방법은 무엇인가요?", "answer": "FirestoreAdmin.ListFields 메서드를 호출할 때, 필터를 indexConfig.usesAncestorConfig:false 또는 ttlConfig:*로 설정하여 필드를 나열할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "FirestoreAdmin.ListFields 메서드의 HTTP 요청 형식은 어떻게 되나요?", "answer": "HTTP 요청 형식은 GET이며, URL은 `https://firestore.googleapis.com/v1/{parent=projects/*/databases/*/collectionGroups/*}/fields`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "ListFields 메서드에서 사용해야 하는 경로 매개변수는 무엇인가요?", "answer": "경로 매개변수로는 `parent`가 필요하며, 형식은 `projects/{projectId}/databases/{databaseId}/collectionGroups/{collectionId}`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "ListFields 메서드에서 사용할 수 있는 쿼리 매개변수는 무엇인가요?", "answer": "사용할 수 있는 쿼리 매개변수는 `filter`, `pageSize`, `pageToken`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "ListFields 메서드의 요청 본문은 어떻게 구성되나요?", "answer": "요청 본문은 비어 있어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "ListFields 메서드의 응답 본문 구조는 어떻게 되나요?", "answer": "응답 본문은 `fields` 배열과 `nextPageToken` 문자열을 포함하며, `fields` 배열은 요청된 필드 객체를 포함합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "ListFields 메서드를 호출할 때 필요한 인증 범위는 무엇인가요?", "answer": "필요한 인증 범위는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "ListFields 메서드의 응답에서 `nextPageToken`은 어떤 용도로 사용되나요?", "answer": "`nextPageToken`은 다음 페이지의 결과를 요청하는 데 사용될 수 있는 페이지 토큰입니다. 만약 비어 있다면, 이는 마지막 페이지임을 의미합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "ListFields 메서드에서 필터를 사용하는 이유는 무엇인가요?", "answer": "필터를 사용하여 FirestoreAdmin.ListFields가 명시적으로 오버라이드된 필드만 나열하도록 제한할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "FirestoreAdmin.ListFields 메서드의 성공적인 응답은 어떤 정보를 포함하나요?", "answer": "성공적인 응답은 요청된 필드와 다음 페이지의 토큰을 포함하는 데이터 구조를 가집니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_list_hl=ko.txt"}
{"question": "`projects.databases.collectionGroups.fields.patch` 메서드는 어떤 기능을 수행하나요?", "answer": "이 메서드는 필드 구성을 업데이트합니다. 현재 필드 업데이트는 단일 필드 인덱스 구성에만 적용됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "`field.name` 파라미터의 형식은 어떻게 되나요?", "answer": "`field.name` 파라미터는 다음 형식의 문자열이어야 합니다: `projects/{projectId}/databases/{databaseId}/collectionGroups/{collectionId}/fields/{fieldPath}`. 필드 경로는 간단한 필드 이름이나 맵 값 내의 필드 경로를 포함할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "`updateMask` 파라미터는 무엇이며 어떻게 사용하나요?", "answer": "`updateMask`는 필드에 대한 마스크로, 지정된 경우 해당 필드에 대해 지정된 구성만 업데이트됩니다. 이는 필드의 완전한 이름 목록으로 구성된 쉼표로 구분된 문자열입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "요청 본문에 포함해야 하는 내용은 무엇인가요?", "answer": "요청 본문에는 `Field` 인스턴스가 포함되어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "이 메서드의 성공적인 응답 본문은 어떤 형식을 가집니까?", "answer": "성공적인 응답 본문은 `Operation` 인스턴스를 포함합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "이 메서드를 호출하기 위해 필요한 OAuth 스코프는 무엇인가요?", "answer": "필요한 OAuth 스코프는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "필드 경로에서 사용할 수 있는 특수 문자는 무엇인가요?", "answer": "필드 경로에서 사용할 수 있는 특수 문자는 `*`, `.`, `` ` `` (백틱), `[`, `]` 및 모든 ASCII 기호 문자입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "기본 필드 설정을 구성하기 위해 어떤 리소스 이름을 사용해야 하나요?", "answer": "기본 필드 설정을 구성하기 위해 사용해야 하는 리소스 이름은 `projects/{projectId}/databases/{databaseId}/collectionGroups/__default__/fields/*`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "`Field` 인스턴스의 정의는 어디에서 확인할 수 있나요?", "answer": "`Field` 인스턴스의 정의는 Firestore REST API 문서에서 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields#Field"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "이 메서드의 호출 결과를 추적하기 위해 어떤 정보를 사용할 수 있나요?", "answer": "이 메서드는 `google.longrunning.Operation`을 반환하며, 이를 사용하여 필드 업데이트의 상태를 추적할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.fields_patch_hl=ko.txt"}
{"question": "Firestore에서 복합 인덱스를 생성하는 방법은 무엇인가요?", "answer": "복합 인덱스를 생성하려면 POST 요청을 사용하여 `https://firestore.googleapis.com/v1/{parent=projects/*/databases/*/collectionGroups/*}/indexes` URL에 요청을 보내야 합니다. 요청 본문에는 `Index` 인스턴스가 포함되어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes.create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_create_hl=ko.txt"}
{"question": "복합 인덱스를 생성할 때 필요한 경로 매개변수는 무엇인가요?", "answer": "복합 인덱스를 생성할 때 필요한 경로 매개변수는 `parent`로, 형식은 `projects/{projectId}/databases/{databaseId}/collectionGroups/{collectionId}`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes.create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_create_hl=ko.txt"}
{"question": "복합 인덱스를 생성한 후 어떤 응답을 받을 수 있나요?", "answer": "복합 인덱스를 성공적으로 생성하면 응답 본문에 새로 생성된 `Operation` 인스턴스가 포함됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes.create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_create_hl=ko.txt"}
{"question": "복합 인덱스 생성 요청에 필요한 인증 범위는 무엇인가요?", "answer": "복합 인덱스 생성 요청에는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes.create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_create_hl=ko.txt"}
{"question": "복합 인덱스 생성 요청의 HTTP 메서드는 무엇인가요?", "answer": "복합 인덱스 생성 요청의 HTTP 메서드는 POST입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes.create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_create_hl=ko.txt"}
{"question": "복합 인덱스 생성 요청의 본문에 포함되어야 하는 데이터 형식은 무엇인가요?", "answer": "복합 인덱스 생성 요청의 본문에는 `Index` 인스턴스가 포함되어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes.create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_create_hl=ko.txt"}
{"question": "복합 인덱스 생성 상태를 추적하기 위해 어떤 정보를 사용할 수 있나요?", "answer": "복합 인덱스 생성 상태를 추적하기 위해 `google.longrunning.Operation`을 사용할 수 있으며, 이 메타데이터는 `IndexOperationMetadata` 유형입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes.create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_create_hl=ko.txt"}
{"question": "gRPC Transcoding이란 무엇인가요?", "answer": "gRPC Transcoding은 RESTful API 요청을 gRPC 요청으로 변환하는 방법으로, 이 문서에서는 URL이 gRPC Transcoding 구문을 사용한다고 명시되어 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes.create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_create_hl=ko.txt"}
{"question": "복합 인덱스를 생성하기 위한 요청 URL의 형식은 어떻게 되나요?", "answer": "복합 인덱스를 생성하기 위한 요청 URL의 형식은 `https://firestore.googleapis.com/v1/{parent=projects/*/databases/*/collectionGroups/*}/indexes`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes.create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_create_hl=ko.txt"}
{"question": "복합 인덱스 생성 요청의 성공적인 응답은 어떤 형식인가요?", "answer": "복합 인덱스 생성 요청이 성공적으로 처리되면 응답 본문은 새로 생성된 `Operation` 인스턴스를 포함합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes.create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_create_hl=ko.txt"}
{"question": "Firestore에서 복합 인덱스를 삭제하는 HTTP 요청은 어떻게 구성되나요?", "answer": "복합 인덱스를 삭제하기 위한 HTTP 요청은 다음과 같이 구성됩니다: `DELETE https://firestore.googleapis.com/v1/{name=projects/*/databases/*/collectionGroups/*/indexes/*}`. 여기서 `{name}`은 `projects/{projectId}/databases/{databaseId}/collectionGroups/{collectionId}/indexes/{index_id}` 형식의 문자열입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_delete_hl=ko.txt"}
{"question": "복합 인덱스를 삭제할 때 요청 본문은 어떻게 되나요?", "answer": "복합 인덱스를 삭제할 때 요청 본문은 비어 있어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_delete_hl=ko.txt"}
{"question": "복합 인덱스를 삭제하기 위해 필요한 권한은 무엇인가요?", "answer": "복합 인덱스를 삭제하기 위해서는 다음 중 하나의 OAuth 스코프가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_delete_hl=ko.txt"}
{"question": "복합 인덱스를 성공적으로 삭제했을 때의 응답은 어떻게 되나요?", "answer": "복합 인덱스를 성공적으로 삭제하면 응답 본문은 빈 JSON 객체입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_delete_hl=ko.txt"}
{"question": "복합 인덱스를 삭제하기 위한 URL에서 `{name}` 파라미터는 어떤 형식을 가져야 하나요?", "answer": "`{name}` 파라미터는 `projects/{projectId}/databases/{databaseId}/collectionGroups/{collectionId}/indexes/{index_id}` 형식을 가져야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_delete_hl=ko.txt"}
{"question": "Firestore에서 복합 인덱스를 삭제하는 메서드는 무엇인가요?", "answer": "Firestore에서 복합 인덱스를 삭제하는 메서드는 `projects.databases.collectionGroups.indexes.delete`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_delete_hl=ko.txt"}
{"question": "gRPC Transcoding이란 무엇인가요?", "answer": "gRPC Transcoding은 RESTful API와 gRPC 간의 변환을 가능하게 하는 기술로, 이 문서에서는 URL 구성이 gRPC Transcoding 구문을 사용한다고 명시되어 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_delete_hl=ko.txt"}
{"question": "복합 인덱스를 삭제하기 위한 API 요청을 보낼 때 어떤 HTTP 메서드를 사용해야 하나요?", "answer": "복합 인덱스를 삭제하기 위한 API 요청을 보낼 때는 `DELETE` HTTP 메서드를 사용해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_delete_hl=ko.txt"}
{"question": "Firestore에서 복합 인덱스를 삭제할 때 어떤 인증 방법을 사용해야 하나요?", "answer": "Firestore에서 복합 인덱스를 삭제할 때는 OAuth 2.0 인증 방법을 사용해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_delete_hl=ko.txt"}
{"question": "복합 인덱스를 삭제하는 API의 전체 URL 형식은 어떻게 되나요?", "answer": "복합 인덱스를 삭제하는 API의 전체 URL 형식은 `https://firestore.googleapis.com/v1/projects/{projectId}/databases/{databaseId}/collectionGroups/{collectionId}/indexes/{index_id}`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_delete_hl=ko.txt"}
{"question": "Firestore에서 복합 인덱스를 나열하는 방법은 무엇인가요?", "answer": "복합 인덱스를 나열하려면 HTTP GET 요청을 사용하여 다음 URL을 호출합니다: `https://firestore.googleapis.com/v1/{parent=projects/*/databases/*/collectionGroups/*}/indexes`. 여기서 `parent`는 `projects/{projectId}/databases/{databaseId}/collectionGroups/{collectionId}` 형식의 문자열입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_list_hl=ko.txt"}
{"question": "복합 인덱스를 나열할 때 사용할 수 있는 쿼리 매개변수는 무엇인가요?", "answer": "복합 인덱스를 나열할 때 사용할 수 있는 쿼리 매개변수는 `filter`, `pageSize`, `pageToken`입니다. `filter`는 결과에 적용할 필터를 지정하고, `pageSize`는 반환할 결과의 수를 설정하며, `pageToken`은 이전 호출에서 반환된 페이지 토큰을 사용하여 다음 페이지의 결과를 요청하는 데 사용됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_list_hl=ko.txt"}
{"question": "요청 본문에 어떤 내용이 포함되어야 하나요?", "answer": "요청 본문은 비어 있어야 합니다. 복합 인덱스를 나열하기 위한 요청은 본문을 필요로 하지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_list_hl=ko.txt"}
{"question": "복합 인덱스를 나열하는 요청이 성공했을 때의 응답 구조는 어떻게 되나요?", "answer": "요청이 성공하면 응답 본문은 `indexes` 배열과 `nextPageToken` 문자열을 포함합니다. `indexes` 배열은 요청된 인덱스 객체를 포함하고, `nextPageToken`은 다음 페이지의 결과를 요청하는 데 사용할 수 있는 페이지 토큰입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_list_hl=ko.txt"}
{"question": "복합 인덱스를 나열하기 위해 필요한 인증 범위는 무엇인가요?", "answer": "복합 인덱스를 나열하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_list_hl=ko.txt"}
{"question": "`pageSize` 매개변수의 역할은 무엇인가요?", "answer": "`pageSize` 매개변수는 반환할 결과의 수를 설정하는 데 사용됩니다. 이를 통해 한 번의 요청으로 받을 수 있는 인덱스의 수를 제한할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_list_hl=ko.txt"}
{"question": "`nextPageToken`은 어떤 용도로 사용되나요?", "answer": "`nextPageToken`은 이전 호출에서 반환된 페이지 토큰으로, 이를 사용하여 다음 페이지의 결과를 요청할 수 있습니다. 만약 `nextPageToken`이 비어 있다면, 이는 마지막 페이지임을 의미합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_list_hl=ko.txt"}
{"question": "복합 인덱스를 나열하는 API 호출의 HTTP 메서드는 무엇인가요?", "answer": "복합 인덱스를 나열하는 API 호출의 HTTP 메서드는 GET입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_list_hl=ko.txt"}
{"question": "`filter` 매개변수는 어떤 기능을 하나요?", "answer": "`filter` 매개변수는 복합 인덱스를 나열할 때 결과에 적용할 필터를 지정하는 데 사용됩니다. 이를 통해 특정 조건에 맞는 인덱스만을 필터링하여 나열할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_list_hl=ko.txt"}
{"question": "FirestoreAdmin.ListIndexes의 응답 구조는 어떻게 되나요?", "answer": "FirestoreAdmin.ListIndexes의 응답 구조는 `indexes` 배열과 `nextPageToken` 문자열로 구성됩니다. `indexes` 배열은 요청된 인덱스 객체를 포함하고, `nextPageToken`은 다음 페이지 요청에 사용할 수 있는 페이지 토큰입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.indexes/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.collectionGroups.indexes_list_hl=ko.txt"}
{"question": "`batchGet` 메서드를 사용하여 여러 문서를 가져오는 방법은 무엇인가요?", "answer": "`batchGet` 메서드는 POST 요청을 통해 여러 문서를 가져옵니다. 요청 URL은 `https://firestore.googleapis.com/v1/{database=projects/*/databases/*}/documents:batchGet` 형식입니다. 요청 본문에는 가져올 문서의 이름을 포함하는 `documents` 배열과 선택적으로 반환할 필드를 지정하는 `mask` 객체를 포함할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`batchGet` 요청의 요청 본문 구조는 어떻게 되나요?", "answer": "요청 본문은 다음과 같은 구조를 가집니다: ```json { \"documents\": [ \"string\" ], \"mask\": { \"object (DocumentMask)\" }, \"consistency_selector\": { \"transaction\": \"string\", \"newTransaction\": { \"object (TransactionOptions)\" }, \"readTime\": \"string\" } } ``` 여기서 `documents`는 가져올 문서의 이름을 포함하고, `mask`는 반환할 필드를 지정합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`documents` 필드에 포함되는 문서 이름의 형식은 무엇인가요?", "answer": "`documents` 필드에 포함되는 문서 이름은 `projects/{projectId}/databases/{databaseId}/documents/{document_path}` 형식이어야 하며, 요청된 문서가 주어진 데이터베이스의 자식 리소스가 아닐 경우 요청이 실패합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`mask` 필드는 무엇을 위해 사용되며, 설정하지 않을 경우의 동작은 무엇인가요?", "answer": "`mask` 필드는 반환할 필드를 지정하는 데 사용됩니다. 설정하지 않을 경우, 모든 필드가 반환됩니다. 만약 문서에 `mask`에 포함되지 않은 필드가 있다면, 해당 필드는 응답에서 반환되지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`consistency_selector`의 사용법은 무엇인가요?", "answer": "`consistency_selector`는 트랜잭션의 일관성 모드를 설정하는 데 사용됩니다. 기본값은 강한 일관성이며, `transaction` 또는 `newTransaction`을 설정하여 트랜잭션을 읽거나 새 트랜잭션을 시작할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`readTime` 필드는 어떤 형식으로 입력해야 하나요?", "answer": "`readTime` 필드는 RFC 3339 형식의 타임스탬프를 사용해야 하며, 마이크로초 정밀도로 지난 한 시간 이내의 시간을 지정해야 합니다. 예시로는 `\"2014-10-02T15:01:23Z\"`와 같은 형식이 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`batchGet` 메서드의 응답 본문 구조는 어떻게 되나요?", "answer": "응답 본문은 다음과 같은 구조를 가집니다: ```json { \"transaction\": \"string\", \"readTime\": \"string\", \"result\": { \"found\": { \"object (Document)\" }, \"missing\": \"string\" } } ``` 여기서 `transaction`은 요청의 일환으로 시작된 트랜잭션을 나타내며, `result`는 요청된 문서의 결과를 포함합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`found`와 `missing` 필드는 각각 무엇을 의미하나요?", "answer": "`found` 필드는 요청된 문서가 존재할 경우 해당 문서의 정보를 포함하며, `missing` 필드는 요청된 문서가 존재하지 않을 경우 그 문서의 이름을 포함합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`batchGet` 메서드를 사용하기 위한 인증 범위는 무엇인가요?", "answer": "`batchGet` 메서드를 사용하기 위해서는 다음 OAuth 범위 중 하나가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "`batchGet` 메서드의 요청이 실패할 수 있는 경우는 어떤 경우인가요?", "answer": "요청이 실패할 수 있는 경우는 요청된 문서가 주어진 데이터베이스의 자식 리소스가 아닐 때입니다. 이 경우 요청이 실패하며, 오류 메시지가 반환됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/batchGet?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_batchGet_hl=ko.txt"}
{"question": "Firestore의 `batchWrite` 메서드는 어떤 기능을 제공하나요?", "answer": "`batchWrite` 메서드는 여러 개의 쓰기 작업을 적용하는 기능을 제공합니다. 그러나 이 메서드는 쓰기 작업을 원자적으로 적용하지 않으며, 순서에 관계없이 적용될 수 있습니다. 각 쓰기 작업은 독립적으로 성공하거나 실패할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드의 HTTP 요청 형식은 어떻게 되나요?", "answer": "`batchWrite` 메서드는 POST 요청을 사용하며, 요청 URL은 `https://firestore.googleapis.com/v1/{database=projects/*/databases/*}/documents:batchWrite` 형식을 따릅니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드의 요청 본문 구조는 어떻게 되나요?", "answer": "요청 본문은 다음과 같은 구조를 가집니다: ```json { \"writes\": [ { \"object (Write)\" } ], \"labels\": { \"string\": \"string\" } } ```", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드에서 `writes` 필드는 어떤 역할을 하나요?", "answer": "`writes` 필드는 적용할 쓰기 작업을 포함하는 배열입니다. 이 메서드는 쓰기를 원자적으로 적용하지 않으며, 같은 문서에 대해 한 요청에서 두 번 이상 쓰기를 할 수 없습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드의 응답 본문 구조는 어떻게 되나요?", "answer": "응답 본문은 다음과 같은 구조를 가집니다: ```json { \"writeResults\": [ { \"object (WriteResult)\" } ], \"status\": [ { \"object (Status)\" } ] } ```", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드의 `writeResults` 필드는 무엇을 나타내나요?", "answer": "`writeResults` 필드는 적용된 쓰기의 결과를 나타내며, 요청의 i번째 쓰기 결과는 응답의 i번째 `writeResults`에 해당합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드에서 `status` 필드는 어떤 정보를 제공하나요?", "answer": "`status` 필드는 쓰기 작업의 적용 상태를 나타내며, 요청의 i번째 쓰기 상태는 응답의 i번째 `status`에 해당합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드를 사용할 때 필요한 인증 범위는 무엇인가요?", "answer": "`batchWrite` 메서드를 사용하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드와 관련하여 원자적으로 적용된 쓰기를 원할 경우 어떤 메서드를 사용해야 하나요?", "answer": "원자적으로 적용된 쓰기를 원할 경우 `documents.commit` 메서드를 사용해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "`batchWrite` 메서드에서 `labels` 필드는 어떤 용도로 사용되나요?", "answer": "`labels` 필드는 이 배치 쓰기와 관련된 레이블을 포함하는 객체로, \"key\": \"value\" 쌍의 목록을 포함합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/batchWrite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_batchWrite_hl=ko.txt"}
{"question": "Firestore에서 새로운 트랜잭션을 시작하는 방법은 무엇인가요?", "answer": "새로운 트랜잭션을 시작하려면 POST 요청을 사용하여 `https://firestore.googleapis.com/v1/{database=projects/*/databases/*}/documents:beginTransaction` URL에 요청을 보내야 합니다. 요청 본문에는 트랜잭션 옵션을 포함하는 JSON 구조가 필요합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "트랜잭션을 시작할 때 필요한 경로 매개변수는 무엇인가요?", "answer": "트랜잭션을 시작할 때 필요한 경로 매개변수는 `database`입니다. 이 매개변수는 `projects/{projectId}/databases/{databaseId}` 형식으로 데이터베이스 이름을 지정해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "트랜잭션 옵션은 어떻게 설정하나요?", "answer": "트랜잭션 옵션은 요청 본문의 `options` 필드에 포함되어야 하며, 기본적으로 읽기-쓰기 트랜잭션으로 설정됩니다. JSON 구조는 `{ \"options\": { /* TransactionOptions */ } }` 형식입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "트랜잭션 시작 요청이 성공했을 때의 응답 구조는 어떻게 되나요?", "answer": "트랜잭션 시작 요청이 성공하면 응답 본문은 `{ \"transaction\": string }` 형식이며, `transaction` 필드는 시작된 트랜잭션을 나타내는 base64 인코딩된 문자열입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "이 메서드를 사용하기 위해 필요한 인증 범위는 무엇인가요?", "answer": "이 메서드를 사용하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "트랜잭션을 시작하기 위한 HTTP 요청의 메서드는 무엇인가요?", "answer": "트랜잭션을 시작하기 위한 HTTP 요청의 메서드는 POST입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "트랜잭션을 시작할 때 JSON 요청 본문의 기본 구조는 어떻게 되나요?", "answer": "트랜잭션을 시작할 때 JSON 요청 본문의 기본 구조는 `{ \"options\": { /* TransactionOptions */ } }`입니다. 여기서 `options`는 트랜잭션 옵션을 포함하는 객체입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "트랜잭션 시작 요청의 성공적인 응답을 받을 때 어떤 정보를 확인할 수 있나요?", "answer": "트랜잭션 시작 요청의 성공적인 응답에서는 시작된 트랜잭션의 base64 인코딩된 문자열을 포함하는 `transaction` 필드를 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "Firestore의 트랜잭션 옵션에 대한 자세한 정보는 어디에서 찾을 수 있나요?", "answer": "Firestore의 트랜잭션 옵션에 대한 자세한 정보는 Firestore 문서의 관련 섹션에서 확인할 수 있습니다. 그러나 이 문서에서는 구체적인 트랜잭션 옵션에 대한 설명이 포함되어 있지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "이 메서드의 gRPC Transcoding에 대한 정보는 어디에서 찾을 수 있나요?", "answer": "이 메서드의 gRPC Transcoding에 대한 정보는 [Google AIP 127](https://google.aip.dev/127)에서 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/beginTransaction?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_beginTransaction_hl=ko.txt"}
{"question": "Firestore의 `commit` 메서드는 어떤 기능을 수행하나요?", "answer": "`commit` 메서드는 트랜잭션을 커밋하며, 선택적으로 문서를 업데이트할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "`commit` 메서드의 HTTP 요청 형식은 어떻게 되나요?", "answer": "`commit` 메서드는 POST 요청을 사용하며, 요청 URL은 `https://firestore.googleapis.com/v1/{database=projects/*/databases/*}/documents:commit`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "`commit` 메서드의 요청 본문 구조는 어떻게 되나요?", "answer": "요청 본문은 `{\"writes\": [...], \"transaction\": string}` 형식을 가지며, `writes`는 적용할 쓰기 작업의 배열이고, `transaction`은 트랜잭션을 적용할 경우의 base64 인코딩된 문자열입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "`commit` 메서드의 응답 본문 구조는 어떻게 되나요?", "answer": "응답 본문은 `{\"writeResults\": [...], \"commitTime\": string}` 형식을 가지며, `writeResults`는 적용된 쓰기의 결과 배열이고, `commitTime`은 커밋이 발생한 시간입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "`commit` 메서드에서 `writes` 필드는 어떤 역할을 하나요?", "answer": "`writes` 필드는 적용할 쓰기 작업을 포함하며, 항상 원자적으로 순서대로 실행됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "`commit` 메서드의 `transaction` 필드는 무엇을 의미하나요?", "answer": "`transaction` 필드는 모든 쓰기를 이 트랜잭션에서 적용하고 커밋할 경우 사용되며, base64로 인코딩된 문자열입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "`commit` 메서드의 응답에서 `commitTime`은 어떤 형식으로 제공되나요?", "answer": "`commitTime`은 RFC 3339 형식의 문자열로 제공되며, 항상 Z-normalized되고 0, 3, 6 또는 9의 소수 자릿수를 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "`commit` 메서드를 사용하기 위해 필요한 OAuth 스코프는 무엇인가요?", "answer": "`commit` 메서드를 사용하기 위해서는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform` 중 하나의 OAuth 스코프가 필요합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "`commit` 메서드의 요청 URL에서 `{database}` 파라미터는 어떤 형식이어야 하나요?", "answer": "`{database}` 파라미터는 `projects/{projectId}/databases/{databaseId}` 형식이어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "`commit` 메서드의 `writeResults` 필드는 어떤 정보를 포함하나요?", "answer": "`writeResults` 필드는 적용된 쓰기의 결과를 포함하며, 각 결과는 요청에서의 해당 쓰기와 일치합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/commit?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_commit_hl=ko.txt"}
{"question": "`createDocument` 메서드를 사용하여 새 문서를 생성하는 HTTP 요청의 형식은 무엇인가요?", "answer": "`createDocument` 메서드를 사용하여 새 문서를 생성하는 HTTP 요청은 다음과 같은 형식을 가집니다: `POST https://firestore.googleapis.com/v1/{parent=projects/*/databases/*/documents/**}/{collectionId}`. 여기서 `parent`는 필수로 제공해야 하는 리소스 경로입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "`createDocument` 메서드의 `parent` 파라미터는 무엇을 의미하나요?", "answer": "`parent` 파라미터는 필수로 제공해야 하며, 예를 들어 `projects/{projectId}/databases/{databaseId}/documents` 또는 `projects/{projectId}/databases/{databaseId}/documents/chatrooms/{chatroom_id}`와 같은 형식으로 지정됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "`createDocument` 메서드에서 `collectionId` 파라미터는 어떤 역할을 하나요?", "answer": "`collectionId` 파라미터는 필수로 제공해야 하며, `parent`에 상대적인 컬렉션 ID를 지정합니다. 예를 들어, `chatrooms`와 같은 값을 사용할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "`createDocument` 메서드의 `documentId` 쿼리 파라미터는 무엇인가요?", "answer": "`documentId` 쿼리 파라미터는 클라이언트가 지정하는 문서 ID로, 선택 사항입니다. 지정하지 않으면 서비스에서 ID를 자동으로 할당합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "요청 본문에 포함해야 하는 내용은 무엇인가요?", "answer": "요청 본문에는 `Document` 인스턴스가 포함되어야 합니다. 이 인스턴스는 생성할 문서의 내용을 정의합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "`createDocument` 메서드의 응답 본문은 어떤 형식을 가지나요?", "answer": "성공적인 응답 본문은 `Document` 인스턴스를 포함합니다. 이 인스턴스는 생성된 문서의 내용을 나타냅니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "`createDocument` 메서드를 사용하기 위한 인증 범위는 무엇인가요?", "answer": "`createDocument` 메서드를 사용하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "`mask` 쿼리 파라미터는 어떤 용도로 사용되나요?", "answer": "`mask` 쿼리 파라미터는 반환할 필드를 지정하는 데 사용됩니다. 설정하지 않으면 모든 필드가 반환됩니다. 문서에 `mask`에 포함되지 않은 필드가 있을 경우, 해당 필드는 응답에서 제외됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "`createDocument` 메서드의 요청을 성공적으로 수행했을 때의 응답은 어떤 정보를 포함하나요?", "answer": "요청을 성공적으로 수행했을 때의 응답은 생성된 문서의 정보를 포함하는 `Document` 인스턴스를 반환합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "`createDocument` 메서드의 HTTP 요청 방식은 무엇인가요?", "answer": "`createDocument` 메서드는 HTTP POST 요청 방식을 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/createDocument?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_createDocument_hl=ko.txt"}
{"question": "Firestore에서 문서를 삭제하는 HTTP 요청은 어떻게 구성되나요?", "answer": "문서를 삭제하기 위한 HTTP 요청은 다음과 같이 구성됩니다: `DELETE https://firestore.googleapis.com/v1/{name=projects/*/databases/*/documents/*/**}`. 여기서 `{name}`은 삭제할 문서의 리소스 이름을 나타냅니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "문서를 삭제할 때 필요한 경로 매개변수는 무엇인가요?", "answer": "문서를 삭제할 때 필요한 경로 매개변수는 `name`입니다. 이 매개변수는 삭제할 문서의 리소스 이름을 나타내며, 형식은 `projects/{projectId}/databases/{databaseId}/documents/{document_path}`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "문서를 삭제할 때 사용할 수 있는 쿼리 매개변수는 무엇인가요?", "answer": "문서를 삭제할 때 사용할 수 있는 쿼리 매개변수는 `currentDocument`입니다. 이는 문서에 대한 선택적 전제 조건으로, 설정된 경우 대상 문서가 이를 충족하지 않으면 요청이 실패합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "문서를 삭제하기 위한 요청 본문은 어떻게 구성되나요?", "answer": "문서를 삭제하기 위한 요청 본문은 비어 있어야 합니다. 즉, 요청 본문은 필요하지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "문서를 삭제한 후의 응답 본문은 어떻게 되나요?", "answer": "문서를 성공적으로 삭제한 경우 응답 본문은 빈 JSON 객체입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "문서를 삭제하기 위해 필요한 인증 범위는 무엇인가요?", "answer": "문서를 삭제하기 위해 필요한 인증 범위는 다음 중 하나입니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "문서를 삭제할 때 전제 조건을 설정하는 방법은 무엇인가요?", "answer": "문서를 삭제할 때 전제 조건을 설정하려면 `currentDocument` 쿼리 매개변수를 사용하여 요청을 구성하면 됩니다. 이 매개변수는 삭제할 문서가 특정 조건을 충족해야 함을 지정합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "Firestore에서 문서를 삭제할 때 발생할 수 있는 오류는 무엇인가요?", "answer": "문서를 삭제할 때 `currentDocument` 전제 조건이 설정되었으나 해당 문서가 이를 충족하지 않으면 요청이 실패합니다. 이 경우 오류가 발생할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "Firestore 문서 삭제 API를 호출할 때 필요한 HTTP 메서드는 무엇인가요?", "answer": "Firestore 문서 삭제 API를 호출할 때 필요한 HTTP 메서드는 `DELETE`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "Firestore 문서 삭제 API의 gRPC Transcoding에 대한 정보는 어디에서 찾을 수 있나요?", "answer": "Firestore 문서 삭제 API의 gRPC Transcoding에 대한 정보는 [여기](https://google.aip.dev/127)에서 찾을 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_delete_hl=ko.txt"}
{"question": "Firestore에서 특정 문서를 가져오는 HTTP 요청은 어떻게 구성하나요?", "answer": "특정 문서를 가져오기 위해서는 다음과 같은 HTTP GET 요청을 사용합니다: `GET https://firestore.googleapis.com/v1/{name=projects/*/databases/*/documents/*/**}`. 여기서 `{name}`은 문서의 리소스 이름을 나타내며, 형식은 `projects/{projectId}/databases/{databaseId}/documents/{document_path}`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_get_hl=ko.txt"}
{"question": "문서의 특정 필드만 반환받으려면 어떻게 해야 하나요?", "answer": "문서의 특정 필드만 반환받으려면 `mask` 쿼리 파라미터를 사용하여 반환할 필드를 지정해야 합니다. `mask`가 설정되지 않으면 모든 필드가 반환됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_get_hl=ko.txt"}
{"question": "Firestore에서 문서를 트랜잭션으로 읽으려면 어떤 파라미터를 사용해야 하나요?", "answer": "문서를 트랜잭션으로 읽으려면 `consistency_selector` 쿼리 파라미터에 `transaction`을 사용하고, 해당 트랜잭션의 ID를 base64로 인코딩하여 제공해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_get_hl=ko.txt"}
{"question": "문서의 특정 시점에서의 버전을 읽으려면 어떤 형식의 타임스탬프를 사용해야 하나요?", "answer": "문서의 특정 시점에서의 버전을 읽으려면 `readTime` 쿼리 파라미터를 사용해야 하며, 이 타임스탬프는 RFC 3339 형식이어야 하고, 마이크로초 정밀도를 가져야 합니다. 예를 들어, \"2014-10-02T15:01:23Z\"와 같은 형식을 사용할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_get_hl=ko.txt"}
{"question": "이 API를 사용하기 위해 필요한 OAuth 스코프는 무엇인가요?", "answer": "이 API를 사용하기 위해서는 다음 중 하나의 OAuth 스코프가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_get_hl=ko.txt"}
{"question": "요청 본문은 어떻게 구성해야 하나요?", "answer": "요청 본문은 비어 있어야 하며, 추가적인 데이터는 포함되지 않아야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_get_hl=ko.txt"}
{"question": "문서가 성공적으로 반환되면 어떤 형식의 응답을 받게 되나요?", "answer": "문서가 성공적으로 반환되면 응답 본문에는 `Document` 인스턴스가 포함됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_get_hl=ko.txt"}
{"question": "문서의 필드가 마스크에 포함되지 않으면 어떻게 되나요?", "answer": "문서의 필드가 마스크에 포함되지 않으면 해당 필드는 응답에서 반환되지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_get_hl=ko.txt"}
{"question": "문서의 리소스 이름을 어떻게 구성하나요?", "answer": "문서의 리소스 이름은 `projects/{projectId}/databases/{databaseId}/documents/{document_path}` 형식으로 구성됩니다. 여기서 `{projectId}`는 프로젝트 ID, `{databaseId}`는 데이터베이스 ID, `{document_path}`는 문서의 경로를 나타냅니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_get_hl=ko.txt"}
{"question": "문서의 필드를 반환받지 않으려면 어떻게 설정하나요?", "answer": "문서의 필드를 반환받지 않으려면 `mask` 쿼리 파라미터를 사용하여 반환할 필드를 명시적으로 설정해야 하며, 반환할 필드를 지정하지 않으면 모든 필드가 반환됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_get_hl=ko.txt"}
{"question": "Firestore 문서의 JSON 표현은 어떻게 되나요?", "answer": "Firestore 문서의 JSON 표현은 다음과 같습니다: ```json { \"name\": string, \"fields\": { string: { object (Value) }, ... }, \"createTime\": string, \"updateTime\": string } ```", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore 문서의 필드 이름에 대한 제약사항은 무엇인가요?", "answer": "Firestore 문서의 필드 이름은 UTF-8로 인코딩되어야 하며, 1,500 바이트를 초과할 수 없고 비어있어서는 안 됩니다. 또한, 필드 이름이 __.*__ 정규 표현식과 일치하는 경우는 예약어로 간주되어 사용이 금지됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore 문서의 생성 시간(createTime)과 업데이트 시간(updateTime)의 형식은 무엇인가요?", "answer": "생성 시간(createTime)과 업데이트 시간(updateTime)은 RFC 3339 형식의 문자열로 표현되며, 예시로는 \"2014-10-02T15:01:23Z\"와 같은 형식이 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 문서를 생성하는 방법은 무엇인가요?", "answer": "Firestore에서 문서를 생성하려면 `createDocument` 메서드를 사용합니다. 이 메서드는 새로운 문서를 생성하는 데 사용됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 여러 문서를 가져오는 방법은 무엇인가요?", "answer": "Firestore에서 여러 문서를 가져오려면 `batchGet` 메서드를 사용합니다. 이 메서드는 여러 문서를 동시에 가져오는 데 사용됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 문서를 삭제하는 방법은 무엇인가요?", "answer": "Firestore에서 문서를 삭제하려면 `delete` 메서드를 사용합니다. 이 메서드는 특정 문서를 삭제하는 데 사용됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 문서를 업데이트하거나 삽입하는 방법은 무엇인가요?", "answer": "Firestore에서 문서를 업데이트하거나 삽입하려면 `patch` 메서드를 사용합니다. 이 메서드는 문서를 업데이트하거나 존재하지 않는 경우 새로 삽입합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 트랜잭션을 시작하는 방법은 무엇인가요?", "answer": "Firestore에서 트랜잭션을 시작하려면 `beginTransaction` 메서드를 사용합니다. 이 메서드는 새로운 트랜잭션을 시작하는 데 사용됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 문서 목록을 가져오는 방법은 무엇인가요?", "answer": "Firestore에서 문서 목록을 가져오려면 `listDocuments` 메서드를 사용합니다. 이 메서드는 특정 경로 아래의 문서 목록을 반환합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 쿼리를 실행하는 방법은 무엇인가요?", "answer": "Firestore에서 쿼리를 실행하려면 `runQuery` 메서드를 사용합니다. 이 메서드는 주어진 조건에 따라 문서를 검색하는 데 사용됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_hl=ko.txt"}
{"question": "Firestore에서 문서를 나열하기 위한 HTTP 요청 형식은 무엇인가요?", "answer": "Firestore에서 문서를 나열하기 위한 HTTP 요청 형식은 다음과 같습니다: `GET https://firestore.googleapis.com/v1/{parent=projects/*/databases/*/documents}/{collectionId}`. 이 URL은 gRPC Transcoding 구문을 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "`parent` 파라미터의 형식은 어떻게 되나요?", "answer": "`parent` 파라미터는 필수이며, 형식은 `projects/{projectId}/databases/{databaseId}/documents` 또는 `projects/{projectId}/databases/{databaseId}/documents/{document_path}`입니다. 예를 들어: `projects/my-project/databases/my-database/documents` 또는 `projects/my-project/databases/my-database/documents/chatrooms/my-chatroom`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "`collectionId` 파라미터는 무엇이며, 어떻게 사용하나요?", "answer": "`collectionId` 파라미터는 선택 사항으로, 부모에 상대적인 컬렉션 ID를 나열하는 데 사용됩니다. 예를 들어: `chatrooms` 또는 `messages`와 같이 사용할 수 있습니다. 제공하지 않으면 Firestore는 제공된 부모 아래의 모든 컬렉션에서 문서를 나열합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "`pageSize` 파라미터는 어떤 역할을 하나요?", "answer": "`pageSize` 파라미터는 단일 응답에서 반환할 최대 문서 수를 지정하는 선택적 파라미터입니다. Firestore는 이 값보다 적은 수의 문서를 반환할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "`showMissing` 파라미터는 무엇을 의미하나요?", "answer": "`showMissing` 파라미터는 누락된 문서를 표시할지를 결정합니다. 누락된 문서는 존재하지 않지만 그 아래에 하위 문서가 있는 경우를 의미합니다. 이 값이 true로 설정되면, 이러한 누락된 문서가 키와 함께 반환되지만 필드, createTime 또는 updateTime은 설정되지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "`orderBy` 파라미터는 어떻게 사용하나요?", "answer": "`orderBy` 파라미터는 반환할 문서의 선택적 정렬 방식을 지정합니다. 예를 들어: `priority desc`, `__name__ desc`와 같이 사용할 수 있습니다. 이 파라미터가 없으면 문서는 `__name__ ASC` 기준으로 정렬됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "요청 본문은 어떻게 구성되나요?", "answer": "요청 본문은 비어 있어야 합니다. 즉, 요청을 보낼 때 본문에 어떤 내용도 포함하지 않아야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "이 API를 사용하기 위해 필요한 인증 범위는 무엇인가요?", "answer": "이 API를 사용하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "`mask` 파라미터는 어떤 용도로 사용되나요?", "answer": "`mask` 파라미터는 반환할 필드를 지정하는 선택적 파라미터입니다. 설정하지 않으면 모든 필드가 반환됩니다. 문서에 이 마스크에 없는 필드가 있는 경우, 해당 필드는 응답에서 반환되지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "`transaction` 파라미터는 무엇을 의미하나요?", "answer": "`transaction` 파라미터는 이미 활성화된 트랜잭션의 일환으로 읽기를 수행하도록 지정하는 선택적 파라미터입니다. 이 값은 base64로 인코딩된 문자열 형식이어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/listDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_listDocuments_hl=ko.txt"}
{"question": "Firestore에서 문서를 나열하기 위한 HTTP 요청은 어떻게 구성되나요?", "answer": "Firestore에서 문서를 나열하기 위한 HTTP 요청은 다음과 같이 구성됩니다: `GET https://firestore.googleapis.com/v1/{parent=projects/*/databases/*/documents/*/**}/{collectionId}`. 여기서 `parent`는 필수 매개변수로, 프로젝트 및 데이터베이스의 경로를 포함해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents.list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_list_hl=ko.txt"}
{"question": "`parent` 매개변수의 형식은 무엇인가요?", "answer": "`parent` 매개변수는 다음 형식이어야 합니다: `projects/{projectId}/databases/{databaseId}/documents` 또는 `projects/{projectId}/databases/{databaseId}/documents/{document_path}`. 예를 들어: `projects/my-project/databases/my-database/documents`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents.list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_list_hl=ko.txt"}
{"question": "`collectionId` 매개변수는 무엇이며, 어떻게 사용하나요?", "answer": "`collectionId` 매개변수는 선택적이며, 부모에 상대적인 컬렉션 ID를 나열하는 데 사용됩니다. 예를 들어, `chatrooms` 또는 `messages`와 같은 값을 가질 수 있습니다. 제공하지 않으면 Firestore는 제공된 부모 아래의 모든 컬렉션에서 문서를 나열합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents.list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_list_hl=ko.txt"}
{"question": "`pageSize` 매개변수는 어떤 역할을 하나요?", "answer": "`pageSize` 매개변수는 단일 응답에서 반환할 최대 문서 수를 지정하는 선택적 매개변수입니다. Firestore는 이 값보다 적은 수의 문서를 반환할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents.list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_list_hl=ko.txt"}
{"question": "`showMissing` 매개변수는 무엇을 의미하나요?", "answer": "`showMissing` 매개변수는 누락된 문서를 표시할지를 결정합니다. 누락된 문서는 존재하지 않지만 그 아래에 하위 문서가 있는 경우를 의미합니다. 이 값이 true로 설정되면, 이러한 누락된 문서가 키와 함께 반환되지만 필드, createTime 또는 updateTime은 설정되지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents.list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_list_hl=ko.txt"}
{"question": "요청 본문은 어떻게 구성되나요?", "answer": "요청 본문은 비어 있어야 합니다. 즉, 문서를 나열하기 위한 요청에는 본문이 필요하지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents.list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_list_hl=ko.txt"}
{"question": "Firestore에서 문서를 나열할 때 사용할 수 있는 인증 범위는 무엇인가요?", "answer": "Firestore에서 문서를 나열하기 위해 필요한 인증 범위는 다음 중 하나입니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents.list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_list_hl=ko.txt"}
{"question": "`orderBy` 매개변수는 어떤 용도로 사용되나요?", "answer": "`orderBy` 매개변수는 반환할 문서의 선택적 정렬 방식을 지정하는 데 사용됩니다. 예를 들어, `priority desc` 또는 `__name__ desc`와 같은 형식으로 사용할 수 있습니다. 이 매개변수가 없으면 문서는 기본적으로 `__name__ ASC`로 정렬됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents.list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_list_hl=ko.txt"}
{"question": "`mask` 매개변수는 무엇을 제어하나요?", "answer": "`mask` 매개변수는 반환할 필드를 제어합니다. 이 매개변수가 설정되지 않으면 모든 필드가 반환됩니다. 문서에 이 마스크에 없는 필드가 있는 경우, 해당 필드는 응답에서 반환되지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents.list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_list_hl=ko.txt"}
{"question": "`transaction` 매개변수는 어떤 경우에 사용되나요?", "answer": "`transaction` 매개변수는 이미 활성화된 트랜잭션의 일환으로 읽기를 수행할 때 사용됩니다. 이 값은 base64로 인코딩된 문자열 형식이어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents.list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_list_hl=ko.txt"}
{"question": "`partitionQuery` 메서드는 어떤 기능을 제공하나요?", "answer": "`partitionQuery` 메서드는 쿼리를 파티셔닝하여 병렬로 쿼리를 실행할 수 있는 파티션 커서를 반환합니다. 반환된 파티션 커서는 `documents.runQuery`의 시작/종료 지점으로 사용될 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`partitionQuery` 메서드의 HTTP 요청 형식은 무엇인가요?", "answer": "`partitionQuery` 메서드는 POST 요청을 사용하며, 요청 URL은 `https://firestore.googleapis.com/v1/{parent=projects/*/databases/*/documents}:partitionQuery` 형식을 따릅니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`partitionQuery` 요청의 필수 경로 매개변수는 무엇인가요?", "answer": "필수 경로 매개변수는 `parent`로, 형식은 `projects/{projectId}/databases/{databaseId}/documents`입니다. 문서 리소스 이름은 지원되지 않으며, 오직 데이터베이스 리소스 이름만 지정할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`partitionQuery` 요청 본문의 구조는 어떻게 되나요?", "answer": "요청 본문은 다음과 같은 구조를 가집니다: ```json { \"partitionCount\": \"string\", \"pageToken\": \"string\", \"pageSize\": integer, \"structuredQuery\": { object (StructuredQuery) } } ```", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`partitionCount` 필드는 어떤 역할을 하나요?", "answer": "`partitionCount` 필드는 원하는 최대 파티션 포인트 수를 지정합니다. 이 숫자는 양수여야 하며, 실제 반환되는 파티션 수는 이보다 적을 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`pageToken` 필드는 무엇을 의미하나요?", "answer": "`pageToken` 필드는 이전 호출에서 반환된 `nextPageToken` 값을 사용하여 추가 결과 세트를 가져오는 데 사용됩니다. 결과 세트 간에는 정렬 보장이 없으므로 여러 결과 세트를 사용할 경우 병합해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`structuredQuery` 필드는 어떤 형식이어야 하나요?", "answer": "`structuredQuery` 필드는 구조화된 쿼리 객체여야 하며, 쿼리는 모든 하위 항목을 포함하는 컬렉션을 지정하고 이름 오름차순으로 정렬되어야 합니다. 다른 필터, 정렬, 제한, 오프셋, 시작/종료 커서는 지원되지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`nextPageToken` 필드는 어떤 정보를 제공하나요?", "answer": "`nextPageToken` 필드는 추가 결과 세트를 요청하는 데 사용할 수 있는 페이지 토큰을 제공합니다. 이 값이 비어 있으면 더 이상 결과가 없음을 의미합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`partitionQuery` 메서드의 응답 본문 구조는 어떻게 되나요?", "answer": "응답 본문은 다음과 같은 구조를 가집니다: ```json { \"partitions\": [ { object (Cursor) } ], \"nextPageToken\": \"string\" } ```", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`partitionQuery` 메서드를 사용하기 위한 인증 범위는 무엇인가요?", "answer": "`partitionQuery` 메서드를 사용하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/partitionQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_partitionQuery_hl=ko.txt"}
{"question": "`projects.databases.documents.patch` 메서드는 어떤 용도로 사용되나요?", "answer": "`projects.databases.documents.patch` 메서드는 문서를 업데이트하거나 삽입하는 데 사용됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "`PATCH` 요청의 URL 형식은 어떻게 되나요?", "answer": "`PATCH` 요청의 URL 형식은 `https://firestore.googleapis.com/v1/{document.name=projects/*/databases/*/documents/*/**}`입니다. 이 URL은 gRPC Transcoding 구문을 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "`document.name` 파라미터는 무엇을 의미하나요?", "answer": "`document.name` 파라미터는 문서의 리소스 이름을 나타내며, 예를 들어 `projects/{projectId}/databases/{databaseId}/documents/{document_path}` 형식을 가집니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "`updateMask` 파라미터는 어떤 역할을 하나요?", "answer": "`updateMask` 파라미터는 업데이트할 필드를 지정합니다. 마스크에 포함되지 않은 필드는 변경되지 않으며, 마스크에 포함되지만 입력 문서에 없는 필드는 서버의 문서에서 삭제됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "`mask` 파라미터는 무엇을 제어하나요?", "answer": "`mask` 파라미터는 응답에서 반환할 필드를 제어합니다. 설정하지 않으면 모든 필드가 반환되며, 마스크에 포함되지 않은 필드는 응답에서 반환되지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "`currentDocument` 파라미터는 어떤 경우에 사용되나요?", "answer": "`currentDocument` 파라미터는 문서에 대한 선택적 전제 조건을 설정하는 데 사용됩니다. 이 파라미터가 설정되면, 해당 조건이 충족되지 않으면 요청이 실패합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "요청 본문에는 어떤 내용이 포함되어야 하나요?", "answer": "요청 본문에는 `Document` 인스턴스가 포함되어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "성공적인 요청의 응답 본문에는 어떤 내용이 포함되나요?", "answer": "성공적인 요청의 응답 본문에는 `Document` 인스턴스가 포함됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "이 메서드를 사용하기 위해 필요한 OAuth 스코프는 무엇인가요?", "answer": "이 메서드를 사용하기 위해 필요한 OAuth 스코프는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "`Document` 인스턴스에 대한 자세한 내용은 어디에서 확인할 수 있나요?", "answer": "`Document` 인스턴스에 대한 자세한 내용은 [Document 문서](https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents#Document)에서 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_patch_hl=ko.txt"}
{"question": "`runAggregationQuery` 메서드는 어떤 용도로 사용되나요?", "answer": "`runAggregationQuery` 메서드는 Firestore에서 집계 쿼리를 실행하여 AggregationResult 시리즈를 생성하는 데 사용됩니다. 이 메서드는 Document 결과를 생성하는 대신 집계를 수행합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`runAggregationQuery`를 호출하기 위한 HTTP 요청 형식은 무엇인가요?", "answer": "`runAggregationQuery`를 호출하기 위한 HTTP 요청 형식은 POST이며, URL은 `https://firestore.googleapis.com/v1/{parent=projects/*/databases/*/documents}:runAggregationQuery`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`runAggregationQuery`의 요청 본문 구조는 어떻게 되나요?", "answer": "요청 본문은 `explainOptions`, `query_type`, `consistency_selector`를 포함하는 JSON 구조를 가집니다. `query_type`은 `structuredAggregationQuery`를 포함해야 하며, `consistency_selector`는 `transaction`, `newTransaction`, 또는 `readTime` 중 하나를 선택할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "집계 쿼리에서 사용할 수 있는 집계 함수는 무엇이 있나요?", "answer": "집계 쿼리에서 사용할 수 있는 집계 함수는 `count`, `sum`, `avg`가 있습니다. 각 함수는 문서의 특정 필드에 대해 집계를 수행합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`Count` 집계의 `upTo` 필드는 어떤 용도로 사용되나요?", "answer": "`Count` 집계의 `upTo` 필드는 집계할 문서의 최대 수를 제한하는 데 사용됩니다. 이 필드는 선택 사항이며, 지정하지 않으면 제한이 없습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`Sum` 집계는 어떤 조건을 만족해야 하나요?", "answer": "`Sum` 집계는 요청된 필드의 값이 숫자여야 하며, 비숫자 값이나 NULL은 건너뛰어집니다. 또한, 집계된 값이 비어있으면 0을 반환합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`Avg` 집계의 반환 값은 어떤 형식인가요?", "answer": "`Avg` 집계는 항상 결과를 double 형식으로 반환합니다. 집계된 값이 비어있으면 NULL을 반환합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`runAggregationQuery`의 응답 본문 구조는 어떻게 되나요?", "answer": "응답 본문은 `result`, `transaction`, `readTime`, `explainMetrics`를 포함하는 JSON 구조를 가집니다. `result`는 단일 집계 결과를 포함합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`runAggregationQuery`를 사용할 때 필요한 OAuth 스코프는 무엇인가요?", "answer": "`runAggregationQuery`를 사용할 때 필요한 OAuth 스코프는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`runAggregationQuery`의 `explainOptions` 필드는 어떤 역할을 하나요?", "answer": "`explainOptions` 필드는 쿼리에 대한 추가 통계 정보를 반환하도록 설정할 수 있는 선택적 필드입니다. 설정하지 않으면 쿼리 결과만 반환됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/runAggregationQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_runAggregationQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드를 호출하기 위한 HTTP 요청 형식은 무엇인가요?", "answer": "`runQuery` 메서드는 POST 요청을 사용하며, 요청 URL은 `https://firestore.googleapis.com/v1/{parent=projects/*/databases/*/documents}:runQuery` 형식을 따릅니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드의 `parent` 파라미터는 어떤 형식을 가져야 하나요?", "answer": "`parent` 파라미터는 필수이며, 형식은 `projects/{projectId}/databases/{databaseId}/documents` 또는 `projects/{projectId}/databases/{databaseId}/documents/{document_path}`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 요청의 본문에서 사용할 수 있는 `query_type`의 종류는 무엇인가요?", "answer": "`query_type`은 `structuredQuery` 객체로만 설정할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드에서 `explainOptions`는 어떤 역할을 하나요?", "answer": "`explainOptions`는 선택적 필드로, 쿼리에 대한 추가 통계를 반환하도록 설정할 수 있습니다. 설정하지 않으면 쿼리 결과만 반환됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드의 응답 본문에서 `transaction` 필드는 어떤 정보를 담고 있나요?", "answer": "`transaction` 필드는 요청의 일환으로 시작된 트랜잭션의 ID를 담고 있으며, 이는 요청에서 `RunQueryRequest.new_transaction`이 설정된 경우에만 포함됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드의 응답에서 `readTime` 필드는 어떤 형식으로 제공되나요?", "answer": "`readTime` 필드는 RFC 3339 형식의 타임스탬프 문자열로 제공되며, 문서가 읽힌 시간을 나타냅니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드에서 `skippedResults` 필드는 어떤 정보를 나타내나요?", "answer": "`skippedResults` 필드는 마지막 응답과 현재 응답 사이의 오프셋으로 인해 건너뛴 결과의 수를 나타냅니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드의 응답에서 `done` 필드는 어떤 의미인가요?", "answer": "`done` 필드는 Firestore가 요청을 완전히 마쳤고 더 이상 문서가 반환되지 않음을 나타냅니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드를 사용할 때 필요한 OAuth 스코프는 무엇인가요?", "answer": "`runQuery` 메서드를 사용하기 위해서는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform` 중 하나의 OAuth 스코프가 필요합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`runQuery` 메서드에서 `newTransaction` 필드는 어떤 기능을 하나요?", "answer": "`newTransaction` 필드는 새로운 트랜잭션을 시작하고 문서를 읽도록 설정하며, 기본적으로 읽기 전용 트랜잭션으로 설정됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.documents/runQuery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.documents_runQuery_hl=ko.txt"}
{"question": "`projects.databases.operations.cancel` 메서드는 어떤 기능을 수행하나요?", "answer": "`projects.databases.operations.cancel` 메서드는 장기 실행 작업의 비동기 취소를 시작합니다. 서버는 작업을 취소하기 위해 최선을 다하지만, 성공이 보장되지는 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/cancel?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_cancel_hl=ko.txt"}
{"question": "이 메서드를 호출할 때 필요한 HTTP 요청 형식은 무엇인가요?", "answer": "이 메서드는 POST 요청을 사용하며, 요청 URL은 `https://firestore.googleapis.com/v1/{name=projects/*/databases/*/operations/*}:cancel` 형식입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/cancel?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_cancel_hl=ko.txt"}
{"question": "`cancel` 메서드의 요청 본문은 어떻게 구성되나요?", "answer": "`cancel` 메서드의 요청 본문은 비어 있어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/cancel?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_cancel_hl=ko.txt"}
{"question": "`cancel` 메서드 호출 후 성공적인 취소가 이루어졌는지 어떻게 확인하나요?", "answer": "클라이언트는 `Operations.GetOperation` 메서드나 다른 방법을 사용하여 취소가 성공했는지 또는 작업이 취소에도 불구하고 완료되었는지 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/cancel?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_cancel_hl=ko.txt"}
{"question": "`cancel` 메서드가 성공적으로 호출되면 응답 본문은 어떻게 되나요?", "answer": "성공적으로 호출되면 응답 본문은 빈 JSON 객체입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/cancel?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_cancel_hl=ko.txt"}
{"question": "`cancel` 메서드 호출 시 필요한 인증 범위는 무엇인가요?", "answer": "이 메서드를 호출하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/cancel?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_cancel_hl=ko.txt"}
{"question": "서버가 `cancel` 메서드를 지원하지 않을 경우 어떤 응답을 받게 되나요?", "answer": "서버가 이 메서드를 지원하지 않을 경우 `google.rpc.Code.UNIMPLEMENTED`를 반환합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/cancel?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_cancel_hl=ko.txt"}
{"question": "취소된 작업의 상태는 어떻게 되나요?", "answer": "취소된 작업은 삭제되지 않고, 대신 `Operation.error` 값이 있는 작업으로 남아 있으며, `google.rpc.Status.code`는 1로 설정되어 `Code.CANCELLED`에 해당합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/cancel?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_cancel_hl=ko.txt"}
{"question": "`cancel` 메서드의 경로 매개변수 `name`은 무엇을 의미하나요?", "answer": "`name` 매개변수는 취소할 작업 리소스의 이름을 나타냅니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/cancel?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_cancel_hl=ko.txt"}
{"question": "`cancel` 메서드의 gRPC 전송 구문은 무엇인가요?", "answer": "이 메서드는 gRPC 전송 구문을 사용하며, 이는 `https://google.aip.dev/127`에서 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/cancel?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_cancel_hl=ko.txt"}
{"question": "Firestore에서 긴 실행 작업을 삭제하는 방법은 무엇인가요?", "answer": "Firestore에서 긴 실행 작업을 삭제하려면 HTTP DELETE 요청을 사용하여 다음 URL을 호출해야 합니다: `https://firestore.googleapis.com/v1/{name=projects/*/databases/*/operations/*}`. 여기서 `{name}`은 삭제할 작업 리소스의 이름입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_delete_hl=ko.txt"}
{"question": "긴 실행 작업을 삭제할 때 요청 본문은 어떻게 구성해야 하나요?", "answer": "긴 실행 작업을 삭제할 때 요청 본문은 비어 있어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_delete_hl=ko.txt"}
{"question": "긴 실행 작업 삭제 요청이 성공하면 어떤 응답을 받게 되나요?", "answer": "긴 실행 작업 삭제 요청이 성공하면 응답 본문은 빈 JSON 객체입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_delete_hl=ko.txt"}
{"question": "긴 실행 작업 삭제 요청을 보낼 때 필요한 인증 범위는 무엇인가요?", "answer": "긴 실행 작업 삭제 요청을 보낼 때는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_delete_hl=ko.txt"}
{"question": "서버가 긴 실행 작업 삭제 요청을 지원하지 않을 경우 어떤 응답을 받게 되나요?", "answer": "서버가 긴 실행 작업 삭제 요청을 지원하지 않을 경우, 응답으로 `google.rpc.Code.UNIMPLEMENTED`가 반환됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_delete_hl=ko.txt"}
{"question": "긴 실행 작업 삭제를 위한 HTTP 요청의 메서드는 무엇인가요?", "answer": "긴 실행 작업 삭제를 위한 HTTP 요청의 메서드는 DELETE입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_delete_hl=ko.txt"}
{"question": "긴 실행 작업 삭제를 위한 URL에서 `{name}` 파라미터는 어떤 형식이어야 하나요?", "answer": "`{name}` 파라미터는 삭제할 작업 리소스의 이름을 포함하는 문자열 형식이어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_delete_hl=ko.txt"}
{"question": "Firestore의 긴 실행 작업 삭제 메서드는 어떤 API 버전을 사용하나요?", "answer": "Firestore의 긴 실행 작업 삭제 메서드는 v1 API 버전을 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_delete_hl=ko.txt"}
{"question": "긴 실행 작업 삭제 요청을 위한 gRPC Transcoding의 문서는 어디에서 확인할 수 있나요?", "answer": "긴 실행 작업 삭제 요청을 위한 gRPC Transcoding의 문서는 [여기](https://google.aip.dev/127)에서 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_delete_hl=ko.txt"}
{"question": "긴 실행 작업 삭제와 관련된 OAuth 2.0 개요는 어디에서 확인할 수 있나요?", "answer": "긴 실행 작업 삭제와 관련된 OAuth 2.0 개요는 [여기](https://developers.google.com/identity/protocols/OAuth2)에서 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_delete_hl=ko.txt"}
{"question": "Firestore의 long-running operation의 JSON 표현은 어떻게 되나요?", "answer": "Firestore의 long-running operation의 JSON 표현은 다음과 같습니다: ```json { \"name\": string, \"metadata\": { \"@type\": string, field1: ..., ... }, \"done\": boolean, \"error\": { object (Status) }, \"response\": { \"@type\": string, field1: ..., ... } } ```", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_hl=ko.txt"}
{"question": "long-running operation의 'name' 필드는 무엇을 의미하나요?", "answer": "'name' 필드는 서버에서 할당된 이름으로, 원래 반환된 서비스 내에서만 고유합니다. 기본 HTTP 매핑을 사용하는 경우, 이름은 operations/{unique_id}로 끝나는 리소스 이름이어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_hl=ko.txt"}
{"question": "'done' 필드는 어떤 정보를 제공하나요?", "answer": "'done' 필드는 작업이 완료되었는지를 나타내며, 값이 false이면 작업이 진행 중임을 의미하고, true이면 작업이 완료되어 error 또는 response가 사용 가능하다는 것을 의미합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_hl=ko.txt"}
{"question": "long-running operation의 'metadata' 필드는 어떤 정보를 포함하나요?", "answer": "'metadata' 필드는 서비스 특정 메타데이터를 포함하며, 일반적으로 진행 정보 및 생성 시간과 같은 공통 메타데이터를 포함합니다. 일부 서비스는 이러한 메타데이터를 제공하지 않을 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_hl=ko.txt"}
{"question": "'error' 필드는 어떤 경우에 사용되나요?", "answer": "'error' 필드는 작업이 실패하거나 취소된 경우의 오류 결과를 포함합니다. 'done'이 true일 때만 설정됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_hl=ko.txt"}
{"question": "'response' 필드는 어떤 정보를 포함하나요?", "answer": "'response' 필드는 작업의 정상적인 성공 응답을 포함하며, 원래 메서드가 성공 시 데이터를 반환하지 않는 경우, 응답은 google.protobuf.Empty입니다. 원래 메서드가 Get/Create/Update인 경우, 응답은 해당 리소스를 포함해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_hl=ko.txt"}
{"question": "long-running operation을 취소하는 방법은 무엇인가요?", "answer": "long-running operation을 취소하려면 'cancel' 메서드를 사용하여 비동기 취소를 시작할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_hl=ko.txt"}
{"question": "long-running operation을 삭제하는 방법은 무엇인가요?", "answer": "long-running operation을 삭제하려면 'delete' 메서드를 사용하여 해당 작업을 삭제할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_hl=ko.txt"}
{"question": "long-running operation의 최신 상태를 가져오는 방법은 무엇인가요?", "answer": "long-running operation의 최신 상태를 가져오려면 'get' 메서드를 사용하여 해당 작업의 상태를 조회할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_hl=ko.txt"}
{"question": "특정 필터에 맞는 long-running operation을 나열하는 방법은 무엇인가요?", "answer": "특정 필터에 맞는 long-running operation을 나열하려면 'list' 메서드를 사용하여 요청에서 지정한 필터에 맞는 작업을 나열할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_hl=ko.txt"}
{"question": "`projects.databases.operations.list` 메서드는 어떤 기능을 수행하나요?", "answer": "`projects.databases.operations.list` 메서드는 요청에서 지정된 필터와 일치하는 작업을 나열합니다. 서버가 이 메서드를 지원하지 않는 경우, UNIMPLEMENTED 오류를 반환합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_list_hl=ko.txt"}
{"question": "`projects.databases.operations.list` 메서드의 HTTP 요청 형식은 무엇인가요?", "answer": "HTTP 요청 형식은 GET이며, URL은 `https://firestore.googleapis.com/v1/{name=projects/*/databases/*}/operations`입니다. 이 URL은 gRPC Transcoding 구문을 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_list_hl=ko.txt"}
{"question": "`projects.databases.operations.list` 메서드에서 사용되는 경로 매개변수는 무엇인가요?", "answer": "경로 매개변수는 `name`이며, 이는 작업의 부모 리소스의 이름을 나타내는 문자열입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_list_hl=ko.txt"}
{"question": "이 메서드에서 사용할 수 있는 쿼리 매개변수는 무엇인가요?", "answer": "사용할 수 있는 쿼리 매개변수는 `filter` (표준 목록 필터), `pageSize` (표준 목록 페이지 크기), `pageToken` (표준 목록 페이지 토큰)입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_list_hl=ko.txt"}
{"question": "`projects.databases.operations.list` 메서드의 요청 본문은 어떻게 되나요?", "answer": "요청 본문은 비어 있어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_list_hl=ko.txt"}
{"question": "이 메서드의 성공적인 응답 본문 구조는 어떻게 되나요?", "answer": "성공적인 응답 본문은 `operations` 배열과 `nextPageToken` 문자열을 포함하는 구조입니다. `operations` 배열은 요청에서 지정된 필터와 일치하는 작업의 목록을 포함합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_list_hl=ko.txt"}
{"question": "`operations` 필드의 데이터 타입은 무엇인가요?", "answer": "`operations` 필드는 `object (Operation)` 타입의 객체 배열입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_list_hl=ko.txt"}
{"question": "이 메서드를 사용하기 위한 인증 범위는 무엇인가요?", "answer": "이 메서드를 사용하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_list_hl=ko.txt"}
{"question": "`nextPageToken` 필드는 어떤 용도로 사용되나요?", "answer": "`nextPageToken` 필드는 표준 목록 다음 페이지 토큰으로 사용되며, 추가 페이지의 데이터를 요청할 때 사용됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_list_hl=ko.txt"}
{"question": "이 메서드의 응답 메시지에 대한 자세한 정보는 어디에서 확인할 수 있나요?", "answer": "이 메서드의 응답 메시지에 대한 자세한 정보는 [Operations.ListOperations](https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/list#google.longrunning.Operations.ListOperations) 문서에서 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.operations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.operations_list_hl=ko.txt"}
{"question": "`projects.databases.userCreds.create` 메서드를 호출하기 위한 HTTP 요청 형식은 무엇인가요?", "answer": "`projects.databases.userCreds.create` 메서드는 POST 요청을 사용하며, 요청 URL은 `https://firestore.googleapis.com/v1/{parent=projects/*/databases/*}/userCreds` 형식입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_create_hl=ko.txt"}
{"question": "`parent` 파라미터는 어떤 형식이어야 하나요?", "answer": "`parent` 파라미터는 필수이며, 형식은 `projects/{projectId}/databases/{databaseId}`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_create_hl=ko.txt"}
{"question": "`userCredsId` 파라미터의 요구 사항은 무엇인가요?", "answer": "`userCredsId`는 필수이며, 4-63자 길이로, 유효한 문자는 `/[a-z][0-9]-/`입니다. 첫 문자는 문자여야 하고, 마지막 문자는 문자 또는 숫자여야 하며, UUID 형식이 아니어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_create_hl=ko.txt"}
{"question": "요청 본문에 포함해야 하는 내용은 무엇인가요?", "answer": "요청 본문에는 `UserCreds` 인스턴스가 포함되어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_create_hl=ko.txt"}
{"question": "메서드 호출이 성공했을 때의 응답 본문은 어떤 내용을 포함하나요?", "answer": "메서드 호출이 성공하면 응답 본문에는 새로 생성된 `UserCreds` 인스턴스가 포함됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_create_hl=ko.txt"}
{"question": "이 메서드를 호출하기 위해 필요한 OAuth 스코프는 무엇인가요?", "answer": "이 메서드를 호출하기 위해 필요한 OAuth 스코프는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_create_hl=ko.txt"}
{"question": "`UserCreds`의 구조에 대한 자세한 정보는 어디에서 찾을 수 있나요?", "answer": "`UserCreds`의 구조에 대한 자세한 정보는 [UserCreds 문서](https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds#UserCreds)에서 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_create_hl=ko.txt"}
{"question": "`userCredsId`의 유효한 문자 범위는 무엇인가요?", "answer": "`userCredsId`의 유효한 문자는 소문자 알파벳(a-z), 숫자(0-9), 하이픈(-)입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_create_hl=ko.txt"}
{"question": "메서드 호출 시 발생할 수 있는 인증 관련 문제를 해결하기 위한 정보는 어디에서 찾을 수 있나요?", "answer": "인증 관련 문제를 해결하기 위한 정보는 [OAuth 2.0 개요](https://developers.google.com/identity/protocols/OAuth2)에서 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_create_hl=ko.txt"}
{"question": "`projects.databases.userCreds.create` 메서드의 gRPC Transcoding에 대한 정보는 어디에서 찾을 수 있나요?", "answer": "gRPC Transcoding에 대한 정보는 [gRPC Transcoding 문서](https://google.aip.dev/127)에서 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_create_hl=ko.txt"}
{"question": "`projects.databases.userCreds.delete` 메서드는 어떤 HTTP 요청을 사용하나요?", "answer": "`projects.databases.userCreds.delete` 메서드는 DELETE HTTP 요청을 사용합니다. 요청 URL은 `https://firestore.googleapis.com/v1/{name=projects/*/databases/*/userCreds/*}` 형식을 따릅니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_delete_hl=ko.txt"}
{"question": "`projects.databases.userCreds.delete` 메서드의 경로 매개변수는 무엇인가요?", "answer": "경로 매개변수는 `name`이며, 형식은 `projects/{projectId}/databases/{databaseId}/userCreds/{userCredsId}`입니다. 이 매개변수는 필수입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_delete_hl=ko.txt"}
{"question": "`projects.databases.userCreds.delete` 메서드의 요청 본문은 어떻게 되나요?", "answer": "요청 본문은 비어 있어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_delete_hl=ko.txt"}
{"question": "`projects.databases.userCreds.delete` 메서드가 성공적으로 실행되면 어떤 응답을 받게 되나요?", "answer": "성공적으로 실행되면 응답 본문은 빈 JSON 객체입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_delete_hl=ko.txt"}
{"question": "`projects.databases.userCreds.delete` 메서드를 사용하기 위해 필요한 인증 범위는 무엇인가요?", "answer": "필요한 인증 범위는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_delete_hl=ko.txt"}
{"question": "`projects.databases.userCreds.delete` 메서드의 사용 예시는 무엇인가요?", "answer": "문서에는 구체적인 코드 예시가 제공되지 않지만, DELETE 요청을 사용하여 특정 사용자 자격 증명을 삭제하는 방식으로 사용됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_delete_hl=ko.txt"}
{"question": "`projects.databases.userCreds.delete` 메서드의 gRPC Transcoding에 대한 정보는 어디에서 확인할 수 있나요?", "answer": "gRPC Transcoding에 대한 정보는 [여기](https://google.aip.dev/127)에서 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_delete_hl=ko.txt"}
{"question": "`projects.databases.userCreds.delete` 메서드를 호출할 때 어떤 형식의 URL을 사용해야 하나요?", "answer": "호출할 때는 `https://firestore.googleapis.com/v1/projects/{projectId}/databases/{databaseId}/userCreds/{userCredsId}` 형식의 URL을 사용해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_delete_hl=ko.txt"}
{"question": "`projects.databases.userCreds.delete` 메서드의 요청을 보내기 위해 어떤 HTTP 클라이언트를 사용할 수 있나요?", "answer": "문서에는 특정 HTTP 클라이언트에 대한 언급이 없지만, 일반적으로 cURL, Postman 또는 프로그래밍 언어의 HTTP 라이브러리를 사용할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_delete_hl=ko.txt"}
{"question": "`projects.databases.userCreds.delete` 메서드에 대한 추가 정보는 어디에서 찾을 수 있나요?", "answer": "추가 정보는 Firebase 문서의 해당 페이지에서 찾을 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_delete_hl=ko.txt"}
{"question": "`projects.databases.userCreds.get` 메서드는 어떤 기능을 수행하나요?", "answer": "`projects.databases.userCreds.get` 메서드는 사용자 자격 증명 리소스를 가져오는 기능을 수행합니다. 반환된 리소스에는 비밀 값 자체는 포함되지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_get_hl=ko.txt"}
{"question": "`projects.databases.userCreds.get` 메서드를 호출하기 위한 HTTP 요청 형식은 무엇인가요?", "answer": "이 메서드를 호출하기 위한 HTTP 요청 형식은 GET이며, URL은 `https://firestore.googleapis.com/v1/{name=projects/*/databases/*/userCreds/*}`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_get_hl=ko.txt"}
{"question": "`projects.databases.userCreds.get` 메서드의 경로 매개변수는 무엇인가요?", "answer": "경로 매개변수는 `name`이며, 형식은 `projects/{projectId}/databases/{databaseId}/userCreds/{userCredsId}`입니다. 이 매개변수는 필수입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_get_hl=ko.txt"}
{"question": "`projects.databases.userCreds.get` 메서드의 요청 본문은 어떻게 되나요?", "answer": "요청 본문은 비어 있어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_get_hl=ko.txt"}
{"question": "`projects.databases.userCreds.get` 메서드의 성공적인 응답 본문은 어떤 형식을 가지나요?", "answer": "성공적인 응답 본문은 `UserCreds` 인스턴스를 포함합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_get_hl=ko.txt"}
{"question": "`projects.databases.userCreds.get` 메서드를 사용하기 위한 인증 범위는 무엇인가요?", "answer": "이 메서드를 사용하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_get_hl=ko.txt"}
{"question": "`projects.databases.userCreds.get` 메서드의 사용 예시는 어디에서 찾을 수 있나요?", "answer": "문서에는 특정 사용 예시가 제공되지 않지만, 메서드의 사용법과 관련된 정보는 위의 설명을 참조하여 구현할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_get_hl=ko.txt"}
{"question": "`projects.databases.userCreds.get` 메서드의 응답에서 비밀 값은 포함되나요?", "answer": "아니요, 반환된 리소스에는 비밀 값 자체는 포함되지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_get_hl=ko.txt"}
{"question": "`projects.databases.userCreds.get` 메서드의 gRPC Transcoding에 대한 정보는 어디에서 찾을 수 있나요?", "answer": "gRPC Transcoding에 대한 정보는 [여기](https://google.aip.dev/127)에서 찾을 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_get_hl=ko.txt"}
{"question": "`projects.databases.userCreds.get` 메서드의 응답 형식에 대한 자세한 정보는 어디에서 확인할 수 있나요?", "answer": "응답 형식에 대한 자세한 정보는 `UserCreds` 문서에서 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds/get?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_get_hl=ko.txt"}
{"question": "`projects.databases.userCreds.resetPassword` 메서드는 어떤 기능을 수행하나요?", "answer": "`projects.databases.userCreds.resetPassword` 메서드는 사용자의 비밀번호를 재설정하는 기능을 수행합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds.resetPassword?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_resetPassword_hl=ko.txt"}
{"question": "이 메서드를 호출하기 위한 HTTP 요청 형식은 무엇인가요?", "answer": "이 메서드는 POST 요청 형식으로 호출되며, 요청 URL은 `https://firestore.googleapis.com/v1/{name=projects/*/databases/*/userCreds/*}:resetPassword`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds.resetPassword?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_resetPassword_hl=ko.txt"}
{"question": "`resetPassword` 메서드의 경로 매개변수는 무엇인가요?", "answer": "경로 매개변수 `name`은 `projects/{projectId}/databases/{databaseId}/userCreds/{userCredsId}` 형식의 문자열로, 필수입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds.resetPassword?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_resetPassword_hl=ko.txt"}
{"question": "`resetPassword` 메서드의 요청 본문은 어떻게 구성되나요?", "answer": "`resetPassword` 메서드의 요청 본문은 비어 있어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds.resetPassword?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_resetPassword_hl=ko.txt"}
{"question": "이 메서드를 호출했을 때 성공적인 응답은 어떤 형태인가요?", "answer": "성공적인 응답은 `UserCreds` 인스턴스를 포함하는 응답 본체를 반환합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds.resetPassword?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_resetPassword_hl=ko.txt"}
{"question": "`resetPassword` 메서드를 사용하기 위해 필요한 인증 범위는 무엇인가요?", "answer": "이 메서드를 사용하기 위해서는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform` 중 하나의 OAuth 범위가 필요합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds.resetPassword?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_resetPassword_hl=ko.txt"}
{"question": "`resetPassword` 메서드의 요청을 보내기 위해 어떤 인증 방법을 사용해야 하나요?", "answer": "`resetPassword` 메서드의 요청을 보내기 위해서는 OAuth 2.0 인증 방법을 사용해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds.resetPassword?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_resetPassword_hl=ko.txt"}
{"question": "`resetPassword` 메서드의 사용 예시는 어디에서 찾을 수 있나요?", "answer": "문서에는 `resetPassword` 메서드의 구체적인 사용 예시가 제공되지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds.resetPassword?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_resetPassword_hl=ko.txt"}
{"question": "이 메서드와 관련된 추가적인 정보는 어디에서 확인할 수 있나요?", "answer": "추가적인 정보는 OAuth 2.0 개요 문서에서 확인할 수 있습니다.", "sources": ["https://developers.google.com/identity/protocols/OAuth2"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_resetPassword_hl=ko.txt"}
{"question": "`resetPassword` 메서드의 gRPC Transcoding에 대한 정보는 어디에서 찾을 수 있나요?", "answer": "gRPC Transcoding에 대한 정보는 [Google AIP 127](https://google.aip.dev/127)에서 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.userCreds.resetPassword?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases.userCreds_resetPassword_hl=ko.txt"}
{"question": "`bulkDeleteDocuments` 메서드는 무엇을 수행하나요?", "answer": "`bulkDeleteDocuments` 메서드는 Google Cloud Firestore에서 문서의 하위 집합을 대량으로 삭제합니다. 요청을 처리하는 동안 생성되거나 업데이트된 문서는 삭제되지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/bulkDeleteDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_bulkDeleteDocuments_hl=ko.txt"}
{"question": "`bulkDeleteDocuments` 메서드의 HTTP 요청 형식은 어떻게 되나요?", "answer": "`bulkDeleteDocuments` 메서드는 POST 요청을 사용하며, 요청 URL은 `https://firestore.googleapis.com/v1/{name=projects/*/databases/*}:bulkDeleteDocuments` 형식을 따릅니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/bulkDeleteDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_bulkDeleteDocuments_hl=ko.txt"}
{"question": "`bulkDeleteDocuments` 메서드의 요청 본문 구조는 어떻게 되나요?", "answer": "요청 본문은 JSON 형식으로, `collectionIds`와 `namespaceIds` 필드를 포함합니다. `collectionIds`는 삭제할 컬렉션 그룹의 ID 배열이며, `namespaceIds`는 삭제할 네임스페이스의 배열입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/bulkDeleteDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_bulkDeleteDocuments_hl=ko.txt"}
{"question": "`collectionIds`와 `namespaceIds` 필드의 의미는 무엇인가요?", "answer": "`collectionIds`는 삭제할 컬렉션 그룹의 ID를 지정하는 선택적 필드이며, `namespaceIds`는 삭제할 네임스페이스를 지정하는 선택적 필드입니다. 빈 리스트는 모든 네임스페이스를 의미합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/bulkDeleteDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_bulkDeleteDocuments_hl=ko.txt"}
{"question": "`bulkDeleteDocuments` 메서드의 성공적인 응답 본문은 어떤 형태인가요?", "answer": "성공적인 응답 본문은 `Operation` 인스턴스를 포함합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/bulkDeleteDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_bulkDeleteDocuments_hl=ko.txt"}
{"question": "`bulkDeleteDocuments` 메서드를 사용하기 위한 권한 범위는 무엇인가요?", "answer": "`bulkDeleteDocuments` 메서드를 사용하기 위해서는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform` 중 하나의 OAuth 범위가 필요합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/bulkDeleteDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_bulkDeleteDocuments_hl=ko.txt"}
{"question": "`bulkDeleteDocuments` 메서드의 요청 URL에서 `{name}` 파라미터는 어떻게 구성되나요?", "answer": "`{name}` 파라미터는 `projects/{projectId}/databases/{databaseId}` 형식으로 구성되어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/bulkDeleteDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_bulkDeleteDocuments_hl=ko.txt"}
{"question": "`bulkDeleteDocuments` 메서드의 요청 본문에서 `collectionIds` 필드를 비워두면 어떤 결과가 발생하나요?", "answer": "`collectionIds` 필드를 비워두면 모든 컬렉션 그룹이 삭제됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/bulkDeleteDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_bulkDeleteDocuments_hl=ko.txt"}
{"question": "`bulkDeleteDocuments` 메서드의 진행 상황은 어떻게 모니터링하나요?", "answer": "`bulkDeleteDocuments` 메서드는 백그라운드에서 실행되며, 생성된 Operation 리소스를 통해 진행 상황을 모니터링하고 관리할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/bulkDeleteDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_bulkDeleteDocuments_hl=ko.txt"}
{"question": "`bulkDeleteDocuments` 메서드에 대한 추가 정보는 어디에서 찾을 수 있나요?", "answer": "`bulkDeleteDocuments` 메서드에 대한 추가 정보는 [여기](https://cloud.google.com/firestore/docs/manage-data/bulk-delete)에서 확인할 수 있습니다.", "sources": ["https://cloud.google.com/firestore/docs/manage-data/bulk-delete"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_bulkDeleteDocuments_hl=ko.txt"}
{"question": "Firestore에서 데이터베이스를 클론하는 방법은 무엇인가요?", "answer": "Firestore에서 데이터베이스를 클론하려면 `POST https://firestore.googleapis.com/v1/{parent=projects/*}/databases:clone` 요청을 사용합니다. 요청 본문에는 클론할 데이터베이스의 ID, PITR 스냅샷, 선택적 암호화 구성 및 태그를 포함해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/clone?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_clone_hl=ko.txt"}
{"question": "클론할 데이터베이스의 ID는 어떻게 설정하나요?", "answer": "클론할 데이터베이스의 ID는 4-63자여야 하며, 유효한 문자는 /[a-z][0-9]-/입니다. 첫 번째 문자는 문자여야 하고 마지막 문자는 문자 또는 숫자여야 합니다. UUID 형식은 사용할 수 없습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/clone?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_clone_hl=ko.txt"}
{"question": "PITR 스냅샷은 무엇이며 어떻게 사용하나요?", "answer": "PITR 스냅샷은 클론할 데이터베이스의 데이터 복원 지점을 지정하는 객체입니다. 클론할 데이터베이스는 소스 데이터베이스와 동일한 위치에 생성되어야 하며, 소스 데이터베이스가 존재해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/clone?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_clone_hl=ko.txt"}
{"question": "클론된 데이터베이스의 암호화 구성은 어떻게 설정하나요?", "answer": "클론된 데이터베이스의 암호화 구성은 선택적이며, 이 필드를 지정하지 않으면 클론된 데이터베이스는 소스 데이터베이스와 동일한 암호화 구성을 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/clone?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_clone_hl=ko.txt"}
{"question": "클론 요청의 응답은 어떤 형식인가요?", "answer": "클론 요청이 성공하면 응답 본문에는 Operation 인스턴스가 포함됩니다. 이 Operation을 통해 클론 작업의 진행 상황을 추적할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/clone?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_clone_hl=ko.txt"}
{"question": "클론 작업의 진행 상황을 어떻게 추적하나요?", "answer": "클론 작업의 진행 상황은 Long-running operation (LRO)을 사용하여 추적할 수 있으며, Operation의 메타데이터 필드 타입은 CloneDatabaseMetadata입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/clone?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_clone_hl=ko.txt"}
{"question": "클론된 데이터베이스는 언제 읽거나 쓸 수 있나요?", "answer": "클론된 데이터베이스는 Long-running operation이 완료될 때까지 읽거나 쓸 수 없습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/clone?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_clone_hl=ko.txt"}
{"question": "클론 요청에 필요한 OAuth 스코프는 무엇인가요?", "answer": "클론 요청을 위해서는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform` 중 하나의 OAuth 스코프가 필요합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/clone?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_clone_hl=ko.txt"}
{"question": "클론 요청의 요청 본문 구조는 어떻게 되나요?", "answer": "요청 본문은 JSON 형식으로, `databaseId`, `pitrSnapshot`, `encryptionConfig`, `tags` 필드를 포함해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/clone?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_clone_hl=ko.txt"}
{"question": "클론된 데이터베이스에 태그를 추가하는 방법은 무엇인가요?", "answer": "클론된 데이터베이스에 태그를 추가하려면 요청 본문에서 `tags` 필드를 사용하여 \"key\": \"value\" 쌍의 객체를 포함해야 합니다. 예: `{ \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }`.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/clone?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_clone_hl=ko.txt"}
{"question": "Firestore 데이터베이스를 생성하기 위한 HTTP 요청은 어떻게 구성되나요?", "answer": "Firestore 데이터베이스를 생성하기 위한 HTTP 요청은 POST 메서드를 사용하며, URL은 `https://firestore.googleapis.com/v1/{parent=projects/*}/databases`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_create_hl=ko.txt"}
{"question": "데이터베이스 생성 시 필요한 경로 매개변수는 무엇인가요?", "answer": "데이터베이스 생성 시 필요한 경로 매개변수는 `parent`로, 형식은 `projects/{projectId}`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_create_hl=ko.txt"}
{"question": "데이터베이스 ID는 어떤 형식이어야 하나요?", "answer": "데이터베이스 ID는 4-63자여야 하며, 유효한 문자는 `/[a-z][0-9]-/`입니다. 첫 문자는 문자여야 하고, 마지막 문자는 문자 또는 숫자여야 합니다. UUID 형식은 허용되지 않으며, \"(default)\" 데이터베이스 ID도 유효합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_create_hl=ko.txt"}
{"question": "데이터베이스 생성 요청의 본문에는 어떤 내용이 포함되어야 하나요?", "answer": "데이터베이스 생성 요청의 본문에는 `Database` 인스턴스가 포함되어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_create_hl=ko.txt"}
{"question": "데이터베이스 생성 요청이 성공하면 어떤 응답을 받게 되나요?", "answer": "데이터베이스 생성 요청이 성공하면 응답 본문에는 새로 생성된 `Operation` 인스턴스가 포함됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_create_hl=ko.txt"}
{"question": "데이터베이스 생성 시 필요한 OAuth 인증 범위는 무엇인가요?", "answer": "데이터베이스 생성 시 필요한 OAuth 인증 범위는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_create_hl=ko.txt"}
{"question": "데이터베이스 ID의 유효성 검사 규칙은 무엇인가요?", "answer": "데이터베이스 ID는 4-63자여야 하며, 첫 문자는 문자여야 하고 마지막 문자는 문자 또는 숫자여야 합니다. UUID 형식은 허용되지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_create_hl=ko.txt"}
{"question": "데이터베이스 생성 요청의 HTTP 메서드는 무엇인가요?", "answer": "데이터베이스 생성 요청의 HTTP 메서드는 POST입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_create_hl=ko.txt"}
{"question": "데이터베이스 생성 시 사용할 수 있는 기본 데이터베이스 ID는 무엇인가요?", "answer": "데이터베이스 생성 시 사용할 수 있는 기본 데이터베이스 ID는 \"(default)\"입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_create_hl=ko.txt"}
{"question": "Firestore 데이터베이스 생성 요청의 쿼리 매개변수는 무엇인가요?", "answer": "Firestore 데이터베이스 생성 요청의 쿼리 매개변수는 `databaseId`로, 데이터베이스에 사용할 ID를 지정합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/create?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_create_hl=ko.txt"}
{"question": "Firestore 데이터베이스를 삭제하는 HTTP 요청은 어떻게 구성되나요?", "answer": "Firestore 데이터베이스를 삭제하기 위한 HTTP 요청은 다음과 같이 구성됩니다: `DELETE https://firestore.googleapis.com/v1/{name=projects/*/databases/*}`. 여기서 `{name}`은 `projects/{projectId}/databases/{databaseId}` 형식의 문자열입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_delete_hl=ko.txt"}
{"question": "데이터베이스 삭제 요청 시 필요한 경로 매개변수는 무엇인가요?", "answer": "데이터베이스 삭제 요청 시 필요한 경로 매개변수는 `name`입니다. 이 매개변수는 `projects/{projectId}/databases/{databaseId}` 형식의 문자열로, 필수입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_delete_hl=ko.txt"}
{"question": "데이터베이스 삭제 요청에 사용할 수 있는 쿼리 매개변수는 무엇인가요?", "answer": "데이터베이스 삭제 요청에 사용할 수 있는 쿼리 매개변수는 `etag`입니다. 이 매개변수는 데이터베이스의 현재 etag를 나타내며, 제공된 etag가 현재 데이터베이스의 etag와 일치하지 않으면 삭제가 차단되고 `FAILED_PRECONDITION` 오류가 반환됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_delete_hl=ko.txt"}
{"question": "데이터베이스 삭제 요청의 본문은 어떻게 구성되나요?", "answer": "데이터베이스 삭제 요청의 본문은 비어 있어야 합니다. 즉, 요청 본문은 필요하지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_delete_hl=ko.txt"}
{"question": "데이터베이스 삭제 요청이 성공하면 어떤 응답을 받게 되나요?", "answer": "데이터베이스 삭제 요청이 성공하면 응답 본문에는 `Operation` 인스턴스가 포함됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_delete_hl=ko.txt"}
{"question": "데이터베이스 삭제를 위해 필요한 인증 범위는 무엇인가요?", "answer": "데이터베이스 삭제를 위해 필요한 인증 범위는 다음 중 하나입니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_delete_hl=ko.txt"}
{"question": "데이터베이스 삭제 요청에서 `etag`를 사용하는 이유는 무엇인가요?", "answer": "`etag`는 데이터베이스의 현재 상태를 확인하기 위해 사용됩니다. 제공된 etag가 현재 데이터베이스의 etag와 일치하지 않으면 삭제가 차단되어 데이터 손실을 방지할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_delete_hl=ko.txt"}
{"question": "Firestore 데이터베이스 삭제 요청을 보내기 위한 HTTP 메서드는 무엇인가요?", "answer": "Firestore 데이터베이스 삭제 요청을 보내기 위한 HTTP 메서드는 `DELETE`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_delete_hl=ko.txt"}
{"question": "데이터베이스 삭제 요청을 보낼 때 어떤 형식의 URL을 사용해야 하나요?", "answer": "데이터베이스 삭제 요청을 보낼 때는 `https://firestore.googleapis.com/v1/projects/{projectId}/databases/{databaseId}` 형식의 URL을 사용해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_delete_hl=ko.txt"}
{"question": "Firestore 데이터베이스 삭제 요청의 성공적인 응답을 확인하는 방법은 무엇인가요?", "answer": "Firestore 데이터베이스 삭제 요청이 성공적으로 처리되면 응답 본문에 `Operation` 인스턴스가 포함되어 있는지 확인하여 성공 여부를 판단할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.delete?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_delete_hl=ko.txt"}
{"question": "Firestore에서 문서를 내보내기 위해 어떤 HTTP 요청을 사용해야 하나요?", "answer": "Firestore에서 문서를 내보내기 위해서는 POST 요청을 사용해야 하며, 요청 URL은 `https://firestore.googleapis.com/v1/{name=projects/*/databases/*}:exportDocuments`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "exportDocuments 메서드의 요청 본문은 어떤 구조를 가져야 하나요?", "answer": "요청 본문은 다음과 같은 JSON 구조를 가져야 합니다: ```json { \"collectionIds\": [string], \"outputUriPrefix\": string, \"namespaceIds\": [string], \"snapshotTime\": string } ```", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "exportDocuments 메서드에서 collectionIds 필드는 어떤 역할을 하나요?", "answer": "`collectionIds` 필드는 내보낼 컬렉션 ID를 지정합니다. 지정하지 않으면 모든 컬렉션이 내보내집니다. 이 리스트의 각 컬렉션 ID는 고유해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "outputUriPrefix 필드는 무엇을 의미하나요?", "answer": "`outputUriPrefix` 필드는 내보낸 데이터의 출력 URI를 의미합니다. 현재는 Google Cloud Storage URI 형식만 지원하며, 형식은 `gs://BUCKET_NAME[/NAMESPACE_PATH]`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "snapshotTime 필드는 어떤 형식으로 제공되어야 하나요?", "answer": "`snapshotTime` 필드는 RFC 3339 형식의 타임스탬프여야 하며, 과거의 시간을 나타내야 합니다. 예를 들어, \"2014-10-02T15:01:23Z\"와 같은 형식입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "exportDocuments 메서드의 성공적인 응답 본문은 어떤 형태인가요?", "answer": "성공적인 응답 본문은 Operation 인스턴스를 포함합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "exportDocuments 메서드를 사용할 때 필요한 OAuth 스코프는 무엇인가요?", "answer": "exportDocuments 메서드를 사용하기 위해서는 다음 중 하나의 OAuth 스코프가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "exportDocuments 메서드의 진행 상황은 어떻게 모니터링하나요?", "answer": "exportDocuments 메서드의 진행 상황은 생성된 Operation 리소스를 통해 모니터링하고 관리할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "exportDocuments 메서드가 완료되기 전에 작업이 취소되면 어떤 일이 발생하나요?", "answer": "exportDocuments 메서드가 완료되기 전에 작업이 취소되면 Google Cloud Storage에 부분적인 데이터가 남을 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "exportDocuments 메서드의 출력 형식에 대한 자세한 내용은 어디에서 확인할 수 있나요?", "answer": "exportDocuments 메서드의 출력 형식에 대한 자세한 내용은 [여기](https://cloud.google.com/firestore/docs/manage-data/export-import)에서 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.exportDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_exportDocuments_hl=ko.txt"}
{"question": "Firestore 데이터베이스를 생성하는 방법은 무엇인가요?", "answer": "Firestore 데이터베이스를 생성하려면 `create` 메서드를 사용해야 합니다. 이 메서드는 새로운 데이터베이스를 생성합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases#methods"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_hl=ko.txt"}
{"question": "Firestore 데이터베이스의 정보를 가져오는 방법은 무엇인가요?", "answer": "Firestore 데이터베이스의 정보를 가져오려면 `get` 메서드를 사용합니다. 이 메서드는 특정 데이터베이스에 대한 정보를 반환합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases#methods"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_hl=ko.txt"}
{"question": "Firestore 데이터베이스를 삭제하는 방법은 무엇인가요?", "answer": "Firestore 데이터베이스를 삭제하려면 `delete` 메서드를 사용해야 합니다. 이 메서드는 지정된 데이터베이스를 삭제합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases#methods"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_hl=ko.txt"}
{"question": "Firestore 데이터베이스에서 문서를 대량으로 삭제하는 방법은 무엇인가요?", "answer": "Firestore 데이터베이스에서 문서를 대량으로 삭제하려면 `bulkDeleteDocuments` 메서드를 사용합니다. 이 메서드는 Google Cloud Firestore에서 문서의 하위 집합을 대량으로 삭제합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases#methods"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_hl=ko.txt"}
{"question": "Firestore 데이터베이스의 버전 보존 기간은 어떻게 설정되나요?", "answer": "Firestore 데이터베이스의 버전 보존 기간은 `versionRetentionPeriod` 필드에 의해 결정됩니다. PITR(지점 복구) 기능이 활성화된 경우 보존 기간은 7일이며, 그렇지 않은 경우 1시간입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases#resource:-database"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_hl=ko.txt"}
{"question": "Firestore 데이터베이스의 위치는 어떻게 확인하나요?", "answer": "Firestore 데이터베이스의 위치는 `locationId` 필드에서 확인할 수 있습니다. 이 필드는 데이터베이스의 위치를 나타냅니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases#resource:-database"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_hl=ko.txt"}
{"question": "Firestore 데이터베이스의 삭제 보호 상태는 어떻게 설정하나요?", "answer": "Firestore 데이터베이스의 삭제 보호 상태는 `deleteProtectionState` 필드에 의해 결정됩니다. 이 필드는 삭제 보호가 활성화되었는지 여부를 나타냅니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases#resource:-database"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_hl=ko.txt"}
{"question": "Firestore 데이터베이스에서 문서를 가져오는 방법은 무엇인가요?", "answer": "Firestore 데이터베이스에서 문서를 가져오려면 `exportDocuments` 메서드를 사용하여 문서의 복사본을 다른 저장 시스템으로 내보낼 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases#methods"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_hl=ko.txt"}
{"question": "Firestore 데이터베이스의 버전 읽기 시간은 어떻게 설정하나요?", "answer": "Firestore 데이터베이스의 버전 읽기 시간은 `earliestVersionTime` 필드에 의해 결정됩니다. 이 필드는 데이터의 이전 버전을 읽을 수 있는 가장 이른 타임스탬프를 나타냅니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases#resource:-database"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_hl=ko.txt"}
{"question": "Firestore 데이터베이스의 App Engine 통합 모드는 어떻게 설정하나요?", "answer": "Firestore 데이터베이스의 App Engine 통합 모드는 `appEngineIntegrationMode` 필드에 의해 결정됩니다. 이 필드는 데이터베이스의 App Engine 통합 모드를 나타냅니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases#resource:-database"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_hl=ko.txt"}
{"question": "Firestore에 문서를 가져오는 방법은 무엇인가요?", "answer": "Firestore에 문서를 가져오려면 `POST` 요청을 사용하여 `https://firestore.googleapis.com/v1/{name=projects/*/databases/*}:importDocuments` 엔드포인트에 요청을 보내야 합니다. 요청 본문에는 `collectionIds`, `inputUriPrefix`, `namespaceIds` 필드를 포함해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "`importDocuments` 메서드의 요청 본문 구조는 어떻게 되나요?", "answer": "요청 본문은 다음과 같은 JSON 구조를 가져야 합니다: ```json { \"collectionIds\": [ \"string\" ], \"inputUriPrefix\": \"string\", \"namespaceIds\": [ \"string\" ] } ```", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "`collectionIds` 필드는 어떤 용도로 사용되나요?", "answer": "`collectionIds` 필드는 가져올 컬렉션 ID를 지정하는 데 사용됩니다. 이 필드가 지정되지 않으면 모든 컬렉션이 가져와집니다. 각 컬렉션 ID는 고유해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "`inputUriPrefix` 필드는 무엇을 의미하나요?", "answer": "`inputUriPrefix` 필드는 가져올 파일의 위치를 지정합니다. 이 값은 성공적으로 완료된 `ExportDocumentsResponse`의 `outputUriPrefix`와 일치해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "`namespaceIds` 필드는 어떻게 사용하나요?", "answer": "`namespaceIds` 필드는 가져올 네임스페이스를 지정합니다. 빈 리스트는 모든 네임스페이스를 나타내며, 빈 문자열 요소는 기본 네임스페이스를 나타냅니다. 각 네임스페이스는 고유해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "`importDocuments` 요청이 성공하면 어떤 응답을 받게 되나요?", "answer": "요청이 성공하면 응답 본문에는 `Operation` 인스턴스가 포함됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "`importDocuments` 메서드를 호출하기 위한 권한 범위는 무엇인가요?", "answer": "`importDocuments` 메서드를 호출하기 위해서는 다음 OAuth 범위 중 하나가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "`importDocuments` 작업이 취소되면 어떤 일이 발생하나요?", "answer": "`importDocuments` 작업이 취소되면 일부 데이터가 이미 Cloud Firestore에 가져와졌을 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "`importDocuments` 메서드의 HTTP 요청 방식은 무엇인가요?", "answer": "`importDocuments` 메서드는 `POST` HTTP 요청 방식을 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "`importDocuments` 메서드의 경로 매개변수는 무엇인가요?", "answer": "`importDocuments` 메서드의 경로 매개변수는 `name`으로, 데이터베이스를 가져올 위치를 지정합니다. 형식은 `projects/{projectId}/databases/{databaseId}`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.importDocuments?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_importDocuments_hl=ko.txt"}
{"question": "`projects.databases.list` 메서드는 어떤 기능을 수행하나요?", "answer": "`projects.databases.list` 메서드는 프로젝트 내의 모든 데이터베이스를 나열하는 기능을 수행합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_list_hl=ko.txt"}
{"question": "`projects.databases.list` 메서드를 호출하기 위한 HTTP 요청 형식은 무엇인가요?", "answer": "`projects.databases.list` 메서드를 호출하기 위한 HTTP 요청 형식은 GET https://firestore.googleapis.com/v1/{parent=projects/*}/databases입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_list_hl=ko.txt"}
{"question": "`parent` 파라미터는 어떤 형식을 가져야 하나요?", "answer": "`parent` 파라미터는 `projects/{projectId}` 형식을 가져야 하며, 필수입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_list_hl=ko.txt"}
{"question": "`showDeleted` 쿼리 파라미터의 역할은 무엇인가요?", "answer": "`showDeleted` 쿼리 파라미터가 true로 설정되면 삭제된 리소스도 반환됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_list_hl=ko.txt"}
{"question": "`projects.databases.list` 메서드의 요청 본문은 어떻게 구성되나요?", "answer": "`projects.databases.list` 메서드의 요청 본문은 비어 있어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_list_hl=ko.txt"}
{"question": "성공적인 응답의 구조는 어떻게 되나요?", "answer": "성공적인 응답의 구조는 `{\"databases\": [...], \"unreachable\": [...]}` 형식을 가지며, `databases` 배열에는 데이터베이스 객체가 포함됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_list_hl=ko.txt"}
{"question": "`unreachable` 필드는 어떤 정보를 담고 있나요?", "answer": "`unreachable` 필드는 개별 데이터베이스에 대한 정보를 나열할 수 없는 경우 해당 데이터베이스의 경로를 기록합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_list_hl=ko.txt"}
{"question": "이 메서드를 사용하기 위해 필요한 인증 범위는 무엇인가요?", "answer": "이 메서드를 사용하기 위해 필요한 인증 범위는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_list_hl=ko.txt"}
{"question": "데이터베이스 정보를 나열할 수 없는 경우 어떻게 해야 하나요?", "answer": "데이터베이스 정보를 나열할 수 없는 경우, 해당 리소스에 대한 'Get' 요청을 보내거나 특정 위치에 대한 'List' 요청을 통해 더 자세한 오류 메시지를 얻을 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_list_hl=ko.txt"}
{"question": "`projects.databases.list` 메서드의 OAuth 2.0 개요에 대한 추가 정보는 어디에서 찾을 수 있나요?", "answer": "OAuth 2.0 개요에 대한 추가 정보는 [여기](https://developers.google.com/identity/protocols/OAuth2)에서 찾을 수 있습니다.", "sources": ["https://developers.google.com/identity/protocols/OAuth2"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_list_hl=ko.txt"}
{"question": "`projects.databases.patch` 메서드는 어떤 용도로 사용되나요?", "answer": "`projects.databases.patch` 메서드는 데이터베이스를 업데이트하는 데 사용됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_patch_hl=ko.txt"}
{"question": "`PATCH` 요청을 보낼 때 사용할 URL 형식은 어떻게 되나요?", "answer": "`PATCH` 요청은 `https://firestore.googleapis.com/v1/{database.name=projects/*/databases/*}` 형식을 사용해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_patch_hl=ko.txt"}
{"question": "`database.name` 파라미터는 어떤 형식을 가져야 하나요?", "answer": "`database.name` 파라미터는 `projects/{project}/databases/{database}` 형식의 문자열이어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_patch_hl=ko.txt"}
{"question": "업데이트할 필드를 지정하는 `updateMask` 파라미터의 형식은 무엇인가요?", "answer": "`updateMask` 파라미터는 FieldMask 형식으로, 업데이트할 필드의 완전한 이름을 쉼표로 구분하여 나열한 문자열입니다. 예: `\"user.displayName,photo\"`.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_patch_hl=ko.txt"}
{"question": "요청 본문에는 어떤 내용이 포함되어야 하나요?", "answer": "요청 본문에는 `Database` 인스턴스가 포함되어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_patch_hl=ko.txt"}
{"question": "요청이 성공적으로 처리되면 어떤 응답을 받게 되나요?", "answer": "요청이 성공적으로 처리되면 응답 본문에는 `Operation` 인스턴스가 포함됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_patch_hl=ko.txt"}
{"question": "이 메서드를 사용하기 위해 필요한 인증 범위는 무엇인가요?", "answer": "이 메서드를 사용하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_patch_hl=ko.txt"}
{"question": "`projects.databases.patch` 메서드의 HTTP 요청 방식은 무엇인가요?", "answer": "`projects.databases.patch` 메서드는 `PATCH` HTTP 요청 방식을 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_patch_hl=ko.txt"}
{"question": "`updateMask` 파라미터의 예시는 무엇인가요?", "answer": "`updateMask` 파라미터의 예시는 `\"user.displayName,photo\"`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_patch_hl=ko.txt"}
{"question": "`Database` 인스턴스에 대한 자세한 내용은 어디에서 확인할 수 있나요?", "answer": "`Database` 인스턴스에 대한 자세한 내용은 [여기](https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases#Database)에서 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/patch?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_patch_hl=ko.txt"}
{"question": "Firestore에서 데이터베이스를 복원하는 방법은 무엇인가요?", "answer": "Firestore에서 데이터베이스를 복원하려면 `projects.databases.restore` 메서드를 사용하여 기존 백업에서 새로운 데이터베이스를 생성합니다. 이 메서드는 기존 백업과 동일한 클라우드 지역 또는 다중 지역 위치에 있어야 하며, 복원 작업의 진행 상황은 장기 실행 작업( LRO)을 통해 추적할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/restore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_restore_hl=ko.txt"}
{"question": "`projects.databases.restore` 메서드의 HTTP 요청 형식은 어떻게 되나요?", "answer": "`projects.databases.restore` 메서드는 POST 요청을 사용하며, 요청 URL 형식은 `https://firestore.googleapis.com/v1/{parent=projects/*}/databases:restore`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/restore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_restore_hl=ko.txt"}
{"question": "복원 요청의 필수 파라미터는 무엇인가요?", "answer": "복원 요청의 필수 파라미터는 `databaseId`와 `backup`입니다. `databaseId`는 데이터베이스의 ID로, 4-63자 사이의 문자로 구성되어야 하며, `backup`은 복원할 백업의 경로를 지정해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/restore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_restore_hl=ko.txt"}
{"question": "`databaseId`의 유효한 형식은 무엇인가요?", "answer": "`databaseId`는 4-63자 사이의 문자로 구성되어야 하며, 유효한 문자는 `/[a-z][0-9]-/`입니다. 첫 문자는 문자여야 하고 마지막 문자는 문자 또는 숫자여야 하며, UUID 형식은 허용되지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/restore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_restore_hl=ko.txt"}
{"question": "복원 요청의 선택적 필드에는 어떤 것들이 있나요?", "answer": "복원 요청의 선택적 필드에는 `encryptionConfig`와 `tags`가 있습니다. `encryptionConfig`는 복원된 데이터베이스의 암호화 구성을 지정하며, `tags`는 복원된 데이터베이스에 바인딩할 태그를 포함합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/restore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_restore_hl=ko.txt"}
{"question": "복원 작업이 성공적으로 완료되면 어떤 응답을 받게 되나요?", "answer": "복원 작업이 성공적으로 완료되면 응답 본문에 `Operation` 인스턴스가 포함됩니다. 이 인스턴스는 복원 작업의 상태를 나타냅니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/restore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_restore_hl=ko.txt"}
{"question": "복원 요청을 수행하기 위한 권한 범위는 무엇인가요?", "answer": "복원 요청을 수행하기 위해서는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform` 중 하나의 OAuth 범위가 필요합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/restore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_restore_hl=ko.txt"}
{"question": "복원 요청의 요청 본문 구조는 어떻게 되나요?", "answer": "복원 요청의 요청 본문 구조는 다음과 같습니다: ```json { \"databaseId\": \"string\", \"backup\": \"string\", \"encryptionConfig\": { \"object (EncryptionConfig)\" }, \"tags\": { \"string\": \"string\", ... } } ```", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/restore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_restore_hl=ko.txt"}
{"question": "복원할 백업의 형식은 어떻게 되나요?", "answer": "복원할 백업의 형식은 `projects/{projectId}/locations/{location}/backups/{backup}`입니다. 이 백업은 부모 프로젝트와 동일해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/restore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_restore_hl=ko.txt"}
{"question": "복원된 데이터베이스는 언제 읽거나 쓸 수 있나요?", "answer": "복원된 데이터베이스는 장기 실행 작업(LRO)이 완료될 때까지 읽거나 쓸 수 없습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/restore?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.databases_restore_hl=ko.txt"}
{"question": "`projects.locations.backups.list` 메서드를 사용하여 백업을 나열하는 HTTP 요청은 어떻게 구성되나요?", "answer": "`projects.locations.backups.list` 메서드를 사용하여 백업을 나열하는 HTTP 요청은 다음과 같이 구성됩니다: `GET https://firestore.googleapis.com/v1/{parent=projects/*/locations/*}`. 여기서 `{parent}`는 백업을 나열할 위치를 나타냅니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations.backups/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations.backups_list_hl=ko.txt"}
{"question": "`parent` 파라미터의 형식은 무엇인가요?", "answer": "`parent` 파라미터는 필수이며, 형식은 `projects/{project}/locations/{location}`입니다. `{location}`을 `-`로 설정하면 주어진 프로젝트의 모든 위치에서 백업을 나열할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations.backups/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations.backups_list_hl=ko.txt"}
{"question": "`filter` 쿼리 파라미터는 어떤 형식으로 사용되며, 어떤 필드에 대해 필터링이 가능한가요?", "answer": "`filter` 쿼리 파라미터는 필드 이름, 비교 연산자, 필터링할 값으로 구성된 표현식입니다. 필터링 가능한 필드는 `databaseUid`이며, 지원되는 비교 연산자는 `<`, `>`, `<=`, `>=`, `!=`, `=`, `:`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations.backups/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations.backups_list_hl=ko.txt"}
{"question": "요청 본문은 어떻게 구성되나요?", "answer": "요청 본문은 비어 있어야 합니다. 즉, 요청을 보낼 때 본문에 아무런 내용을 포함하지 않아야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations.backups/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations.backups_list_hl=ko.txt"}
{"question": "성공적인 응답의 구조는 어떻게 되나요?", "answer": "성공적인 응답의 구조는 다음과 같습니다: `{ \"backups\": [ { object (Backup) } ], \"unreachable\": [ string ] }`. 여기서 `backups`는 프로젝트의 모든 백업 목록을 포함하고, `unreachable`은 백업을 가져올 수 없는 위치의 목록을 포함합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations.backups/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations.backups_list_hl=ko.txt"}
{"question": "`unreachable` 필드는 어떤 정보를 제공하나요?", "answer": "`unreachable` 필드는 기존 백업을 가져올 수 없는 위치의 목록을 제공합니다. 요청이 실패하지 않고 부분 결과 세트를 반환하며, 특정 위치에 대해 요청을 재시도하여 구체적인 오류를 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations.backups/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations.backups_list_hl=ko.txt"}
{"question": "이 메서드를 사용하기 위해 필요한 OAuth 스코프는 무엇인가요?", "answer": "이 메서드를 사용하기 위해 필요한 OAuth 스코프는 `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations.backups/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations.backups_list_hl=ko.txt"}
{"question": "`filter` 파라미터에서 사용 가능한 비교 연산자는 무엇인가요?", "answer": "`filter` 파라미터에서 사용 가능한 비교 연산자는 `<`, `>`, `<=`, `>=`, `!=`, `=`, `:`입니다. 이 중 `:`는 포함 연산자입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations.backups/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations.backups_list_hl=ko.txt"}
{"question": "백업 목록을 요청할 때 특정 위치에서만 백업을 나열하려면 어떻게 해야 하나요?", "answer": "특정 위치에서만 백업을 나열하려면 `parent` 파라미터에 해당 위치를 지정하여 요청하면 됩니다. 예를 들어, `projects/{project}/locations/{specific-location}` 형식으로 설정합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations.backups/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations.backups_list_hl=ko.txt"}
{"question": "이 메서드의 응답에서 `backups` 필드는 어떤 정보를 포함하나요?", "answer": "`backups` 필드는 프로젝트의 모든 백업에 대한 정보를 포함하는 객체 배열입니다. 각 객체는 백업에 대한 세부 정보를 담고 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations.backups/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations.backups_list_hl=ko.txt"}
{"question": "Google Cloud 위치를 나타내는 리소스의 JSON 표현은 어떻게 되나요?", "answer": "Google Cloud 위치를 나타내는 리소스의 JSON 표현은 다음과 같습니다: ```json { \"name\": string, \"locationId\": string, \"displayName\": string, \"labels\": { string: string, ... }, \"metadata\": { \"@type\": string, field1: ..., ... } } ```", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations_hl=ko.txt"}
{"question": "리소스의 'name' 필드는 무엇을 나타내나요?", "answer": "'name' 필드는 위치에 대한 리소스 이름을 나타내며, 구현에 따라 다를 수 있습니다. 예를 들어, \"projects/example-project/locations/us-east1\"와 같은 형식을 가집니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations_hl=ko.txt"}
{"question": "'locationId' 필드는 어떤 정보를 포함하나요?", "answer": "'locationId' 필드는 이 위치의 표준 ID를 포함하며, 예를 들어 \"us-east1\"과 같은 값을 가집니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations_hl=ko.txt"}
{"question": "'displayName' 필드는 어떤 용도로 사용되나요?", "answer": "'displayName' 필드는 일반적으로 인근 도시 이름과 같은 친숙한 이름을 나타내며, 예를 들어 \"Tokyo\"와 같은 값을 가집니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations_hl=ko.txt"}
{"question": "'labels' 필드는 어떤 형식으로 구성되나요?", "answer": "'labels' 필드는 위치에 대한 교차 서비스 속성을 나타내며, \"key\": \"value\" 쌍의 목록으로 구성됩니다. 예를 들어 {\"cloud.googleapis.com/region\": \"us-east1\"}와 같은 형식을 가집니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations_hl=ko.txt"}
{"question": "'metadata' 필드는 어떤 정보를 포함하나요?", "answer": "'metadata' 필드는 서비스 특정 메타데이터를 포함하며, 예를 들어 주어진 위치에서의 사용 가능한 용량과 같은 정보를 포함할 수 있습니다. '@type' 필드는 유형을 식별하는 URI를 포함합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations_hl=ko.txt"}
{"question": "'get' 메서드는 어떤 기능을 수행하나요?", "answer": "'get' 메서드는 특정 위치에 대한 정보를 가져오는 기능을 수행합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations_hl=ko.txt"}
{"question": "'list' 메서드는 어떤 정보를 제공하나요?", "answer": "'list' 메서드는 이 서비스에 대해 지원되는 위치에 대한 정보를 나열하는 기능을 제공합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations_hl=ko.txt"}
{"question": "'labels' 필드의 예시는 무엇인가요?", "answer": "'labels' 필드의 예시는 다음과 같습니다: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }와 같은 형식으로, 여러 개의 \"key\": \"value\" 쌍을 포함할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations_hl=ko.txt"}
{"question": "'metadata' 필드의 예시는 어떤 형식인가요?", "answer": "'metadata' 필드의 예시는 다음과 같습니다: { \"id\": 1234, \"@type\": \"types.example.com/standard/id\" }와 같이, 임의의 유형의 필드를 포함하는 객체입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations_hl=ko.txt"}
{"question": "`projects.locations.list` 메서드를 호출하기 위한 HTTP 요청 형식은 무엇인가요?", "answer": "`projects.locations.list` 메서드를 호출하기 위한 HTTP 요청 형식은 다음과 같습니다: `GET https://firestore.googleapis.com/v1/{name=projects/*}/locations`. 이 URL은 gRPC Transcoding 구문을 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations_list_hl=ko.txt"}
{"question": "`projects.locations.list` 메서드의 경로 매개변수는 무엇인가요?", "answer": "경로 매개변수는 `name`이며, 이는 위치 컬렉션을 소유하는 리소스를 나타내는 문자열입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations_list_hl=ko.txt"}
{"question": "`projects.locations.list` 메서드에서 사용할 수 있는 쿼리 매개변수는 무엇이 있나요?", "answer": "사용할 수 있는 쿼리 매개변수는 다음과 같습니다: `filter`, `pageSize`, `pageToken`, `extraLocationTypes[]`.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations_list_hl=ko.txt"}
{"question": "`filter` 쿼리 매개변수의 용도는 무엇인가요?", "answer": "`filter` 쿼리 매개변수는 결과를 선호하는 하위 집합으로 좁히기 위한 필터입니다. 예를 들어, \"displayName=tokyo\"와 같은 문자열을 사용할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations_list_hl=ko.txt"}
{"question": "`pageSize` 쿼리 매개변수는 어떤 역할을 하나요?", "answer": "`pageSize` 쿼리 매개변수는 반환할 최대 결과 수를 설정하는 역할을 합니다. 설정하지 않으면 서비스가 기본값을 선택합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations_list_hl=ko.txt"}
{"question": "`pageToken` 쿼리 매개변수는 어떻게 사용하나요?", "answer": "`pageToken` 쿼리 매개변수는 응답의 `nextPageToken` 필드에서 받은 페이지 토큰을 전송하여 다음 페이지를 수신하는 데 사용됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations_list_hl=ko.txt"}
{"question": "요청 본문은 어떻게 구성되나요?", "answer": "요청 본문은 비어 있어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations_list_hl=ko.txt"}
{"question": "`projects.locations.list` 메서드의 성공적인 응답 구조는 어떻게 되나요?", "answer": "성공적인 응답 구조는 다음과 같습니다: `{ \"locations\": [ { object (Location) } ], \"nextPageToken\": string }`. 여기서 `locations`는 요청에서 지정한 필터와 일치하는 위치 목록입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations_list_hl=ko.txt"}
{"question": "이 메서드를 호출하기 위한 인증 범위는 무엇인가요?", "answer": "이 메서드를 호출하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/datastore` 또는 `https://www.googleapis.com/auth/cloud-platform`.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations_list_hl=ko.txt"}
{"question": "`projects.locations.list` 메서드의 응답에서 `nextPageToken`의 용도는 무엇인가요?", "answer": "`nextPageToken`은 표준 목록 다음 페이지 토큰으로, 이를 사용하여 다음 페이지의 결과를 요청할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/projects.locations/list?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_projects.locations_list_hl=ko.txt"}
{"question": "Firestore에서 StructuredQuery를 사용하여 특정 필드만 반환하려면 어떻게 해야 하나요?", "answer": "StructuredQuery에서 특정 필드만 반환하려면 \"select\" 필드를 사용하여 Projection을 설정해야 합니다. 예를 들어, 반환할 필드를 지정하는 JSON 형식은 다음과 같습니다: ```json { \"select\": { \"fields\": [ {\"fieldPath\": \"fieldName1\"}, {\"fieldPath\": \"fieldName2\"} ] } } ```", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/StructuredQuery#projection"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_StructuredQuery_hl=ko.txt"}
{"question": "Firestore 쿼리에서 여러 필터를 결합하려면 어떻게 해야 하나요?", "answer": "여러 필터를 결합하려면 CompositeFilter를 사용하여 필터를 결합할 수 있습니다. CompositeFilter는 \"op\" 필드에 AND 또는 OR 연산자를 사용하여 여러 필터를 결합합니다. 예를 들어: ```json { \"compositeFilter\": { \"op\": \"AND\", \"filters\": [ {\"fieldFilter\": {\"field\": {\"fieldPath\": \"field1\"}, \"op\": \"EQUAL\", \"value\": {\"stringValue\": \"value1\"}}}, {\"fieldFilter\": {\"field\": {\"fieldPath\": \"field2\"}, \"op\": \"GREATER_THAN\", \"value\": {\"integerValue\": 10}}} ] } } ```", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/StructuredQuery#compositefilter"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_StructuredQuery_hl=ko.txt"}
{"question": "Firestore 쿼리에서 결과를 정렬하려면 어떻게 해야 하나요?", "answer": "결과를 정렬하려면 \"orderBy\" 필드를 사용하여 정렬할 필드를 지정해야 합니다. 예를 들어, 다음과 같이 JSON 형식으로 정렬할 수 있습니다: ```json { \"orderBy\": [ {\"field\": {\"fieldPath\": \"fieldName\"}, \"direction\": \"ASCENDING\"} ] } ```", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/StructuredQuery#order"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_StructuredQuery_hl=ko.txt"}
{"question": "Firestore 쿼리에서 특정 문서 수를 건너뛰려면 어떻게 해야 하나요?", "answer": "특정 문서 수를 건너뛰려면 \"offset\" 필드를 사용하여 건너뛸 문서 수를 지정할 수 있습니다. 예를 들어, 5개의 문서를 건너뛰려면 다음과 같이 설정합니다: ```json { \"offset\": 5 } ```", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/StructuredQuery#offset"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_StructuredQuery_hl=ko.txt"}
{"question": "Firestore 쿼리에서 결과의 최대 수를 제한하려면 어떻게 해야 하나요?", "answer": "결과의 최대 수를 제한하려면 \"limit\" 필드를 사용하여 반환할 문서 수를 지정할 수 있습니다. 예를 들어, 최대 10개의 문서를 반환하려면 다음과 같이 설정합니다: ```json { \"limit\": 10 } ```", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/StructuredQuery#limit"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_StructuredQuery_hl=ko.txt"}
{"question": "Firestore 쿼리에서 시작 위치를 지정하려면 어떻게 해야 하나요?", "answer": "시작 위치를 지정하려면 \"startAt\" 필드를 사용하여 커서를 설정할 수 있습니다. 예를 들어, 특정 조건을 만족하는 문서에서 시작하려면 다음과 같이 설정합니다: ```json { \"startAt\": { \"values\": [ {\"integerValue\": 1} ] } } ```", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/StructuredQuery#startat"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_StructuredQuery_hl=ko.txt"}
{"question": "Firestore 쿼리에서 종료 위치를 지정하려면 어떻게 해야 하나요?", "answer": "종료 위치를 지정하려면 \"endAt\" 필드를 사용하여 커서를 설정할 수 있습니다. 예를 들어, 특정 조건을 만족하는 문서에서 종료하려면 다음과 같이 설정합니다: ```json { \"endAt\": { \"values\": [ {\"integerValue\": 10} ] } } ```", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/StructuredQuery#endat"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_StructuredQuery_hl=ko.txt"}
{"question": "Firestore에서 벡터 검색을 수행하려면 어떻게 해야 하나요?", "answer": "벡터 검색을 수행하려면 \"findNearest\" 필드를 사용하여 검색할 벡터 필드와 쿼리 벡터를 설정해야 합니다. 예를 들어: ```json { \"findNearest\": { \"vectorField\": {\"fieldPath\": \"vectorFieldName\"}, \"queryVector\": {\"arrayValue\": {\"values\": [{\"doubleValue\": 0.1}, {\"doubleValue\": 0.2}]}}, \"distanceMeasure\": \"EUCLIDEAN\", \"limit\": 5 } } ```", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/StructuredQuery#findnearest"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_StructuredQuery_hl=ko.txt"}
{"question": "Firestore 쿼리에서 필드 필터를 사용하는 방법은 무엇인가요?", "answer": "필드 필터를 사용하려면 \"fieldFilter\"를 설정하여 특정 필드에 대한 조건을 지정할 수 있습니다. 예를 들어: ```json { \"fieldFilter\": { \"field\": {\"fieldPath\": \"fieldName\"}, \"op\": \"EQUAL\", \"value\": {\"stringValue\": \"value\"} } } ```", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/StructuredQuery#fieldfilter"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_StructuredQuery_hl=ko.txt"}
{"question": "Firestore 쿼리에서 단항 필터를 사용하는 방법은 무엇인가요?", "answer": "단항 필터를 사용하려면 \"unaryFilter\"를 설정하여 특정 필드에 대한 단일 조건을 지정할 수 있습니다. 예를 들어: ```json { \"unaryFilter\": { \"op\": \"IS_NULL\", \"field\": {\"fieldPath\": \"fieldName\"} } } ```", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/StructuredQuery#unaryfilter"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_StructuredQuery_hl=ko.txt"}
{"question": "Firestore에서 트랜잭션을 생성할 때 사용할 수 있는 모드는 무엇인가요?", "answer": "Firestore에서 트랜잭션을 생성할 때 사용할 수 있는 모드는 \"readOnly\"와 \"readWrite\"입니다. \"readOnly\"는 오직 읽기 작업만 수행할 수 있는 트랜잭션을 의미하고, \"readWrite\"는 읽기와 쓰기 작업 모두를 수행할 수 있는 트랜잭션을 의미합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/TransactionOptions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_TransactionOptions_hl=ko.txt"}
{"question": "\"readOnly\" 트랜잭션의 JSON 표현은 어떻게 되나요?", "answer": "\"readOnly\" 트랜잭션의 JSON 표현은 다음과 같습니다: ```json { \"readOnly\": {} } ```", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/TransactionOptions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_TransactionOptions_hl=ko.txt"}
{"question": "\"readWrite\" 트랜잭션의 JSON 표현은 어떻게 되나요?", "answer": "\"readWrite\" 트랜잭션의 JSON 표현은 다음과 같습니다: ```json { \"readWrite\": {} } ```", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/TransactionOptions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_TransactionOptions_hl=ko.txt"}
{"question": "\"readOnly\" 트랜잭션에서 사용할 수 있는 일관성 모드는 무엇인가요?", "answer": "\"readOnly\" 트랜잭션에서 사용할 수 있는 일관성 모드는 \"readTime\"입니다. 이 모드는 주어진 시간에 문서를 읽도록 설정할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/TransactionOptions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_TransactionOptions_hl=ko.txt"}
{"question": "\"readTime\"의 형식은 어떻게 되며, 어떤 제약이 있나요?", "answer": "\"readTime\"은 마이크로초 정밀도의 타임스탬프 형식이어야 하며, 과거 1시간 이내의 타임스탬프이거나, 포인트 인 타임 복구가 활성화된 경우 과거 7일 이내의 정각 타임스탬프일 수 있습니다. 형식은 RFC 3339를 따릅니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/TransactionOptions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_TransactionOptions_hl=ko.txt"}
{"question": "\"readWrite\" 트랜잭션에서 사용할 수 있는 추가 필드는 무엇인가요?", "answer": "\"readWrite\" 트랜잭션에서 사용할 수 있는 추가 필드는 \"retryTransaction\"입니다. 이는 선택적 필드로, 재시도할 트랜잭션을 나타내며, base64로 인코딩된 문자열 형식입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/TransactionOptions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_TransactionOptions_hl=ko.txt"}
{"question": "\"retryTransaction\" 필드는 어떤 형식이어야 하나요?", "answer": "\"retryTransaction\" 필드는 bytes 형식이어야 하며, base64로 인코딩된 문자열입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/TransactionOptions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_TransactionOptions_hl=ko.txt"}
{"question": "\"readOnly\" 트랜잭션의 기본 일관성 모드는 무엇인가요?", "answer": "\"readOnly\" 트랜잭션의 기본 일관성 모드는 강한 일관성(strong consistency)입니다. 만약 \"readTime\"이 설정되지 않으면 기본적으로 강한 일관성이 적용됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/TransactionOptions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_TransactionOptions_hl=ko.txt"}
{"question": "Firestore에서 \"readWrite\" 트랜잭션을 생성할 때의 제약사항은 무엇인가요?", "answer": "Firestore에서는 3rd party 인증 요청이 \"readWrite\" 트랜잭션을 생성하는 것을 허용하지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/TransactionOptions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_TransactionOptions_hl=ko.txt"}
{"question": "\"readTime\"의 예시는 어떤 것이 있나요?", "answer": "\"readTime\"의 예시는 다음과 같습니다: \"2014-10-02T15:01:23Z\", \"2014-10-02T15:01:23.045123456Z\", \"2014-10-02T15:01:23+05:30\"입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/TransactionOptions?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_TransactionOptions_hl=ko.txt"}
{"question": "Firestore에서 문서를 업데이트할 때 `updateMask`의 역할은 무엇인가요?", "answer": "`updateMask`는 이 쓰기 작업에서 업데이트할 필드를 지정합니다. 이 필드는 업데이트 작업일 때만 설정할 수 있으며, 마스크가 설정되지 않은 경우 문서가 존재하면 기존 데이터가 덮어씌워집니다. 마스크가 설정된 경우 서버의 문서에 마스크에 포함되지 않은 필드는 변경되지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_Write_hl=ko.txt"}
{"question": "Firestore에서 문서를 삭제하는 방법은 무엇인가요?", "answer": "문서를 삭제하려면 `delete` 필드를 사용하여 삭제할 문서의 이름을 지정합니다. 문서 이름은 `projects/{projectId}/databases/{databaseId}/documents/{document_path}` 형식이어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_Write_hl=ko.txt"}
{"question": "`updateTransforms` 필드는 어떤 경우에 사용되며, 그 역할은 무엇인가요?", "answer": "`updateTransforms` 필드는 업데이트 후에 수행할 변환을 지정합니다. 이 필드는 업데이트 작업일 때만 설정할 수 있으며, 이 쓰기는 문서에 대한 업데이트와 변환을 원자적으로 순서대로 수행하는 것과 동일합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_Write_hl=ko.txt"}
{"question": "`currentDocument` 필드는 어떤 용도로 사용되나요?", "answer": "`currentDocument` 필드는 문서에 대한 선택적 전제 조건을 설정합니다. 이 필드가 설정되면, 해당 조건이 충족되지 않으면 쓰기 작업이 실패합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_Write_hl=ko.txt"}
{"question": "`DocumentTransform`의 구조는 어떻게 되며, 어떤 필드를 포함하나요?", "answer": "`DocumentTransform`은 변환할 문서의 이름과 적용할 필드 변환의 목록을 포함합니다. JSON 구조는 `{\"document\": string, \"fieldTransforms\": [...]}` 형식입니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_Write_hl=ko.txt"}
{"question": "`FieldTransform`에서 `increment` 변환은 어떻게 작동하나요?", "answer": "`increment` 변환은 주어진 값을 필드의 현재 값에 더합니다. 이 값은 정수 또는 실수여야 하며, 필드가 존재하지 않거나 정수 또는 실수가 아닌 경우 주어진 값으로 필드를 설정합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_Write_hl=ko.txt"}
{"question": "Firestore에서 배열 필드에 요소를 추가하는 방법은 무엇인가요?", "answer": "배열 필드에 요소를 추가하려면 `appendMissingElements` 변환을 사용합니다. 이 변환은 현재 필드 값에 없는 요소를 순서대로 추가합니다. 필드가 배열이 아니거나 존재하지 않는 경우, 먼저 빈 배열로 설정됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_Write_hl=ko.txt"}
{"question": "`removeAllFromArray` 변환은 어떤 기능을 하나요?", "answer": "`removeAllFromArray` 변환은 필드의 배열에서 주어진 요소를 모두 제거합니다. 필드가 배열이 아니거나 존재하지 않는 경우, 빈 배열로 설정됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_Write_hl=ko.txt"}
{"question": "`setToServerValue` 변환은 어떤 경우에 사용되나요?", "answer": "`setToServerValue` 변환은 필드를 주어진 서버 값으로 설정합니다. 이 변환은 서버에서 계산된 값을 사용해야 할 때 유용합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_Write_hl=ko.txt"}
{"question": "Firestore에서 문서의 최대값을 설정하는 방법은 무엇인가요?", "answer": "문서의 최대값을 설정하려면 `maximum` 변환을 사용합니다. 이 변환은 필드의 현재 값과 주어진 값 중 최대값으로 필드를 설정합니다. 필드가 존재하지 않거나 정수 또는 실수가 아닌 경우 주어진 값으로 설정됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rest/v1/Write?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rest_v1_Write_hl=ko.txt"}
{"question": "Firestore에서 복합 인덱스를 생성하는 방법은 무엇인가요?", "answer": "복합 인덱스를 생성하려면 `CreateIndex` 메서드를 사용합니다. 이 메서드는 `CreateIndexRequest`를 인자로 받아들이며, 요청의 `parent` 필드는 `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}` 형식이어야 하고, `index` 필드는 생성할 복합 인덱스의 정보를 포함해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.admin.v1beta2#google.firestore.admin.v1beta2.CreateIndexRequest"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_google.firestore.admin.v1beta2_hl=ko.txt"}
{"question": "Firestore에서 인덱스를 삭제하는 방법은 무엇인가요?", "answer": "인덱스를 삭제하려면 `DeleteIndex` 메서드를 사용합니다. 이 메서드는 `DeleteIndexRequest`를 인자로 받아들이며, 요청의 `name` 필드는 `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}` 형식이어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.admin.v1beta2#google.firestore.admin.v1beta2.DeleteIndexRequest"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_google.firestore.admin.v1beta2_hl=ko.txt"}
{"question": "Firestore에서 문서를 내보내는 방법은 무엇인가요?", "answer": "문서를 내보내려면 `ExportDocuments` 메서드를 사용합니다. 이 메서드는 `ExportDocumentsRequest`를 인자로 받아들이며, 요청의 `name` 필드는 `projects/{project_id}/databases/{database_id}` 형식이어야 하고, `collection_ids` 필드는 내보낼 컬렉션의 ID를 포함해야 합니다. `output_uri_prefix` 필드는 Google Cloud Storage URI 형식이어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.admin.v1beta2#google.firestore.admin.v1beta2.ExportDocumentsRequest"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_google.firestore.admin.v1beta2_hl=ko.txt"}
{"question": "Firestore에서 문서를 가져오는 방법은 무엇인가요?", "answer": "문서를 가져오려면 `ImportDocuments` 메서드를 사용합니다. 이 메서드는 `ImportDocumentsRequest`를 인자로 받아들이며, 요청의 `name` 필드는 `projects/{project_id}/databases/{database_id}` 형식이어야 하고, `input_uri_prefix` 필드는 가져올 문서의 위치를 지정해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.admin.v1beta2#google.firestore.admin.v1beta2.ImportDocumentsRequest"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_google.firestore.admin.v1beta2_hl=ko.txt"}
{"question": "Firestore에서 필드의 메타데이터를 가져오는 방법은 무엇인가요?", "answer": "필드의 메타데이터를 가져오려면 `GetField` 메서드를 사용합니다. 이 메서드는 `GetFieldRequest`를 인자로 받아들이며, 요청의 `name` 필드는 `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_id}` 형식이어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.admin.v1beta2#google.firestore.admin.v1beta2.GetFieldRequest"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_google.firestore.admin.v1beta2_hl=ko.txt"}
{"question": "Firestore에서 복합 인덱스의 상태를 확인하는 방법은 무엇인가요?", "answer": "복합 인덱스의 상태를 확인하려면 `GetIndex` 메서드를 사용합니다. 이 메서드는 `GetIndexRequest`를 인자로 받아들이며, 요청의 `name` 필드는 `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}` 형식이어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.admin.v1beta2#google.firestore.admin.v1beta2.GetIndexRequest"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_google.firestore.admin.v1beta2_hl=ko.txt"}
{"question": "Firestore에서 필드 구성을 업데이트하는 방법은 무엇인가요?", "answer": "필드 구성을 업데이트하려면 `UpdateField` 메서드를 사용합니다. 이 메서드는 `UpdateFieldRequest`를 인자로 받아들이며, 요청의 `field` 필드는 업데이트할 필드의 정보를 포함해야 하고, `update_mask` 필드는 업데이트할 구성의 경로를 지정해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.admin.v1beta2#google.firestore.admin.v1beta2.UpdateFieldRequest"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_google.firestore.admin.v1beta2_hl=ko.txt"}
{"question": "Firestore에서 필드 목록을 가져오는 방법은 무엇인가요?", "answer": "필드 목록을 가져오려면 `ListFields` 메서드를 사용합니다. 이 메서드는 `ListFieldsRequest`를 인자로 받아들이며, 요청의 `parent` 필드는 `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}` 형식이어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.admin.v1beta2#google.firestore.admin.v1beta2.ListFieldsRequest"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_google.firestore.admin.v1beta2_hl=ko.txt"}
{"question": "Firestore에서 인덱스 목록을 가져오는 방법은 무엇인가요?", "answer": "인덱스 목록을 가져오려면 `ListIndexes` 메서드를 사용합니다. 이 메서드는 `ListIndexesRequest`를 인자로 받아들이며, 요청의 `parent` 필드는 `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}` 형식이어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.admin.v1beta2#google.firestore.admin.v1beta2.ListIndexesRequest"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_google.firestore.admin.v1beta2_hl=ko.txt"}
{"question": "Firestore에서 작업의 진행 상태를 확인하는 방법은 무엇인가요?", "answer": "작업의 진행 상태를 확인하려면 `google.longrunning.Operations` API를 사용하여 작업의 상태를 조회할 수 있습니다. 각 작업의 상태는 `OperationState` 열거형을 통해 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.longrunning#google.longrunning.Operation"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_google.firestore.admin.v1beta2_hl=ko.txt"}
{"question": "Firestore에서 문서를 대량으로 삭제하는 방법은 무엇인가요?", "answer": "Firestore에서 문서를 대량으로 삭제하려면 `BulkDeleteDocuments` 메서드를 사용합니다. 이 메서드는 `BulkDeleteDocumentsRequest`를 통해 요청되며, 삭제할 문서의 컬렉션 ID와 네임스페이스 ID를 지정할 수 있습니다. 삭제는 백그라운드에서 진행되며, 진행 상황은 생성된 Operation 리소스를 통해 모니터링할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.admin.v1#google.firestore.admin.v1.FirestoreAdmin.BulkDeleteDocuments"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_google.firestore.admin.v1_hl=ko.txt"}
{"question": "Firestore 데이터베이스를 복제하는 방법은 무엇인가요?", "answer": "Firestore 데이터베이스를 복제하려면 `CloneDatabase` 메서드를 사용합니다. 이 메서드는 `CloneDatabaseRequest`를 통해 요청되며, 복제할 데이터베이스의 ID와 PITR(지점 복구) 스냅샷을 지정해야 합니다. 복제 작업은 비동기적으로 진행되며, 진행 상황은 생성된 Operation 리소스를 통해 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.admin.v1#google.firestore.admin.v1.FirestoreAdmin.CloneDatabase"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_google.firestore.admin.v1_hl=ko.txt"}
{"question": "Firestore에서 백업 스케줄을 생성하는 방법은 무엇인가요?", "answer": "Firestore에서 백업 스케줄을 생성하려면 `CreateBackupSchedule` 메서드를 사용합니다. 이 메서드는 `CreateBackupScheduleRequest`를 통해 요청되며, 데이터베이스에 대해 최대 두 개의 백업 스케줄(하나는 일일, 하나는 주간)을 설정할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.admin.v1#google.firestore.admin.v1.FirestoreAdmin.CreateBackupSchedule"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_google.firestore.admin.v1_hl=ko.txt"}
{"question": "Firestore 데이터베이스를 생성하는 방법은 무엇인가요?", "answer": "Firestore 데이터베이스를 생성하려면 `CreateDatabase` 메서드를 사용합니다. 이 메서드는 `CreateDatabaseRequest`를 통해 요청되며, 데이터베이스의 ID와 부모 프로젝트를 지정해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.admin.v1#google.firestore.admin.v1.FirestoreAdmin.CreateDatabase"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_google.firestore.admin.v1_hl=ko.txt"}
{"question": "Firestore에서 복합 인덱스를 생성하는 방법은 무엇인가요?", "answer": "Firestore에서 복합 인덱스를 생성하려면 `CreateIndex` 메서드를 사용합니다. 이 메서드는 `CreateIndexRequest`를 통해 요청되며, 인덱스를 생성할 컬렉션 그룹의 부모 이름과 인덱스 구성을 지정해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.admin.v1#google.firestore.admin.v1.FirestoreAdmin.CreateIndex"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_google.firestore.admin.v1_hl=ko.txt"}
{"question": "Firestore에서 사용자 자격 증명을 생성하는 방법은 무엇인가요?", "answer": "Firestore에서 사용자 자격 증명을 생성하려면 `CreateUserCreds` 메서드를 사용합니다. 이 메서드는 `CreateUserCredsRequest`를 통해 요청되며, 사용자 자격 증명의 ID와 관련된 정보를 제공해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.admin.v1#google.firestore.admin.v1.FirestoreAdmin.CreateUserCreds"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_google.firestore.admin.v1_hl=ko.txt"}
{"question": "Firestore에서 백업을 삭제하는 방법은 무엇인가요?", "answer": "Firestore에서 백업을 삭제하려면 `DeleteBackup` 메서드를 사용합니다. 이 메서드는 `DeleteBackupRequest`를 통해 요청되며, 삭제할 백업의 이름을 지정해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.admin.v1#google.firestore.admin.v1.FirestoreAdmin.DeleteBackup"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_google.firestore.admin.v1_hl=ko.txt"}
{"question": "Firestore에서 데이터베이스를 삭제하는 방법은 무엇인가요?", "answer": "Firestore에서 데이터베이스를 삭제하려면 `DeleteDatabase` 메서드를 사용합니다. 이 메서드는 `DeleteDatabaseRequest`를 통해 요청되며, 삭제할 데이터베이스의 이름과 ETag를 지정해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.admin.v1#google.firestore.admin.v1.FirestoreAdmin.DeleteDatabase"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_google.firestore.admin.v1_hl=ko.txt"}
{"question": "Firestore에서 인덱스를 삭제하는 방법은 무엇인가요?", "answer": "Firestore에서 인덱스를 삭제하려면 `DeleteIndex` 메서드를 사용합니다. 이 메서드는 `DeleteIndexRequest`를 통해 요청되며, 삭제할 인덱스의 이름을 지정해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.admin.v1#google.firestore.admin.v1.FirestoreAdmin.DeleteIndex"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_google.firestore.admin.v1_hl=ko.txt"}
{"question": "Firestore에서 사용자 자격 증명을 비활성화하는 방법은 무엇인가요?", "answer": "Firestore에서 사용자 자격 증명을 비활성화하려면 `DisableUserCreds` 메서드를 사용합니다. 이 메서드는 `DisableUserCredsRequest`를 통해 요청되며, 비활성화할 사용자 자격 증명의 이름을 지정해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.admin.v1#google.firestore.admin.v1.FirestoreAdmin.DisableUserCreds"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_google.firestore.admin.v1_hl=ko.txt"}
{"question": "Cloud Firestore에서 여러 문서를 한 번에 가져오는 방법은 무엇인가요?", "answer": "Cloud Firestore에서는 `BatchGetDocuments` 메서드를 사용하여 여러 문서를 한 번에 가져올 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 삭제하는 방법은 무엇인가요?", "answer": "문서를 삭제하려면 `DeleteDocument` 메서드를 사용하면 됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_hl=ko.txt"}
{"question": "Cloud Firestore에서 트랜잭션을 시작하는 방법은 무엇인가요?", "answer": "트랜잭션을 시작하려면 `BeginTransaction` 메서드를 사용하면 됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 업데이트하는 방법은 무엇인가요?", "answer": "문서를 업데이트하려면 `UpdateDocument` 메서드를 사용하여 문서를 업데이트하거나 삽입할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서의 메타데이터와 구성을 가져오는 방법은 무엇인가요?", "answer": "문서의 메타데이터와 구성을 가져오려면 `GetField` 메서드를 사용하면 됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.admin.v1#google.firestore.admin.v1.FirestoreAdmin"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_hl=ko.txt"}
{"question": "Cloud Firestore에서 인덱스를 생성하는 방법은 무엇인가요?", "answer": "인덱스를 생성하려면 `CreateIndex` 메서드를 사용하면 됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.admin.v1#google.firestore.admin.v1.FirestoreAdmin"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서의 변경 사항을 실시간으로 듣는 방법은 무엇인가요?", "answer": "문서의 변경 사항을 듣기 위해서는 `Listen` 메서드를 사용하면 됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 일괄적으로 쓰는 방법은 무엇인가요?", "answer": "문서를 일괄적으로 쓰려면 `BatchWrite` 메서드를 사용하여 여러 쓰기 작업을 적용할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_hl=ko.txt"}
{"question": "Cloud Firestore에서 데이터베이스를 생성하는 방법은 무엇인가요?", "answer": "데이터베이스를 생성하려면 `CreateDatabase` 메서드를 사용하면 됩니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.admin.v1#google.firestore.admin.v1.FirestoreAdmin"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 가져오는 방법은 무엇인가요?", "answer": "문서를 가져오려면 `GetDocument` 메서드를 사용하여 단일 문서를 가져올 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_reference_rpc_hl=ko.txt"}
{"question": "인플레이스 복원을 수행하기 위한 첫 번째 단계는 무엇인가요?", "answer": "인플레이스 복원을 수행하기 위해서는 복원 작업에 사용할 백업을 식별해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/restore-in-place?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_restore-in-place_hl=ko.txt"}
{"question": "인플레이스 복원 프로세스를 시작하기 전에 어떤 작업을 수행해야 하나요?", "answer": "삭제할 데이터베이스의 데이터를 내보내고, 삭제된 데이터베이스를 복구해야 하는 경우 내보내기 작업에서 데이터를 가져와야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/restore-in-place?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_restore-in-place_hl=ko.txt"}
{"question": "인플레이스 복원 중에 원본 데이터베이스는 어떻게 되나요?", "answer": "인플레이스 복원 프로세스를 시작하면 원본 데이터베이스는 영구적으로 삭제되며 이 작업은 실행취소할 수 없습니다.", "sources": ["https://firebase.google.com/docs/firestore/restore-in-place?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_restore-in-place_hl=ko.txt"}
{"question": "복원 작업을 시작하기 전에 데이터베이스를 삭제한 후 대기해야 하는 시간은 얼마인가요?", "answer": "데이터베이스를 삭제한 후 5분 이상 대기해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/restore-in-place?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_restore-in-place_hl=ko.txt"}
{"question": "복원 작업을 시작하기 위한 gcloud 명령어는 무엇인가요?", "answer": "복원 작업을 시작하기 위해서는 다음 명령어를 사용합니다: `gcloud alpha firestore databases restore --source-backup=projects/PROJECT_ID/locations/LOCATION/backups/BACKUP_ID --destination-database='DATABASE_ID'`", "sources": ["https://firebase.google.com/docs/firestore/restore-in-place?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_restore-in-place_hl=ko.txt"}
{"question": "인플레이스 복원 중 클라이언트에서 발생할 수 있는 문제는 무엇인가요?", "answer": "앱이 네이티브 모드의 Cloud Firestore 클라이언트 라이브러리를 사용하고 클라이언트에서 오프라인 캐시를 사용하면 인플레이스 복원이 쓰기를 삭제하는 대신 쓰기를 복원된 데이터베이스로 플러시할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/restore-in-place?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_restore-in-place_hl=ko.txt"}
{"question": "복원 작업이 완료된 후 색인 구성을 어떻게 복사하나요?", "answer": "색인 구성을 복사하기 위해 `gcloud firestore indexes composite list` 명령어를 사용하여 복합 색인 목록을 가져오고, `gcloud firestore indexes fields list` 명령어를 사용하여 단일 필드 색인 예외 목록을 가져옵니다.", "sources": ["https://firebase.google.com/docs/firestore/restore-in-place?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_restore-in-place_hl=ko.txt"}
{"question": "복원 작업에 사용할 백업을 식별하기 위한 gcloud 명령어는 무엇인가요?", "answer": "복원 작업에 사용할 백업을 식별하기 위해서는 `gcloud alpha firestore backups list` 명령어를 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/restore-in-place?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_restore-in-place_hl=ko.txt"}
{"question": "인플레이스 복원 작업을 수행할 때 다운타임이 필요한 이유는 무엇인가요?", "answer": "인플레이스 복원 작업이 시작되면 작업을 취소할 수 없으므로 작업이 완료될 때까지 기다려야 하며, 이로 인해 다운타임이 필요합니다.", "sources": ["https://firebase.google.com/docs/firestore/restore-in-place?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_restore-in-place_hl=ko.txt"}
{"question": "인플레이스 복원 후 색인 정의는 어떻게 처리하나요?", "answer": "인플레이스 복원 작업을 완료한 후 색인 구성을 사용하여 색인을 다시 만들어야 하며, 내보내기 작업은 색인 정의를 캡처하지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/restore-in-place?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_restore-in-place_hl=ko.txt"}
{"question": "Cloud Firestore 보안 규칙 버전 2를 사용하려면 어떻게 해야 하나요?", "answer": "보안 규칙의 첫 번째 줄에 `rules_version = '2';`를 추가하여 버전 2를 선택해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/security/get-started?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_security_get-started_hl=ko.txt"}
{"question": "Cloud Firestore Security Rules의 기본 구조는 어떻게 되나요?", "answer": "모든 Cloud Firestore Security Rules는 데이터베이스의 문서를 식별하는 `match` 구문과 이러한 문서에 대한 액세스를 제어하는 `allow` 표현식으로 구성됩니다.", "sources": ["https://firebase.google.com/docs/firestore/security/get-started?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_security_get-started_hl=ko.txt"}
{"question": "인증된 사용자에게 모든 문서에 대한 읽기 및 쓰기 권한을 부여하는 규칙의 예시는 무엇인가요?", "answer": "다음과 같은 규칙을 사용하여 인증된 사용자에게 모든 문서에 대한 읽기 및 쓰기 권한을 부여할 수 있습니다: ```plaintext service cloud.firestore { match /databases/{database}/documents { match /{document=**} { allow read, write: if request.auth != null; } } } ```", "sources": ["https://firebase.google.com/docs/firestore/security/get-started?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_security_get-started_hl=ko.txt"}
{"question": "Firebase Console에서 보안 규칙을 설정하고 배포하는 방법은 무엇인가요?", "answer": "Firebase Console의 Cloud Firestore 섹션에서 규칙 탭을 열고 온라인 편집기로 규칙을 작성한 다음 게시를 클릭하여 설정하고 배포할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/security/get-started?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_security_get-started_hl=ko.txt"}
{"question": "Firebase CLI를 사용하여 보안 규칙을 배포하는 방법은 무엇인가요?", "answer": "Firebase CLI를 사용하면 애플리케이션 코드로 규칙의 버전을 계속 제어하면서 기존 배포 프로세스의 일부로 규칙을 배포할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/security/get-started?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_security_get-started_hl=ko.txt"}
{"question": "Cloud Firestore Security Rules 업데이트가 쿼리와 리스너에 미치는 영향은 무엇인가요?", "answer": "Cloud Firestore Security Rules 업데이트가 새 쿼리와 리스너에 영향을 미치는 데 최대 1분이 소요될 수 있으며, 변경사항이 완전히 전파되어 모든 활성 리스너에 반영되는 데 최대 10분이 소요될 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/security/get-started?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_security_get-started_hl=ko.txt"}
{"question": "Cloud Firestore Security Rules를 작성할 때 주의해야 할 점은 무엇인가요?", "answer": "규칙이 지정된 문서 경로 중 일부라도 액세스를 거부하면 전체 요청이 실패하므로, 규칙을 신중하게 작성해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/security/get-started?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_security_get-started_hl=ko.txt"}
{"question": "Cloud Firestore와 Cloud Storage를 함께 사용할 때 보안 규칙은 어떻게 강화되나요?", "answer": "Cloud Firestore는 Firebase 보안 규칙에서 Cloud Storage의 승인 요구사항을 캡처할 수 있으므로, 두 제품이 함께 사용될 때 앱 보안이 강화됩니다.", "sources": ["https://firebase.google.com/docs/firestore/security/get-started?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_security_get-started_hl=ko.txt"}
{"question": "Cloud Firestore Security Rules의 재귀 와일드 카드란 무엇인가요?", "answer": "재귀 와일드 카드는 `{name=**}`의 동작을 변경하며, 컬렉션 그룹 쿼리를 사용하려면 보안 규칙 버전 2를 사용해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/security/get-started?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_security_get-started_hl=ko.txt"}
{"question": "Firebase Console에서 Cloud Firestore Security Rules를 정의할 때 주의해야 할 점은 무엇인가요?", "answer": "Firebase Console로 보안 규칙을 정의하거나 수정하는 경우, 프로젝트 디렉터리에 정의된 규칙도 업데이트해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/security/get-started?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_security_get-started_hl=ko.txt"}
{"question": "Cloud Firestore 에뮬레이터를 설치하는 방법은 무엇인가요?", "answer": "Cloud Firestore 에뮬레이터를 설치하려면 Firebase CLI를 사용하여 아래 명령어를 실행합니다: `firebase setup:emulators:firestore`.", "sources": ["https://firebase.google.com/docs/firestore/security/test-rules-emulator?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_security_test-rules-emulator_hl=ko.txt"}
{"question": "Cloud Firestore 에뮬레이터를 시작하는 명령어는 무엇인가요?", "answer": "에뮬레이터를 시작하려면 다음 명령어를 사용합니다: `firebase emulators:start --only firestore`. 이 명령어는 프로세스가 중단될 때까지 에뮬레이터를 실행합니다.", "sources": ["https://firebase.google.com/docs/firestore/security/test-rules-emulator?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_security_test-rules-emulator_hl=ko.txt"}
{"question": "Cloud Firestore Security Rules의 기본 구성 요소는 무엇인가요?", "answer": "Cloud Firestore Security Rules에는 두 가지 기본 구성 요소가 있습니다: `match` 문은 데이터베이스의 문서를 식별하고, `allow` 표현식은 이러한 문서에 대한 액세스를 관리합니다.", "sources": ["https://firebase.google.com/docs/firestore/security/test-rules-emulator?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_security_test-rules-emulator_hl=ko.txt"}
{"question": "Firebase v9 SDK의 규칙 단위 테스트 라이브러리를 사용하는 이유는 무엇인가요?", "answer": "Firebase v9 SDK의 규칙 단위 테스트 라이브러리는 더 간소화되어 있으며 에뮬레이터에 연결하는 데 필요한 설정이 적어 프로덕션 리소스를 실수로 사용해버리는 일을 피할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/security/test-rules-emulator?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_security_test-rules-emulator_hl=ko.txt"}
{"question": "`initializeTestEnvironment()` 함수의 역할은 무엇인가요?", "answer": "`initializeTestEnvironment()` 함수는 규칙 단위 테스트를 위한 테스트 환경을 초기화하며, 성공적으로 실행되려면 에뮬레이터가 실행 중이어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/security/test-rules-emulator?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_security_test-rules-emulator_hl=ko.txt"}
{"question": "`assertSucceeds()` 함수는 어떤 용도로 사용되나요?", "answer": "`assertSucceeds()` 함수는 에뮬레이터 작업을 래핑하는 제공된 프라미스가 보안 규칙 위반 없이 확인되도록 어설션을 만듭니다.", "sources": ["https://firebase.google.com/docs/firestore/security/test-rules-emulator?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_security_test-rules-emulator_hl=ko.txt"}
{"question": "`RulesTestEnvironment.cleanup()` 메서드는 어떤 기능을 하나요?", "answer": "`RulesTestEnvironment.cleanup()` 메서드는 테스트 환경에서 만든 모든 RulesTestContexts를 삭제하고 기본 리소스를 삭제하여 아무런 데이터를 남기지 않고 종료됩니다.", "sources": ["https://firebase.google.com/docs/firestore/security/test-rules-emulator?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_security_test-rules-emulator_hl=ko.txt"}
{"question": "Cloud Firestore 에뮬레이터에서 발생할 수 있는 알려진 문제는 무엇인가요?", "answer": "Cloud Firestore 에뮬레이터를 사용할 때 테스트 동작에 일관성이 없거나, 에뮬레이터를 처음 로드할 때만 테스트가 통과하는 등의 문제가 발생할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/security/test-rules-emulator?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_security_test-rules-emulator_hl=ko.txt"}
{"question": "`RulesTestEnvironment.withSecurityRulesDisabled()` 메서드는 어떤 상황에서 사용하나요?", "answer": "`RulesTestEnvironment.withSecurityRulesDisabled()` 메서드는 보안 규칙이 사용 중지된 것처럼 작동하는 컨텍스트에서 테스트 설정 함수를 실행할 때 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/security/test-rules-emulator?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_security_test-rules-emulator_hl=ko.txt"}
{"question": "Cloud Firestore 에뮬레이터의 요청 평가를 시각화하는 방법은 무엇인가요?", "answer": "Cloud Firestore 에뮬레이터의 요청 평가를 시각화하려면 에뮬레이터 도구 모음 UI에서 Firestore > 요청 탭을 열어 각 요청의 자세한 평가 순서를 확인합니다.", "sources": ["https://firebase.google.com/docs/firestore/security/test-rules-emulator?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_security_test-rules-emulator_hl=ko.txt"}
{"question": "Cloud Firestore에서 읽기 시간 집계 쿼리는 어떤 기능을 지원하나요?", "answer": "Cloud Firestore는 읽기 시간 집계 쿼리에서 count(), sum(), average() 집계 기능을 지원합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/aggregation?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_aggregation_hl=ko.txt"}
{"question": "쓰기 시간 집계는 어떤 경우에 사용해야 하나요?", "answer": "쓰기 시간 집계는 실시간 업데이트에 대한 집계 결과를 리슨하거나, 집계 결과를 클라이언트 측 캐시에 저장하고자 할 때 사용해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/aggregation?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_aggregation_hl=ko.txt"}
{"question": "특정 레스토랑의 평점을 가져오는 쿼리 예시는 무엇인가요?", "answer": "특정 레스토랑의 평점을 가져오는 쿼리는 다음과 같습니다: `webdb.collection(\"restaurants\").doc(\"arinell-pizza\").collection(\"ratings\").get();`", "sources": ["https://firebase.google.com/docs/firestore/solutions/aggregation?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_aggregation_hl=ko.txt"}
{"question": "쓰기 시간 집계를 구현하기 위해 클라이언트 측 트랜잭션을 사용하는 방법은 무엇인가요?", "answer": "클라이언트 측 트랜잭션을 사용하여 쓰기 시간 집계를 구현하려면, 레스토랑 문서에 평점을 추가하고 평균 평점을 계산하는 트랜잭션을 실행해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/aggregation?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_aggregation_hl=ko.txt"}
{"question": "Java에서 특정 레스토랑의 평점을 가져오는 코드는 어떻게 되나요?", "answer": "Java에서 특정 레스토랑의 평점을 가져오는 코드는 다음과 같습니다: `db.collection(\"restaurants\").document(\"arinell-pizza\").collection(\"ratings\").get();`", "sources": ["https://firebase.google.com/docs/firestore/solutions/aggregation?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_aggregation_hl=ko.txt"}
{"question": "Swift에서 레스토랑의 평점을 추가하는 트랜잭션을 어떻게 구현하나요?", "answer": "Swift에서 레스토랑의 평점을 추가하는 트랜잭션은 `addRatingTransaction(restaurantRef: DocumentReference, rating: Float)` 함수를 사용하여 구현합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/aggregation?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_aggregation_hl=ko.txt"}
{"question": "Objective-C에서 레스토랑의 평점을 추가하는 트랜잭션 코드는 어떻게 되나요?", "answer": "Objective-C에서 레스토랑의 평점을 추가하는 트랜잭션 코드는 다음과 같습니다: ```objc - (void)addRatingTransactionWithRestaurantReference:(FIRDocumentReference *)restaurant rating:(float)rating { // 트랜잭션 코드 구현 } ```", "sources": ["https://firebase.google.com/docs/firestore/solutions/aggregation?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_aggregation_hl=ko.txt"}
{"question": "Kotlin에서 레스토랑의 평점을 추가하는 트랜잭션은 어떻게 작성하나요?", "answer": "Kotlin에서 레스토랑의 평점을 추가하는 트랜잭션은 다음과 같이 작성합니다: ```kotlin val newAvgRating = (oldRatingTotal + rating) / newNumRatings ```", "sources": ["https://firebase.google.com/docs/firestore/solutions/aggregation?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_aggregation_hl=ko.txt"}
{"question": "쓰기 시간 집계의 장점은 무엇인가요?", "answer": "쓰기 시간 집계의 장점은 실시간 업데이트를 지원하고, 클라이언트 측 캐시에 집계 결과를 저장할 수 있다는 점입니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/aggregation?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_aggregation_hl=ko.txt"}
{"question": "Cloud Firestore에서 집계 쿼리에 대한 자세한 내용은 어디에서 확인할 수 있나요?", "answer": "Cloud Firestore에서 집계 쿼리에 대한 자세한 내용은 \"집계 쿼리로 데이터 요약\" 문서를 참조하면 됩니다.", "sources": ["https://firebase.google.com/docs/firestore/query-data/aggregation-queries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_aggregation_hl=ko.txt"}
{"question": "분산 카운터를 만들기 위해 필요한 샤드 수는 어떻게 결정하나요?", "answer": "샤드 수는 분산 카운터의 성능을 좌우합니다. 샤드가 너무 적으면 일부 트랜잭션을 재시도해야 하므로 쓰기 작업이 느려지고, 샤드가 너무 많으면 읽기가 느려지고 비용이 증가합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/counters?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_counters_hl=ko.txt"}
{"question": "분산 카운터를 초기화하는 방법은 무엇인가요?", "answer": "분산 카운터를 초기화하려면, 문서 참조와 샤드 수를 사용하여 각 샤드를 카운트 0으로 설정하는 방법을 사용합니다. 예를 들어, Python에서는 `init_counter` 메서드를 사용하여 샤드를 초기화할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/counters?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_counters_hl=ko.txt"}
{"question": "카운터를 증가시키는 방법은 무엇인가요?", "answer": "카운터를 증가시키려면 무작위로 선택된 샤드를 업데이트하여 카운트를 증가시킵니다. 예를 들어, Python에서는 `increment_counter` 메서드를 사용하여 무작위 샤드를 선택하고 카운트를 1 증가시킬 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/counters?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_counters_hl=ko.txt"}
{"question": "전체 카운트를 가져오는 방법은 무엇인가요?", "answer": "전체 카운트를 가져오려면 모든 샤드를 쿼리하고 각 샤드의 카운트 필드를 합산합니다. Python에서는 `get_count` 메서드를 사용하여 이를 수행할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/counters?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_counters_hl=ko.txt"}
{"question": "분산 카운터의 샤드 구조는 어떻게 되나요?", "answer": "분산 카운터는 '샤드'로 이루어진 하위 컬렉션을 갖는 문서로 구성되며, 카운터의 값은 샤드 값의 합계입니다. 각 샤드는 독립적으로 카운트를 증가시킬 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/counters?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_counters_hl=ko.txt"}
{"question": "분산 카운터를 구현할 때의 주요 고려사항은 무엇인가요?", "answer": "분산 카운터를 구현할 때는 샤드 수와 비용을 고려해야 합니다. 샤드 수가 적으면 쓰기 작업이 느려지고, 샤드 수가 많으면 읽기 비용이 증가합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/counters?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_counters_hl=ko.txt"}
{"question": "Objective-C에서 카운터를 초기화하는 방법은 무엇인가요?", "answer": "Objective-C에서는 `createCounterAtReference` 메서드를 사용하여 카운터를 초기화하고, 각 샤드를 카운트 0으로 설정합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/counters?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_counters_hl=ko.txt"}
{"question": "Node.js에서 카운터를 증가시키는 방법은 무엇인가요?", "answer": "Node.js에서는 `incrementCounter` 함수를 사용하여 무작위로 선택된 샤드를 업데이트하고 카운트를 증가시킵니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/counters?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_counters_hl=ko.txt"}
{"question": "분산 카운터의 성능을 높이기 위한 방법은 무엇인가요?", "answer": "분산 카운터의 성능을 높이기 위해서는 샤드 수를 늘려서 쓰기 처리량을 선형적으로 증가시킬 수 있습니다. 예를 들어, 10개의 샤드를 사용하면 기존 카운터보다 10배 많은 쓰기를 처리할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/counters?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_counters_hl=ko.txt"}
{"question": "분산 카운터의 비용은 어떻게 발생하나요?", "answer": "분산 카운터의 비용은 샤드 수에 따라 선형으로 증가합니다. 카운터 값을 읽을 때 전체 샤드 하위 컬렉션이 로드되어야 하므로, 샤드 수가 많을수록 비용이 증가합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/counters?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_counters_hl=ko.txt"}
{"question": "호출 가능한 Cloud 함수를 사용하여 전체 컬렉션을 삭제하는 방법은 무엇인가요?", "answer": "호출 가능한 Cloud 함수를 사용하여 전체 컬렉션을 삭제하려면, `recursiveDelete` 함수를 구현하고, 해당 함수를 모바일 앱이나 웹사이트에서 호출하여 문서 및 컬렉션을 재귀적으로 삭제할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/delete-collections?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_delete-collections_hl=ko.txt"}
{"question": "`recursiveDelete` 함수의 주요 기능은 무엇인가요?", "answer": "`recursiveDelete` 함수는 지정된 경로에 있는 문서 또는 컬렉션을 재귀적으로 삭제하며, 호출하는 사용자는 인증되어야 하고, 인증 토큰에 \"admin\" 속성이 true로 설정되어 있어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/delete-collections?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_delete-collections_hl=ko.txt"}
{"question": "Cloud 함수를 호출하기 위해 필요한 권한은 무엇인가요?", "answer": "Cloud 함수를 호출하기 위해서는 사용자가 인증되어 있어야 하며, 인증 토큰에 \"admin\" 속성이 true로 설정되어 있어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/delete-collections?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_delete-collections_hl=ko.txt"}
{"question": "Firebase CLI를 사용하여 컬렉션을 삭제하는 방법은 무엇인가요?", "answer": "Firebase CLI를 사용하여 컬렉션을 삭제하려면 `firestore:delete` 명령어를 사용하여 지정된 경로에 있는 모든 문서를 찾아 개별적으로 삭제할 수 있습니다. 이 과정에서 읽기 및 삭제 비용이 발생합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/delete-collections?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_delete-collections_hl=ko.txt"}
{"question": "`recursiveDelete` 함수의 코드 예시는 어떻게 되나요?", "answer": "`recursiveDelete` 함수의 코드 예시는 다음과 같습니다: ```javascript exports.recursiveDelete = functions .runWith({ timeoutSeconds: 540, memory: '2GB' }) ```", "sources": ["https://firebase.google.com/docs/firestore/solutions/delete-collections?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_delete-collections_hl=ko.txt"}
{"question": "Cloud 함수에서 삭제 작업이 원자적이지 않다는 것은 무슨 의미인가요?", "answer": "Cloud 함수에서 삭제 작업이 원자적이지 않다는 것은, 삭제 작업이 중간에 실패할 수 있으며, 일부 문서만 삭제되고 나머지는 삭제되지 않을 수 있음을 의미합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/delete-collections?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_delete-collections_hl=ko.txt"}
{"question": "`deleteAtPath` 함수의 사용 예시는 무엇인가요?", "answer": "`deleteAtPath` 함수는 다음과 같이 사용됩니다: ```java fun deleteAtPath(path: String) { val deleteFn = Firebase.functions.getHttpsCallable(\"recursiveDelete\") deleteFn.call(hashMapOf(\"path\" to path)) } ```", "sources": ["https://firebase.google.com/docs/firestore/solutions/delete-collections?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_delete-collections_hl=ko.txt"}
{"question": "Firebase CLI를 사용하여 데이터를 삭제할 때 주의해야 할 점은 무엇인가요?", "answer": "Firebase CLI를 사용하여 데이터를 삭제할 때는 읽기 및 삭제 비용이 발생하므로, 비용을 고려해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/delete-collections?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_delete-collections_hl=ko.txt"}
{"question": "Cloud 함수의 메모리 및 타임아웃 설정은 어떻게 되나요?", "answer": "Cloud 함수의 메모리는 '2GB'로 설정되고, 타임아웃은 540초로 설정됩니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/delete-collections?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_delete-collections_hl=ko.txt"}
{"question": "호출 가능한 Cloud 함수를 배포하고 데모를 사용하려면 어디를 참조해야 하나요?", "answer": "호출 가능한 Cloud 함수를 배포하고 데모를 사용하려면 샘플 코드를 참조해야 하며, 해당 샘플 코드는 GitHub에서 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/delete-collections?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_delete-collections_hl=ko.txt"}
{"question": "Firestore Lite를 사용하기 위한 기본적인 가져오기 방법은 무엇인가요?", "answer": "Firestore Lite는 모듈형 SDK의 일부로 NPM을 통해 제공됩니다. 다음과 같은 import 구문을 사용하여 가져올 수 있습니다: ```javascript import { initializeApp } from \"firebase/app\"; import { getFirestore, getDoc, updateDoc } from \"firebase/firestore/lite\"; ```", "sources": ["https://firebase.google.com/docs/firestore/solutions/firestore-lite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_firestore-lite_hl=ko.txt"}
{"question": "Firestore Lite에서 지원되지 않는 API 기능은 무엇인가요?", "answer": "Firestore Lite에는 DocumentSnapshot 이벤트 핸들러, 지속성 도우미, Firestore 번들과 관련된 메서드가 포함되지 않습니다. 구체적으로는 onSnapshot 메서드, enableIndexedDBPersistence, loadBundle 메서드 등이 생략되어 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/firestore-lite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_firestore-lite_hl=ko.txt"}
{"question": "Firestore Lite의 장점은 무엇인가요?", "answer": "Firestore Lite는 라이브러리 크기를 줄이고 시작 시간을 단축시킬 수 있는 장점이 있습니다. 이는 기본적인 만들기, 읽기, 업데이트, 삭제 작업만 사용하는 앱에 적합합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/firestore-lite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_firestore-lite_hl=ko.txt"}
{"question": "Firestore Lite는 어떤 사용 사례에 적합한가요?", "answer": "Firestore Lite는 실시간 업데이트와 연결이 필요 없는 앱, 그리고 전체 자바스크립트 번들 크기를 축소하려는 경우에 적합합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/firestore-lite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_firestore-lite_hl=ko.txt"}
{"question": "Firestore Lite에서 문서를 가져오는 방법은 무엇인가요?", "answer": "Firestore Lite를 사용하여 문서를 가져오려면 `getDoc` 함수를 사용합니다. 예를 들어, 특정 문서를 가져오려면 다음과 같은 코드를 사용할 수 있습니다: ```javascript const db = getFirestore(); const docRef = doc(db, \"collectionName\", \"documentId\"); const docSnap = await getDoc(docRef); ```", "sources": ["https://firebase.google.com/docs/firestore/solutions/firestore-lite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_firestore-lite_hl=ko.txt"}
{"question": "Firestore Lite에서 문서를 업데이트하는 방법은 무엇인가요?", "answer": "Firestore Lite에서 문서를 업데이트하려면 `updateDoc` 함수를 사용합니다. 예를 들어, 문서를 업데이트하려면 다음과 같은 코드를 사용할 수 있습니다: ```javascript const db = getFirestore(); const docRef = doc(db, \"collectionName\", \"documentId\"); await updateDoc(docRef, { fieldName: \"newValue\" }); ```", "sources": ["https://firebase.google.com/docs/firestore/solutions/firestore-lite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_firestore-lite_hl=ko.txt"}
{"question": "Firestore Lite의 오프라인 지원은 어떻게 되나요?", "answer": "Firestore Lite는 관리형 오프라인 지원 기능이 생략되어 있습니다. 따라서 오프라인 캐싱이나 실시간 업데이트 기능이 필요 없는 앱에 적합합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/firestore-lite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_firestore-lite_hl=ko.txt"}
{"question": "Firestore Lite를 사용하기 전에 어떤 내용을 이해해야 하나요?", "answer": "Firestore Lite를 사용하기 전에 전체 특성 세트와 표준 Firestore Web API, 그리고 Firestore의 오프라인 기능을 이해해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/firestore-lite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_firestore-lite_hl=ko.txt"}
{"question": "Firestore Lite의 크기와 속도에 대한 고려사항은 무엇인가요?", "answer": "Firestore Lite는 크기 및 속도를 위해 특정 기능이 생략되어 있으며, 이는 라이브러리 크기 감소 및 시작 시간 단축이라는 장점을 제공합니다. 그러나 이러한 기능을 포기할지 여부는 사용자의 필요에 따라 결정해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/firestore-lite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_firestore-lite_hl=ko.txt"}
{"question": "Firestore Lite의 모듈형 SDK에 대한 정보는 어디에서 찾을 수 있나요?", "answer": "Firestore Lite는 모듈형 SDK의 일부로 제공되며, 이에 대한 자세한 정보는 다음 링크에서 확인할 수 있습니다: [모듈형 SDK](https://firebase.google.com/docs/web/learn-more?hl=ko#modular-version).", "sources": ["https://firebase.google.com/docs/firestore/solutions/firestore-lite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_firestore-lite_hl=ko.txt"}
{"question": "벡터 검색을 위해 Firestore에 임베딩을 저장하는 방법은 무엇인가요?", "answer": "Firestore에 임베딩을 저장하기 위해 지원되는 SDK 중 하나를 사용해야 합니다. NodeJS SDK를 사용하여 임베딩을 저장할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/generative-ai-index?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_generative-ai-index_hl=ko.txt"}
{"question": "벡터 검색을 위한 첫 번째 단계는 무엇인가요?", "answer": "벡터 검색을 활용하는 첫 번째 단계는 벡터 임베딩을 생성하는 것입니다. 임베딩은 텍스트, 이미지, 동영상과 같은 여러 종류의 데이터 표현으로, 시맨틱 또는 구문적 유사성을 캡처합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/generative-ai-index?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_generative-ai-index_hl=ko.txt"}
{"question": "Firestore에서 벡터 색인을 만드는 방법은 무엇인가요?", "answer": "벡터 색인을 만들기 위해서는 gcloud 명령줄 도구를 사용해야 합니다. 이는 프리뷰 출시 중에 해당됩니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/generative-ai-index?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_generative-ai-index_hl=ko.txt"}
{"question": "벡터 검색을 수행하기 위해 어떤 함수를 사용해야 하나요?", "answer": "벡터 검색을 수행하기 위해서는 컬렉션 참조에 대해 find_nearest 호출을 활용해야 하며, 저장된 임베딩을 비교할 쿼리 벡터 임베딩을 전달하고 활용하려는 거리 함수를 지정해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/generative-ai-index?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_generative-ai-index_hl=ko.txt"}
{"question": "Firebase 확장 프로그램을 사용하여 벡터 검색 기능을 어떻게 활용할 수 있나요?", "answer": "Firebase 확장 프로그램을 사용하여 Firestore 문서를 자동으로 삽입하고 쿼리하여 벡터 검색 기능을 활용할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/generative-ai-index?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_generative-ai-index_hl=ko.txt"}
{"question": "LangChain과 Firestore의 통합은 어떤 용도로 사용되나요?", "answer": "Firestore를 LangChain의 벡터 저장소, 문서 로더 또는 채팅 메시지 기록 소스로 사용하여 생성형 AI 애플리케이션 또는 검색 증강 생성(RAG) 워크플로를 빌드하는 데 사용됩니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/generative-ai-index?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_generative-ai-index_hl=ko.txt"}
{"question": "Genkit은 어떤 기능을 제공하나요?", "answer": "Genkit는 프로덕션에 즉시 사용 가능한 AI 기반 앱 빌드, 배포, 모니터링을 지원하며, 커스텀 콘텐츠 생성, 시맨틱 검색, 비즈니스 데이터를 바탕으로 질문에 답하는 등의 작업을 수행할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/generative-ai-index?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_generative-ai-index_hl=ko.txt"}
{"question": "벡터 검색의 핵심 워크플로는 몇 단계로 구성되어 있나요?", "answer": "벡터 검색의 핵심 워크플로는 4단계로 구성되어 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/generative-ai-index?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_generative-ai-index_hl=ko.txt"}
{"question": "Vertex AI Text Embeddings API는 어떤 역할을 하나요?", "answer": "Vertex AI Text Embeddings API는 벡터 임베딩을 생성하는 데 사용되는 서비스입니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/generative-ai-index?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_generative-ai-index_hl=ko.txt"}
{"question": "Firestore 벡터 검색에 대한 더 많은 정보는 어디에서 찾을 수 있나요?", "answer": "Firestore 벡터 검색에 대한 더 많은 정보는 벡터 검색 가이드를 참조하면 됩니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/generative-ai-index?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_generative-ai-index_hl=ko.txt"}
{"question": "Geohash란 무엇인가요?", "answer": "Geohash는 (latitude, longitude) 쌍을 단일 Base32 문자열로 인코딩하기 위한 시스템으로, 세계를 직사각형 그리드로 나누어 위치 정보를 효율적으로 저장하고 쿼리할 수 있게 해줍니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/geoqueries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_geoqueries_hl=ko.txt"}
{"question": "Geohash를 사용하여 Firestore에 문서를 저장하는 방법은 무엇인가요?", "answer": "Geohash를 사용하여 문서를 저장하려면, 각 문서에 대해 Geohash 필드를 저장해야 합니다. 예를 들어, Kotlin에서는 `val hash = GeoFireUtils.getGeoHashForLocation(GeoLocation(lat, lng))`를 사용하여 Geohash를 계산하고, 이를 문서에 업데이트합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/geoqueries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_geoqueries_hl=ko.txt"}
{"question": "Firestore에서 특정 위치 근처의 문서를 쿼리하는 방법은 무엇인가요?", "answer": "특정 위치 근처의 문서를 쿼리하려면, Geohash를 사용하여 쿼리 집합을 조인한 후, 거짓 양성을 필터링합니다. 예를 들어, Kotlin에서는 `db.collection(\"cities\").orderBy(\"geohash\").startAt(b.startHash).endAt(b.endHash)`를 사용하여 쿼리를 수행합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/geoqueries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_geoqueries_hl=ko.txt"}
{"question": "Geohash를 계산하기 위한 도우미 라이브러리는 어떻게 설치하나요?", "answer": "Geohash를 계산하기 위한 도우미 라이브러리는 Android의 경우 `implementation 'com.firebase:geofire-android-common:3.2.0'`를 app/build.gradle에 추가하여 설치할 수 있습니다. Java의 경우는 `implementation 'com.firebase:geofire-android-common:3.1.0'`를 추가합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/geoqueries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_geoqueries_hl=ko.txt"}
{"question": "Firestore에서 Geohash를 사용하여 50km 이내의 도시를 찾는 방법은 무엇인가요?", "answer": "50km 이내의 도시를 찾기 위해서는 Geohash 쿼리 경계를 계산하고, 각 경계에 대해 쿼리를 수행한 후, 문서의 위치와 중심 간의 거리를 계산하여 필터링합니다. 예를 들어, Java에서는 `GeoQueryBounds bounds = GeoFireUtils.getGeoHashQueryBounds(center, radiusInM)`를 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/geoqueries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_geoqueries_hl=ko.txt"}
{"question": "Geohash를 사용하여 쿼리할 때의 장점은 무엇인가요?", "answer": "Geohash를 사용하면 위치별로 문서를 효율적으로 저장하고 쿼리할 수 있으며, 단일 색인 생성 필드만 있으면 되기 때문에 쿼리 성능이 향상됩니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/geoqueries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_geoqueries_hl=ko.txt"}
{"question": "Geohash의 프리픽스 해시란 무엇인가요?", "answer": "Geohash의 프리픽스 해시는 32개 구획 중 하나를 지정하는 문자열의 각 문자를 의미하며, 두 해시 간의 공유 프리픽스가 길수록 서로 더 가까운 위치에 있음을 나타냅니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/geoqueries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_geoqueries_hl=ko.txt"}
{"question": "Geohash를 사용하여 문서를 업데이트하는 코드 예시는 무엇인가요?", "answer": "문서를 업데이트할 때는 Geohash를 계산한 후, 예를 들어 Java에서는 `londonRef.update(updates)`를 사용하여 Geohash와 위치 정보를 업데이트합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/geoqueries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_geoqueries_hl=ko.txt"}
{"question": "Geohash를 사용한 쿼리에서 거짓 양성을 필터링하는 방법은 무엇인가요?", "answer": "Geohash를 사용한 쿼리에서 거짓 양성을 필터링하기 위해, 쿼리 결과에서 각 문서의 위치와 중심 간의 거리를 계산하고, 지정된 반경 내에 있는 문서만 선택합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/geoqueries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_geoqueries_hl=ko.txt"}
{"question": "Geohash를 사용하여 위치 기반 쿼리를 수행할 때 필요한 데이터는 무엇인가요?", "answer": "Geohash를 사용하여 위치 기반 쿼리를 수행하기 위해서는 각 문서에 Geohash, 위도(lat), 경도(lng) 필드가 필요합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/geoqueries?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_geoqueries_hl=ko.txt"}
{"question": "Cloud Firestore에서 BigQuery와 통합하는 방법은 무엇인가요?", "answer": "Firebase Extensions를 사용하여 Cloud Firestore의 데이터를 BigQuery와 통합할 수 있습니다. 이 솔루션은 데이터를 대량으로 분석해야 하는 경우에 유용합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/bigquery?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_hl=ko.txt"}
{"question": "AI 기반 챗봇을 Firebase에 추가하는 방법은 무엇인가요?", "answer": "Firebase Extensions를 사용하여 앱에 AI 기반 챗봇을 추가할 수 있습니다. 이 챗봇은 고객 서비스를 개선하거나 새로운 기능 또는 서비스를 마케팅하는 데 사용될 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/ai-chatbot?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_hl=ko.txt"}
{"question": "Firebase에서 텍스트 데이터를 처리하는 방법은 무엇인가요?", "answer": "Firebase Extensions를 사용하여 텍스트 데이터를 마이닝하고 분석할 수 있습니다. 이 확장 프로그램은 텍스트 요약, 유해한 음성 감지, 텍스트 번역 등을 지원합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/enriched-text?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_hl=ko.txt"}
{"question": "미디어 스트림을 분석하는 방법은 무엇인가요?", "answer": "Firebase Extensions를 사용하여 미디어 스트림을 마이닝하고 분석할 수 있습니다. 이 솔루션은 이미지를 분류하거나 음성을 텍스트로 변환하는 데 유용합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/enriched-media?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_hl=ko.txt"}
{"question": "Firestore Lite를 사용하는 이유는 무엇인가요?", "answer": "Firestore Lite는 오프라인 캐시가 필요 없고 데이터베이스에 온라인 액세스만 필요한 경우에 적합합니다. 이를 통해 로드 시간이 빠른 소규모 웹 앱을 빌드할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/firestore-lite?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_hl=ko.txt"}
{"question": "Cloud Firestore에서 집계 쿼리를 작성하는 방법은 무엇인가요?", "answer": "트랜잭션과 Cloud Functions를 사용하여 Cloud Firestore에 데이터 집계를 작성할 수 있습니다. 이를 통해 여러 컬렉션에서 데이터를 쿼리할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/aggregation?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_hl=ko.txt"}
{"question": "분산 카운터를 구현하는 방법은 무엇인가요?", "answer": "업데이트를 여러 '카운터' 하위 컬렉션으로 분산하여 Cloud Firestore에서 높은 빈도로 문서를 업데이트할 수 있습니다. 이 솔루션은 찬성 투표와 같은 카운터를 추가하는 데 유용합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/counters?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_hl=ko.txt"}
{"question": "전체 텍스트 검색을 구현하는 방법은 무엇인가요?", "answer": "Cloud Firestore 문서에 포함된 텍스트를 검색하기 위해 전체 텍스트 검색 솔루션을 사용할 수 있습니다. 이를 통해 사용자가 문서 및 컬렉션의 개별 필드에 포함된 텍스트를 검색할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/search?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_hl=ko.txt"}
{"question": "사용자 접속 상태를 구현하는 방법은 무엇인가요?", "answer": "사용자 연결 여부를 식별하는 접속 상태 시스템을 추가하여 앱에 연결된 사용자를 식별할 수 있습니다. 예를 들어, 채팅 앱에서 온라인 상태의 사용자 목록을 관리할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/presence?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_hl=ko.txt"}
{"question": "사용자 및 그룹의 데이터 액세스를 어떻게 보안할 수 있나요?", "answer": "보안 규칙을 작성하여 사용자 역할을 기준으로 개별 문서에 대한 액세스를 제어할 수 있습니다. 이를 통해 부적절한 데이터 액세스의 위험을 최소화할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/role-based-access?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_hl=ko.txt"}
{"question": "Cloud Firestore에서 역할 기반 액세스 제어를 설정하는 방법은 무엇인가요?", "answer": "Cloud Firestore의 데이터 모델과 커스텀 보안 규칙을 활용하여 역할 기반의 액세스 제어를 설정할 수 있습니다. 예를 들어, 각 스토리 문서에 대해 소유자, 작성자, 댓글 작성자, 독자와 같은 역할을 정의하고, 각 역할에 따라 읽기 및 쓰기 권한을 설정할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/role-based-access?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_role-based-access_hl=ko.txt"}
{"question": "스토리 문서의 데이터 구조는 어떻게 되나요?", "answer": "각 스토리 문서는 stories 컬렉션에 위치하며, 각 문서에는 스토리의 댓글을 포함하는 comments 하위 컬렉션이 있습니다. 또한, 역할에 대한 사용자 ID를 매핑하는 roles 필드를 추가하여 액세스 역할을 추적합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/role-based-access?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_role-based-access_hl=ko.txt"}
{"question": "댓글 작성자가 가질 수 있는 권한은 무엇인가요?", "answer": "댓글 작성자는 독자의 모든 액세스 권한을 보유하며, 스토리에 댓글을 추가할 수 있는 권한도 가집니다. 즉, 댓글 작성자는 스토리의 내용을 수정할 수는 없지만 댓글을 작성할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/role-based-access?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_role-based-access_hl=ko.txt"}
{"question": "소유자가 가질 수 있는 권한은 무엇인가요?", "answer": "소유자는 스토리를 모두 수정할 수 있으며, 다른 사용자의 액세스 권한을 제어할 수 있는 권한을 가집니다. 즉, 소유자는 스토리의 내용을 변경하고, 다른 사용자에게 역할을 부여하거나 제거할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/role-based-access?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_role-based-access_hl=ko.txt"}
{"question": "독자는 어떤 권한을 가지고 있나요?", "answer": "독자는 스토리와 댓글을 볼 수만 있으며, 아무 것도 수정할 수 없습니다. 즉, 독자는 읽기 전용 권한만을 가집니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/role-based-access?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_role-based-access_hl=ko.txt"}
{"question": "Cloud Firestore에서 댓글을 생성할 수 있는 조건은 무엇인가요?", "answer": "댓글을 생성할 수 있는 조건은 사용자가 스토리의 roles 필드에서 'owner', 'writer', 또는 'commenter' 역할을 가지고 있어야 하며, 요청된 댓글 데이터의 user 필드가 현재 인증된 사용자 ID와 일치해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/role-based-access?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_role-based-access_hl=ko.txt"}
{"question": "Cloud Firestore의 보안 규칙에서 'isOneOfRoles' 함수는 어떤 역할을 하나요?", "answer": "'isOneOfRoles' 함수는 특정 문서의 역할이 주어진 역할 목록 중 하나와 일치하는지를 확인하는 데 사용됩니다. 이를 통해 사용자의 액세스 권한을 검증할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/role-based-access?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_role-based-access_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 업데이트할 수 있는 조건은 무엇인가요?", "answer": "문서를 업데이트할 수 있는 조건은 사용자가 'owner' 역할을 가지고 있거나, 'writer' 역할을 가지고 있으며 오직 콘텐츠만 변경된 경우입니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/role-based-access?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_role-based-access_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 삭제할 수 있는 조건은 무엇인가요?", "answer": "문서를 삭제할 수 있는 조건은 사용자가 'owner' 역할을 가지고 있어야 합니다. 즉, 소유자만이 해당 문서를 삭제할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/role-based-access?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_role-based-access_hl=ko.txt"}
{"question": "서버 클라이언트 라이브러리를 사용할 때의 주의사항은 무엇인가요?", "answer": "서버 클라이언트 라이브러리는 모든 Cloud Firestore Security Rules를 우회하므로, Google 애플리케이션 기본 사용자 인증 정보를 통해 인증해야 합니다. 따라서 IAM을 설정해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/role-based-access?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_role-based-access_hl=ko.txt"}
{"question": "Cloud Firestore 데이터 내보내기를 예약하기 위해 필요한 사전 작업은 무엇인가요?", "answer": "Cloud Firestore 데이터 내보내기를 예약하기 위해서는 Google Cloud 프로젝트에 결제를 사용 설정해야 하며, Firebase 프로젝트는 Blaze 요금제로 업그레이드되어야 합니다. 또한, 내보내기 작업에는 Cloud Storage 버킷이 필요합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/schedule-export?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_schedule-export_hl=ko.txt"}
{"question": "Cloud Functions를 사용하여 Cloud Firestore 데이터 내보내기를 예약하는 방법은 무엇인가요?", "answer": "Cloud Functions를 사용하여 데이터 내보내기를 예약하려면 Firebase CLI를 설치하고, 새 디렉터리에서 Cloud Functions용 CLI를 초기화한 후, `functions/index.js` 파일에 내보내기 작업을 위한 코드를 작성해야 합니다. 예를 들어, `.schedule('every 24 hours')`를 사용하여 내보내기 일정을 설정할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/schedule-export?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_schedule-export_hl=ko.txt"}
{"question": "Cloud Scheduler 작업을 만들기 위한 절차는 어떻게 되나요?", "answer": "Cloud Scheduler 작업을 만들기 위해 Google Cloud 콘솔의 Cloud Scheduler 페이지로 이동하여 작업 만들기를 클릭하고, 작업의 이름과 빈도를 입력한 후, Pub/Sub를 선택하고 주제 필드에 Cloud 함수와 함께 정의한 Pub/Sub 주제의 이름을 입력합니다. 마지막으로 페이로드 필드에 'start export'를 입력하고 작업을 생성합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/schedule-export?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_schedule-export_hl=ko.txt"}
{"question": "Cloud Functions에 내보내기 작업을 시작하고 Cloud Storage 버킷에 쓸 수 있는 권한을 부여하는 방법은 무엇인가요?", "answer": "Cloud Functions에 권한을 부여하기 위해 기본 서비스 계정에 'Cloud Datastore Import Export Admin' 역할과 버킷에 대한 'Owner' 또는 'Storage Admin' 역할을 할당해야 합니다. 이를 위해 gcloud 및 gsutil 명령줄 도구를 사용할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/schedule-export?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_schedule-export_hl=ko.txt"}
{"question": "내보내기 작업의 진행률을 확인하는 방법은 무엇인가요?", "answer": "내보내기 작업의 진행률을 확인하려면 `gcloud firestore operations list` 명령어를 사용하면 됩니다. 이 명령어를 통해 내보내기 및 가져오기 작업을 관리할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/schedule-export?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_schedule-export_hl=ko.txt"}
{"question": "Cloud Firestore에서 데이터를 내보낼 때 발생하는 읽기 작업은 어떻게 처리되나요?", "answer": "Cloud Firestore에서 데이터를 내보내면 내보낸 문서당 하나의 읽기 작업이 수행됩니다. 그러나 이러한 읽기는 Console의 사용량 섹션에 표시되지 않으므로 예상치 못한 요금이 청구되지 않도록 주의해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/schedule-export?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_schedule-export_hl=ko.txt"}
{"question": "Cloud Storage 버킷을 만들 때 주의해야 할 점은 무엇인가요?", "answer": "Cloud Storage 버킷은 Cloud Firestore 데이터베이스 위치와 가까운 위치에 만들어야 하며, 요청자 지불 버킷을 사용할 수 없습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/schedule-export?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_schedule-export_hl=ko.txt"}
{"question": "Cloud Functions의 로그를 확인하는 방법은 무엇인가요?", "answer": "Cloud Functions의 로그를 확인하려면 Firebase Console의 Cloud Functions 페이지로 이동하거나 Google Cloud 콘솔의 Cloud Functions 페이지에서 로그 뷰어를 열어 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/schedule-export?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_schedule-export_hl=ko.txt"}
{"question": "Firebase CLI를 설치하는 방법은 무엇인가요?", "answer": "Firebase CLI를 설치하려면 Firebase 문서에서 제공하는 설치 안내를 따라야 하며, 일반적으로 npm을 사용하여 설치할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/schedule-export?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_schedule-export_hl=ko.txt"}
{"question": "Cloud Firestore 데이터 내보내기를 위한 Cloud Functions의 코드 예시는 무엇인가요?", "answer": "Cloud Functions의 코드 예시는 다음과 같습니다: ```javascript .schedule('every 24 hours') .onRun((context) => { return client.exportDocuments({ name: databaseName, outputUriPrefix: bucket, collectionIds: [] // 지정된 컬렉션 그룹만 내보내도록 수정 }); }); ```", "sources": ["https://firebase.google.com/docs/firestore/solutions/schedule-export?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_schedule-export_hl=ko.txt"}
{"question": "샤딩된 타임스탬프를 사용해야 하는 이유는 무엇인가요?", "answer": "샤딩된 타임스탬프는 Cloud Firestore의 쓰기 속도가 초당 500회로 제한되는 문제를 해결하기 위해 사용됩니다. 단조롭게 증가하거나 감소하는 색인이 지정된 필드가 포함된 문서 컬렉션에서 이 제한이 적용되기 때문입니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/shard-timestamp?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_shard-timestamp_hl=ko.txt"}
{"question": "샤딩된 타임스탬프를 구현하기 위한 기본 단계는 무엇인가요?", "answer": "샤딩된 타임스탬프를 구현하기 위해서는 shard 필드와 timestamp 필드를 함께 추가하고, 쓰기 로직을 업데이트하여 각 문서에 shard 값을 임의로 할당해야 합니다. 또한, 쿼리를 업데이트하여 샤딩된 결과 집합을 집계하고, 기존의 복합 색인을 삭제한 후 새로운 복합 색인을 만들어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/shard-timestamp?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_shard-timestamp_hl=ko.txt"}
{"question": "샤딩된 타임스탬프를 사용하여 쓰기 제한을 어떻게 증가시킬 수 있나요?", "answer": "shard 필드에 고유한 값을 할당하여 컬렉션에 대한 쓰기 제한을 500*n으로 증가시킬 수 있습니다. 여기서 n은 shard 필드에 할당된 고유한 값의 수입니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/shard-timestamp?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_shard-timestamp_hl=ko.txt"}
{"question": "샤딩된 타임스탬프를 사용하는 쿼리의 예시는 무엇인가요?", "answer": "쿼리 예시는 다음과 같습니다: ```javascript function createQuery(fieldName, fieldOperator, fieldValue, limit = 5) { return fs.collection('instruments') .where('shard', 'in', shardChunk)  // new shard condition .where(fieldName, fieldOperator, fieldValue) .orderBy('timestamp', 'desc') .limit(limit) .get(); } ```", "sources": ["https://firebase.google.com/docs/firestore/solutions/shard-timestamp?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_shard-timestamp_hl=ko.txt"}
{"question": "Firebase Console에서 복합 색인을 삭제하는 방법은 무엇인가요?", "answer": "Firebase Console에서 Cloud Firestore 복합 색인 페이지로 이동한 후, timestamp 필드가 포함된 색인 항목별로 more_vert 버튼과 삭제를 차례로 클릭하여 삭제할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/shard-timestamp?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_shard-timestamp_hl=ko.txt"}
{"question": "Firebase CLI를 사용하여 색인 정의 파일을 수정하는 방법은 무엇인가요?", "answer": "Firebase CLI에서 색인 정의 파일의 fieldOverrides 섹션에 shard 필드와 timestamp 필드를 포함하는 색인 정의를 추가하여 수정할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/shard-timestamp?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_shard-timestamp_hl=ko.txt"}
{"question": "timestamp 필드를 샤딩하면 어떤 장점이 있나요?", "answer": "timestamp 필드를 샤딩하면 Cloud Firestore에서 워크로드를 여러 태블릿에 효율적으로 분할할 수 있어, 단일 태블릿에서 발생할 수 있는 핫스팟 문제를 해결할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/shard-timestamp?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_shard-timestamp_hl=ko.txt"}
{"question": "샤딩된 타임스탬프를 구현할 때 주의해야 할 점은 무엇인가요?", "answer": "샤딩된 타임스탬프를 구현할 때는 쓰기 속도가 지속적으로 초당 500회가 넘는 경우에만 적용해야 하며, 그렇지 않으면 조기에 최적화될 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/shard-timestamp?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_shard-timestamp_hl=ko.txt"}
{"question": "Cloud Firestore의 표준 제한사항을 확인할 수 있는 링크는 무엇인가요?", "answer": "Cloud Firestore의 표준 제한사항은 다음 링크에서 확인할 수 있습니다: [표준 제한사항](https://firebase.google.com/docs/firestore/quotas?hl=ko#limits)", "sources": ["https://firebase.google.com/docs/firestore/quotas?hl=ko#limits"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_shard-timestamp_hl=ko.txt"}
{"question": "샤딩된 타임스탬프를 사용한 실제 사용 사례는 무엇인가요?", "answer": "샤딩된 타임스탬프는 금융 상품을 거의 실시간으로 분석하는 앱에서 사용될 수 있으며, 이 앱은 instruments 컬렉션에 문서를 씁니다.", "sources": ["https://firebase.google.com/docs/firestore/solutions/shard-timestamp?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_solutions_shard-timestamp_hl=ko.txt"}
{"question": "TTL 정책을 구성하기 위해 Google Cloud Console에서 어떤 단계를 따라야 하나요?", "answer": "Google Cloud 콘솔에서 데이터베이스 페이지로 이동한 후, 데이터베이스 목록에서 필요한 데이터베이스를 선택하고 탐색 메뉴에서 TTL(수명)을 클릭한 다음, 정책 만들기를 클릭하여 컬렉션 그룹 이름과 타임스탬프 필드 이름을 입력하고 만들기를 클릭합니다.", "sources": ["https://firebase.google.com/docs/firestore/ttl?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_ttl_hl=ko.txt"}
{"question": "TTL 필드의 데이터 유형은 무엇이어야 하나요?", "answer": "TTL 필드는 Date and time 유형이어야 하며, 필드 값을 설정하지 않거나 다른 데이터 유형을 사용하면 개별 문서에 TTL이 사용 중지됩니다.", "sources": ["https://firebase.google.com/docs/firestore/ttl?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_ttl_hl=ko.txt"}
{"question": "TTL 정책을 사용 설정한 후 데이터 삭제는 언제 이루어지나요?", "answer": "TTL 정책을 사용 설정한 후, 만료된 문서는 일반적으로 만료일로부터 24시간 이내에 삭제됩니다. 그러나 삭제는 즉시 처리되지 않으며, 쿼리 및 조회 요청에 계속 표시됩니다.", "sources": ["https://firebase.google.com/docs/firestore/ttl?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_ttl_hl=ko.txt"}
{"question": "TTL 정책을 사용 중지하려면 어떤 절차를 따라야 하나요?", "answer": "Google Cloud 콘솔에서 데이터베이스 페이지로 이동한 후, TTL 정책 테이블에서 해당 정책 행을 찾아 삭제(휴지통) 버튼을 클릭하고 삭제를 클릭하여 확인합니다.", "sources": ["https://firebase.google.com/docs/firestore/ttl?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_ttl_hl=ko.txt"}
{"question": "gcloud CLI를 사용하여 TTL 정책을 구성하는 명령어는 무엇인가요?", "answer": "TTL 정책을 구성하기 위해서는 `gcloud firestore fields ttls update ttl_field --collection-group=collection_group_name --enable-ttl` 명령어를 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/ttl?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_ttl_hl=ko.txt"}
{"question": "TTL 필드에서 색인을 생성하지 않으면 어떤 영향을 미치나요?", "answer": "TTL 필드에서 색인을 생성하지 않으면, 타임스탬프 필드의 색인을 생성할 때 발생할 수 있는 핫스팟 문제를 피할 수 있습니다. 핫스팟은 좁은 문서 범위에 대한 높은 읽기, 쓰기, 삭제 속도를 의미합니다.", "sources": ["https://firebase.google.com/docs/firestore/ttl?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_ttl_hl=ko.txt"}
{"question": "TTL 정책을 수정하기 위해 필요한 권한은 무엇인가요?", "answer": "TTL 정책을 수정하기 위해서는 `datastore.indexes.update` 권한이 필요합니다.", "sources": ["https://firebase.google.com/docs/firestore/ttl?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_ttl_hl=ko.txt"}
{"question": "TTL 정책을 사용 설정한 후, 빈 데이터베이스에서 설정이 완료되기까지 걸리는 시간은 얼마인가요?", "answer": "빈 데이터베이스에서도 TTL 정책을 사용 설정하는 데 10분 이상 걸릴 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/ttl?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_ttl_hl=ko.txt"}
{"question": "TTL 삭제 작업의 상태를 확인하기 위해 어떤 gcloud 명령어를 사용하나요?", "answer": "TTL 작업의 상태를 확인하기 위해 `gcloud firestore operations list` 명령어를 사용합니다.", "sources": ["https://firebase.google.com/docs/firestore/ttl?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_ttl_hl=ko.txt"}
{"question": "TTL 정책을 통해 삭제된 문서의 하위 컬렉션은 어떻게 되나요?", "answer": "TTL을 통해 문서를 삭제해도 해당 문서의 하위 컬렉션은 삭제되지 않습니다.", "sources": ["https://firebase.google.com/docs/firestore/ttl?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_ttl_hl=ko.txt"}
{"question": "Cloud Firestore에서 CMEK를 사용하기 위해 어떤 단계를 수행해야 하나요?", "answer": "Cloud Firestore CMEK 기능에 대한 액세스를 요청하고, Cloud Firestore 서비스 에이전트를 만들거나 가져오며, CMEK 키를 만들고 해당 키의 IAM 설정을 구성해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/use-cmek?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_use-cmek_hl=ko.txt"}
{"question": "Cloud Firestore 서비스 에이전트를 어떻게 만들 수 있나요?", "answer": "`gcloud beta services identity create --service=firestore.googleapis.com --project FIRESTORE_PROJECT` 명령어를 실행하여 Cloud Firestore에서 사용자 대신 CMEK 키에 액세스하는 데 사용하는 서비스 에이전트를 만들 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/use-cmek?hl=ko#create-service-agent"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_use-cmek_hl=ko.txt"}
{"question": "CMEK 키를 만들기 위한 IAM 설정은 어떻게 구성하나요?", "answer": "Google Cloud Console에서 IAM 페이지로 이동하여 Cloud Firestore 서비스 에이전트의 이메일 형식 ID를 입력하고 Cloud KMS CryptoKey 암호화/복호화 역할을 선택한 후 저장을 클릭하여 IAM 설정을 구성할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/use-cmek?hl=ko#set-iam"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_use-cmek_hl=ko.txt"}
{"question": "CMEK로 보호되는 Cloud Firestore 데이터베이스를 만들기 위한 gcloud 명령어는 무엇인가요?", "answer": "`gcloud firestore databases create --location=FIRESTORE_DATABASE_LOCATION --database=DATABASE_ID --kms-key-name=KMS_KEY_NAME --project=FIRESTORE_PROJECT` 명령어를 사용하여 CMEK로 보호되는 데이터베이스를 만들 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/use-cmek?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_use-cmek_hl=ko.txt"}
{"question": "CMEK 키의 전체 리소스 이름 형식은 어떻게 되나요?", "answer": "CMEK 키의 전체 리소스 이름은 `projects/KMS_PROJECT/locations/KMS_LOCATION/keyRings/KMS_KEYRING_ID/cryptoKeys/KMS_KEY_ID` 형식이어야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/use-cmek?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_use-cmek_hl=ko.txt"}
{"question": "CMEK 보호 데이터베이스를 복원할 때 어떤 플래그를 사용해야 하나요?", "answer": "CMEK 암호화로 복원하려면 `--encryption-type=customer-managed-encryption` 및 `--kms-key-name=KMS_KEY_NAME` 플래그를 사용해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/use-cmek?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_use-cmek_hl=ko.txt"}
{"question": "Cloud Firestore 데이터베이스의 CMEK 구성을 확인하는 방법은 무엇인가요?", "answer": "`gcloud firestore databases describe --database=DATABASE_ID --project=FIRESTORE_PROJECT` 명령어를 사용하여 데이터베이스 CMEK 구성을 확인할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/use-cmek?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_use-cmek_hl=ko.txt"}
{"question": "CMEK 조직 정책을 구성하는 방법은 무엇인가요?", "answer": "`gcloud resource-manager org-policies deny gcp.restrictNonCmekServices is:firestore.googleapis.com --project=FIRESTORE_PROJECT` 명령어를 사용하여 CMEK를 요구하도록 조직 정책을 구성할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/use-cmek?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_use-cmek_hl=ko.txt"}
{"question": "CMEK 보호 데이터베이스를 클론할 때 어떤 명령어를 사용하나요?", "answer": "`gcloud alpha firestore databases clone --encryption-type=customer-managed-encryption --kms-key-name=KMS_KEY_NAME` 명령어를 사용하여 CMEK 암호화로 클론할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/use-cmek?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_use-cmek_hl=ko.txt"}
{"question": "Cloud KMS 데이터 액세스 감사 로그를 설정하는 방법은 무엇인가요?", "answer": "Google Cloud Console에서 Cloud Logging으로 이동하여 쿼리 빌더에 `resource.type=\"cloudkms_cryptokey\"`를 추가하여 로그 항목을 Cloud KMS로 제한할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/use-cmek?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_use-cmek_hl=ko.txt"}
{"question": "Cloud Firestore REST API를 사용하여 문서에 CRUD 작업을 수행하는 방법은 무엇인가요?", "answer": "Cloud Firestore REST API를 사용하여 문서에 CRUD 작업을 수행하려면 `v1.projects.databases.documents` 메서드를 사용합니다. 이 메서드는 데이터 추가 또는 데이터 가져오기 가이드에 설명된 내용과 유사하게 작동합니다.", "sources": ["https://firebase.google.com/docs/firestore/use-rest-api?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_use-rest-api_hl=ko.txt"}
{"question": "Cloud Firestore REST API를 호출하기 위해 필요한 인증 방법은 무엇인가요?", "answer": "Cloud Firestore REST API는 Firebase Authentication ID 토큰이나 Google ID OAuth 2.0 토큰을 사용하여 인증합니다. Firebase ID 토큰은 애플리케이션 사용자의 요청을 인증하는 데 사용되며, Google ID OAuth 2.0 토큰은 데이터베이스 관리 요청을 인증하는 데 사용됩니다.", "sources": ["https://firebase.google.com/docs/firestore/use-rest-api?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_use-rest-api_hl=ko.txt"}
{"question": "Firebase ID 토큰을 획득하는 방법은 무엇인가요?", "answer": "Firebase ID 토큰은 Firebase Authentication REST API를 사용하여 생성하거나, Firebase Authentication SDK에서 사용자의 Firebase ID 토큰을 가져오는 방법으로 획득할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/use-rest-api?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_use-rest-api_hl=ko.txt"}
{"question": "Cloud Firestore REST API의 기본 URL은 무엇인가요?", "answer": "Cloud Firestore REST API의 기본 URL은 `https://firestore.googleapis.com/v1/`입니다.", "sources": ["https://firebase.google.com/docs/firestore/use-rest-api?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_use-rest-api_hl=ko.txt"}
{"question": "Cloud Firestore REST API에서 문서의 경로를 어떻게 구성하나요?", "answer": "문서의 경로는 `/projects/YOUR_PROJECT_ID/databases/(default)/documents/cities/LA`와 같은 구조를 사용하여 구성합니다. 여기서 `YOUR_PROJECT_ID`는 프로젝트 ID로 대체해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/use-rest-api?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_use-rest-api_hl=ko.txt"}
{"question": "Cloud Firestore REST API에서 발생할 수 있는 오류 코드와 그에 대한 권장 작업은 무엇인가요?", "answer": "예를 들어, `ABORTED` 오류는 요청이 다른 요청과 충돌했음을 나타내며, 요청을 다시 시도하거나 데이터 모델을 다시 구조화하여 경합을 줄이는 것이 권장됩니다.", "sources": ["https://firebase.google.com/docs/firestore/use-rest-api?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_use-rest-api_hl=ko.txt"}
{"question": "Cloud Firestore REST API를 사용하여 색인 관련 작업을 수행하는 방법은 무엇인가요?", "answer": "색인 관련 작업은 `v1.projects.databases.collectionGroups.indexes` 메서드를 사용하여 수행할 수 있으며, 이를 통해 색인을 새로 만들거나 기존 색인을 사용 중지하고 현재 색인을 나열할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/use-rest-api?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_use-rest-api_hl=ko.txt"}
{"question": "Cloud Firestore REST API를 테스트하는 가장 좋은 방법은 무엇인가요?", "answer": "Cloud Firestore REST API를 테스트하는 가장 좋은 방법은 API Explorer를 사용하는 것입니다. API Explorer는 자동으로 Google ID OAuth 2.0 토큰을 생성하여 API를 검사할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/use-rest-api?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_use-rest-api_hl=ko.txt"}
{"question": "Google ID OAuth 2.0 토큰을 생성하는 방법은 무엇인가요?", "answer": "Google API 클라이언트 라이브러리를 사용하거나, gcloud 명령줄 도구의 `gcloud auth application-default print-access-token` 명령어를 사용하여 Google ID OAuth 2.0 토큰을 생성할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/use-rest-api?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_use-rest-api_hl=ko.txt"}
{"question": "Cloud Firestore REST API에서 요청을 인증하기 위해 설정해야 하는 토큰 범위는 무엇인가요?", "answer": "Cloud Firestore REST API에서 요청을 인증하기 위해 설정해야 하는 토큰 범위는 `https://www.googleapis.com/auth/datastore`입니다.", "sources": ["https://firebase.google.com/docs/firestore/use-rest-api?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_use-rest-api_hl=ko.txt"}
{"question": "Firebase Console에서 Cloud Firestore의 데이터를 어떻게 추가하나요?", "answer": "Firebase Console에서 데이터를 추가하려면 컬렉션 추가를 클릭한 다음 컬렉션 이름을 입력하고 다음을 클릭합니다. 특정 문서 ID를 입력하거나 자동 ID를 클릭한 다음 문서에 데이터 필드를 추가하고 저장을 클릭합니다. 새로운 컬렉션 및 문서가 데이터 뷰어에 나타납니다.", "sources": ["https://firebase.google.com/docs/firestore/using-console?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_using-console_hl=ko.txt"}
{"question": "Cloud Firestore에서 문서를 삭제하는 방법은 무엇인가요?", "answer": "문서를 삭제하려면 삭제하려는 문서를 선택하고 문서 세부정보 열의 맨 위에 있는 메뉴 아이콘을 클릭한 다음 문서 삭제를 선택합니다. 문서를 삭제하면 하위 컬렉션을 포함하여 해당 문서의 모든 중첩 데이터가 삭제됩니다.", "sources": ["https://firebase.google.com/docs/firestore/using-console?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_using-console_hl=ko.txt"}
{"question": "Firebase Console에서 Cloud Firestore의 쿼리 빌더를 사용하는 방법은 무엇인가요?", "answer": "Cloud Firestore 데이터 페이지로 이동한 후 쿼리 빌더 탭을 클릭합니다. 쿼리 범위를 선택하고 단일 컬렉션을 쿼리하려면 컬렉션을 선택하여 텍스트 필드에 컬렉션 경로를 입력합니다. 쿼리에 추가를 클릭하여 반환된 문서 모음을 필터링할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/using-console?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_using-console_hl=ko.txt"}
{"question": "Cloud Firestore에서 존재하지 않는 상위 문서가 표시되는 경우 어떻게 처리하나요?", "answer": "존재하지 않는 상위 문서가 콘솔에 나타나는 경우에도 쿼리나 스냅샷에는 표시되지 않습니다. 쿼리 결과에 포함하려면 문서를 만들어야 합니다. 존재하지 않는 상위 문서의 문서 ID는 기울임꼴로 표시됩니다.", "sources": ["https://firebase.google.com/docs/firestore/using-console?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_using-console_hl=ko.txt"}
{"question": "Cloud Firestore의 Security Rules를 관리하는 방법은 무엇인가요?", "answer": "Firebase Console에서 Cloud Firestore Security Rules을 추가, 수정, 삭제하려면 Cloud Firestore 섹션의 규칙 탭으로 이동합니다. 규칙 설정 및 맞춤설정에 대한 자세한 내용은 관련 문서를 참조하세요.", "sources": ["https://firebase.google.com/docs/firestore/using-console?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_using-console_hl=ko.txt"}
{"question": "Cloud Firestore에서 색인을 관리하는 방법은 무엇인가요?", "answer": "Firebase Console에서 쿼리에 대해 새로운 색인을 만들고 기존 색인을 관리하려면 Cloud Firestore 섹션에서 색인 탭으로 이동합니다. 색인 관리에 대한 자세한 내용은 관련 문서를 참조하세요.", "sources": ["https://firebase.google.com/docs/firestore/using-console?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_using-console_hl=ko.txt"}
{"question": "Cloud Firestore에서 데이터를 수정하는 방법은 무엇인가요?", "answer": "컬렉션을 클릭하여 문서를 표시한 다음 문서를 클릭하여 필드 및 하위 컬렉션을 봅니다. 값을 편집할 필드를 클릭하고, 선택한 문서에 필드 또는 하위 컬렉션을 추가하려면 필드 추가 또는 컬렉션 추가를 클릭합니다.", "sources": ["https://firebase.google.com/docs/firestore/using-console?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_using-console_hl=ko.txt"}
{"question": "Cloud Firestore의 사용량을 모니터링하는 방법은 무엇인가요?", "answer": "Firebase Console에서 Cloud Firestore 사용량 탭을 열어 Cloud Firestore 사용량을 모니터링할 수 있습니다. 대시보드를 사용하여 여러 기간에 걸친 사용량을 측정할 수 있습니다.", "sources": ["https://firebase.google.com/docs/firestore/using-console?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_using-console_hl=ko.txt"}
{"question": "Cloud Firestore에서 쿼리 요구사항 및 제한사항은 무엇인가요?", "answer": "모든 쿼리는 1개 이상의 색인에서 지원해야 하며, ORDER BY 절은 WHERE 절의 필드와 일치해야 합니다. 범위 쿼리 절은 동일한 필드에서 필터링되어야 하며, 추가 제한사항은 쿼리 제한사항 문서를 참조해야 합니다.", "sources": ["https://firebase.google.com/docs/firestore/using-console?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_using-console_hl=ko.txt"}
{"question": "Firebase Console에서 특정 경로의 문서나 컬렉션을 여는 방법은 무엇인가요?", "answer": "특정 경로의 문서나 컬렉션을 열려면 경로 수정 버튼을 사용하여 경로를 입력하고 해당 항목에서 중첩된 데이터를 엽니다.", "sources": ["https://firebase.google.com/docs/firestore/using-console?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_using-console_hl=ko.txt"}
{"question": "Cloud Firestore에 벡터 임베딩을 저장하는 방법은 무엇인가요?", "answer": "Cloud Firestore에 벡터 임베딩을 저장하기 위해서는 Firestore 클라이언트를 사용하여 컬렉션을 선택하고, 문서에 벡터 임베딩을 포함한 데이터를 추가하면 됩니다. 예를 들어, Python에서는 다음과 같이 작성할 수 있습니다: ```python from google.cloud import firestore from google.cloud.firestore_v1.vector import Vector firestore_client = firestore.Client() collection = firestore_client.collection(\"coffee-beans\") doc = { \"name\": \"Kahawa coffee beans\", \"description\": \"Information about the Kahawa coffee beans.\", \"embedding_field\": Vector([0.18332680, 0.24160706, 0.3416704]), } collection.add(doc) ```", "sources": ["https://firebase.google.com/docs/firestore/vector-search?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_vector-search_hl=ko.txt"}
{"question": "벡터 색인을 만들기 위한 gcloud 명령어는 무엇인가요?", "answer": "벡터 색인을 만들기 위해서는 다음과 같은 gcloud 명령어를 사용할 수 있습니다: ```bash gcloud firestore indexes composite create \\ --collection-group=collection-group \\ --query-scope=COLLECTION \\ --field-config field-path=vector-field,vector-config='{\"dimension\":\"DIMENSION\", \"flat\": \"{}\"}' \\ --database=database-id ``` 여기서 `collection-group`은 컬렉션 그룹의 ID, `vector-field`는 벡터 임베딩이 포함된 필드의 이름입니다.", "sources": ["https://firebase.google.com/docs/firestore/vector-search?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_vector-search_hl=ko.txt"}
{"question": "Cloud Firestore에서 최근접 이웃 쿼리를 수행하는 방법은 무엇인가요?", "answer": "최근접 이웃 쿼리를 수행하기 위해서는 `find_nearest` 메서드를 사용합니다. 예를 들어, Python에서는 다음과 같이 작성할 수 있습니다: ```python from google.cloud.firestore_v1.base_vector_query import DistanceMeasure from google.cloud.firestore_v1.vector import Vector collection = db.collection(\"coffee-beans\") vector_query = collection.find_nearest( vector_field=\"embedding_field\", query_vector=Vector([0.3416704, 0.18332680, 0.24160706]), distance_measure=DistanceMeasure.EUCLIDEAN, limit=5, ) ```", "sources": ["https://firebase.google.com/docs/firestore/vector-search?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_vector-search_hl=ko.txt"}
{"question": "벡터 거리 측정 옵션에는 어떤 것들이 있나요?", "answer": "벡터 거리 측정 옵션으로는 EUCLIDEAN, COSINE, DOT_PRODUCT가 있습니다. EUCLIDEAN은 벡터 사이의 유클리드 거리를 측정하고, COSINE은 벡터 사이의 각도를 기준으로 유사성을 측정하며, DOT_PRODUCT는 벡터의 크기에 영향을 받습니다.", "sources": ["https://firebase.google.com/docs/firestore/vector-search?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_vector-search_hl=ko.txt"}
{"question": "Cloud Firestore에서 벡터 임베딩을 계산하고 저장하기 위해 Cloud 함수를 설정하는 방법은 무엇인가요?", "answer": "Cloud 함수를 설정하여 문서가 업데이트 또는 생성될 때마다 벡터 임베딩을 계산하고 저장할 수 있습니다. 예를 들어, Python에서는 다음과 같이 작성할 수 있습니다: ```python @functions_framework.cloud_event def store_embedding(cloud_event) -> None: firestore_payload = firestore.DocumentEventData() payload = firestore_payload._pb.ParseFromString(cloud_event.data) collection_id, doc_id = from_payload(payload) embedding = calculate_embedding(payload) doc = firestore_client.collection(collection_id).document(doc_id) doc.set({\"embedding_field\": embedding}, merge=True) ```", "sources": ["https://firebase.google.com/docs/firestore/vector-search?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_vector-search_hl=ko.txt"}
{"question": "벡터 색인을 삭제하는 방법은 무엇인가요?", "answer": "벡터 색인을 삭제하기 위해서는 다음과 같은 gcloud 명령어를 사용할 수 있습니다: ```bash gcloud firestore indexes composite delete index-id --database=database-id ``` 여기서 `index-id`는 삭제할 색인의 ID입니다.", "sources": ["https://firebase.google.com/docs/firestore/vector-search?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_vector-search_hl=ko.txt"}
{"question": "벡터 색인의 설명을 확인하는 방법은 무엇인가요?", "answer": "벡터 색인의 설명을 확인하기 위해서는 다음과 같은 gcloud 명령어를 사용할 수 있습니다: ```bash gcloud firestore indexes composite describe index-id --database=database-id ``` 여기서 `index-id`는 설명할 색인의 ID입니다.", "sources": ["https://firebase.google.com/docs/firestore/vector-search?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_vector-search_hl=ko.txt"}
{"question": "벡터 거리 검색 결과를 출력하는 방법은 무엇인가요?", "answer": "벡터 거리 검색 결과를 출력하기 위해서는 `distance_result_field` 속성을 사용하여 계산된 벡터 거리를 검색할 수 있습니다. 예를 들어, Python에서는 다음과 같이 작성할 수 있습니다: ```python vector_query = collection.find_nearest( vector_field=\"embedding_field\", query_vector=Vector([0.3416704, 0.18332680, 0.24160706]), distance_measure=DistanceMeasure.EUCLIDEAN, limit=10, distance_result_field=\"vector_distance\", ) docs = vector_query.stream() for doc in docs: print(f\"{doc.id}, Distance: {doc.get('vector_distance')}\") ```", "sources": ["https://firebase.google.com/docs/firestore/vector-search?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_vector-search_hl=ko.txt"}
{"question": "문서 사전 필터링을 사용하여 최근접 이웃을 찾는 방법은 무엇인가요?", "answer": "문서 사전 필터링을 사용하여 최근접 이웃을 찾기 위해서는 `where` 메서드를 사용하여 필터를 추가한 후 `find_nearest` 메서드를 호출합니다. 예를 들어, Python에서는 다음과 같이 작성할 수 있습니다: ```python vector_query = collection.where(\"color\", \"==\", \"red\").find_nearest( vector_field=\"embedding_field\", query_vector=Vector([0.3416704, 0.18332680, 0.24160706]), distance_measure=DistanceMeasure.EUCLIDEAN, limit=5, ) ```", "sources": ["https://firebase.google.com/docs/firestore/vector-search?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_vector-search_hl=ko.txt"}
{"question": "벡터 검색에서 거리 기준점을 설정하는 방법은 무엇인가요?", "answer": "벡터 검색에서 거리 기준점을 설정하기 위해서는 `distance_threshold` 속성을 사용하여 최대 거리 기준점을 지정할 수 있습니다. 예를 들어, Python에서는 다음과 같이 작성할 수 있습니다: ```python vector_query = collection.find_nearest( vector_field=\"embedding_field\", query_vector=Vector([0.3416704, 0.18332680, 0.24160706]), distance_measure=DistanceMeasure.EUCLIDEAN, limit=10, distance_threshold=4.5, ) ```", "sources": ["https://firebase.google.com/docs/firestore/vector-search?hl=ko"], "tags": "firebase", "last_verified": "2025-08-19", "source_file": "firebase.google.com_docs_firestore_vector-search_hl=ko.txt"}
